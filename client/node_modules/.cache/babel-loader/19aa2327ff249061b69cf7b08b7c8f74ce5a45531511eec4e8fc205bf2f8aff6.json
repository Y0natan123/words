{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./Practice.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Practice=_ref=>{let{words,onWordUpdated}=_ref;const[currentMode,setCurrentMode]=useState(null);// null = main menu, 'knowledge', 'flashcards'\nconst handleModeSelect=mode=>{setCurrentMode(mode);};const handleExit=()=>{setCurrentMode(null);};// Main menu\nif(currentMode===null){return/*#__PURE__*/_jsx(\"div\",{className:\"practice-main-menu\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"practice-menu-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Practice Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"practice-options\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"practice-option knowledge-check\",onClick:()=>handleModeSelect('knowledge'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"option-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Knowledge Check\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Test your knowledge level with interactive quizzes\"})]})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"practice-option flashcards\",onClick:()=>handleModeSelect('flashcards'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"option-icon\",children:\"\\uD83C\\uDCCF\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"option-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Flash Cards\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Traditional flash card practice mode\"})]})]})]})]})});}// Knowledge Check Mode\nif(currentMode==='knowledge'){return/*#__PURE__*/_jsx(KnowledgeCheck,{words:words,onWordUpdated:onWordUpdated,onExit:handleExit});}// Flash Cards Mode\nif(currentMode==='flashcards'){return/*#__PURE__*/_jsx(FlashCards,{words:words,onWordUpdated:onWordUpdated,onExit:handleExit});}return null;};// Knowledge Check Component with Kahoot-style design and learning algorithm\nconst KnowledgeCheck=_ref2=>{let{words,onWordUpdated,onExit}=_ref2;const[currentWordIndex,setCurrentWordIndex]=useState(0);const[showHebrew,setShowHebrew]=useState(false);const[selectedLevel,setSelectedLevel]=useState(null);const[practiceWords,setPracticeWords]=useState([]);const[isUpdating,setIsUpdating]=useState(false);const[localWords,setLocalWords]=useState([]);const[speechSupported,setSpeechSupported]=useState(false);const[sessionStats,setSessionStats]=useState({correct:0,total:0});const[showResult,setShowResult]=useState(false);const[answeredWord,setAnsweredWord]=useState(null);// Default to middle value\nuseEffect(()=>{// Create a local copy of words to prevent issues\nsetLocalWords([...words]);// Check if speech synthesis is supported\nif('speechSynthesis'in window){setSpeechSupported(true);}},[words]);// Load words using spaced repetition algorithm\nconst loadSpacedRepetitionWords=async()=>{try{// Get settings from localStorage\nconst savedSettings=localStorage.getItem('practiceSettings');const settings=savedSettings?JSON.parse(savedSettings):{maxFocusWords:5,focusPeriodDays:5,reviewIntervalDays:7,masteredReviewDays:14,sessionSize:15// New setting for session size\n};const response=await axios.get('/api/words/spaced-repetition',{params:settings});const{focusWords,reviewWords}=response.data;// Combine focus words and review words\nconst allWords=[...focusWords,...reviewWords];// Mark review words for special handling\nconst markedWords=allWords.map(word=>({...word,isReviewWord:reviewWords.some(rw=>rw.id===word.id)}));// Shuffle for variety\nconst shuffled=[...markedWords].sort(()=>Math.random()-0.5);// Limit session size based on settings\nconst sessionSize=settings.sessionSize||15;return shuffled.slice(0,sessionSize);}catch(error){console.error('Error loading spaced repetition words:',error);// Fallback to old algorithm if spaced repetition fails\nreturn createFallbackPracticeSet(localWords);}};// Fallback algorithm (original smart practice set)\nconst createFallbackPracticeSet=words=>{const availableWords=words.filter(word=>word.userLevel<5);if(availableWords.length===0)return[];// Get session size from settings\nconst savedSettings=localStorage.getItem('practiceSettings');const settings=savedSettings?JSON.parse(savedSettings):{sessionSize:15};const sessionSize=settings.sessionSize||15;const weightedWords=[];availableWords.forEach(word=>{const weight=Math.max(1,5-word.userLevel);for(let i=0;i<weight;i++){weightedWords.push(word);}});const shuffled=[...weightedWords].sort(()=>Math.random()-0.5);const limitedSessionSize=Math.min(sessionSize,shuffled.length);return shuffled.slice(0,limitedSessionSize);};useEffect(()=>{// Load words using spaced repetition algorithm\nconst loadWords=async()=>{if(localWords.length===0)return;const practiceSet=await loadSpacedRepetitionWords();setPracticeWords(practiceSet);// Reset state when words change\nif(practiceSet.length===0){setCurrentWordIndex(0);setShowHebrew(false);setSelectedLevel(null);}else if(currentWordIndex>=practiceSet.length){// If current index is out of bounds, reset to 0\nsetCurrentWordIndex(0);setShowHebrew(false);setSelectedLevel(null);}};loadWords();},[localWords]);const currentWord=practiceWords[currentWordIndex];// Keyboard shortcuts for fast rating\nuseEffect(()=>{const handleKeyPress=event=>{if(showResult||isUpdating)return;// Don't handle keys during result screen or while updating\nif(event.code==='Space'){event.preventDefault();if(speechSupported&&currentWord){speakWord(currentWord.english);}}else if(event.code==='Escape'){onExit();}else if(event.code>='Digit0'&&event.code<='Digit5'){// Handle number keys 0-5 for fast rating\nevent.preventDefault();const level=parseInt(event.code.replace('Digit',''));handleFastRating(level);}else if(event.code==='KeyH'){// H key to toggle Hebrew\nevent.preventDefault();setShowHebrew(!showHebrew);}};window.addEventListener('keydown',handleKeyPress);return()=>window.removeEventListener('keydown',handleKeyPress);},[showResult,isUpdating,speechSupported,currentWord,onExit,showHebrew]);// Manual speech synthesis function\nconst speakWord=word=>{if(!speechSupported||!word)return;// Stop any current speech\nwindow.speechSynthesis.cancel();const utterance=new SpeechSynthesisUtterance(word);utterance.lang='en-US';utterance.rate=0.8;utterance.pitch=1;utterance.volume=1;window.speechSynthesis.speak(utterance);};const handleFastRating=async level=>{if(!currentWord||isUpdating){return;}setIsUpdating(true);setSelectedLevel(level);setAnsweredWord(currentWord);// Store the word that was just answered\nsetShowResult(true);// Update session stats (consider level 3+ as \"correct\")\nconst isCorrect=level>=3;setSessionStats(prev=>({correct:prev.correct+(isCorrect?1:0),total:prev.total+1}));try{// Get settings for spaced repetition\nconst savedSettings=localStorage.getItem('spacedRepetitionSettings');const settings=savedSettings?JSON.parse(savedSettings):{};const response=await axios.post(`/api/words/${currentWord.id}/spaced-progress`,{userLevel:level,settings:settings});// Update the word in the parent component\nonWordUpdated(response.data);// For level 5, we don't immediately remove the word from local list\n// Instead, we update it and let the useEffect handle the filtering\nsetLocalWords(prev=>prev.map(word=>word.id===currentWord.id?{...word,userLevel:level}:word));// Show result screen for all levels - wait for user to click to continue\nsetTimeout(()=>{setIsUpdating(false);},300);// Brief delay to show feedback\n}catch(error){console.error('Error updating progress:',error);setSelectedLevel(null);setIsUpdating(false);alert('Failed to update progress. Please try again.');}};const handleNextWord=()=>{if(currentWordIndex<practiceWords.length-1){setCurrentWordIndex(prev=>prev+1);setShowHebrew(false);setSelectedLevel(null);setShowResult(false);setAnsweredWord(null);}else{// Session completed\nconst accuracy=Math.round(sessionStats.correct/sessionStats.total*100);alert(`Knowledge check completed!\\nAccuracy: ${accuracy}% (${sessionStats.correct}/${sessionStats.total})`);onExit();}};const getLevelColor=level=>{const colors=['#dc3545','#fd7e14','#ffc107','#20c997','#198754','#0d6efd'];return colors[Math.min(level,5)];};if(practiceWords.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"practice-fullscreen\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"exit-button\",onClick:onExit,children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"div\",{className:\"practice-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"no-words\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"No words available for practice\"}),/*#__PURE__*/_jsx(\"p\",{children:\"All your words are already mastered (Level 5) or you need to add more words.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onExit,children:\"Back to Menu\"})]})})]});}if(!currentWord){return/*#__PURE__*/_jsxs(\"div\",{className:\"practice-fullscreen\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"exit-button\",onClick:onExit,children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"div\",{className:\"practice-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"no-words\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"No words available for practice\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onExit,children:\"Back to Menu\"})]})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"kahoot-fullscreen\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"kahoot-exit-btn\",onClick:onExit,children:\"\\u2715\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"kahoot-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kahoot-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${(currentWordIndex+1)/practiceWords.length*100}%`}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"progress-text\",children:[currentWordIndex+1,\" / \",practiceWords.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"session-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat\",children:[\"\\u2705 \",sessionStats.correct]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat\",children:[\"\\uD83D\\uDCCA \",sessionStats.total]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"kahoot-content\",children:!showResult?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"kahoot-question\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"english-word\",children:currentWord.english}),showHebrew&&/*#__PURE__*/_jsx(\"div\",{className:\"hebrew-reveal\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"hebrew-word\",children:currentWord.hebrew})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"kahoot-slider-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"question-text\",children:\"How well do you know this word?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"slider-with-actions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left-side-actions\",children:[speechSupported&&/*#__PURE__*/_jsx(\"button\",{className:\"kahoot-audio-btn\",onClick:()=>speakWord(currentWord.english),title:\"Play pronunciation\",children:\"\\uD83D\\uDD0A   Play Audio\"}),/*#__PURE__*/_jsx(\"button\",{className:\"show-hebrew-btn\",onClick:()=>setShowHebrew(!showHebrew),disabled:isUpdating,children:showHebrew?'🙈 Hide Hebrew':'👁️ Show Hebrew'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"fast-rating-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"fast-rating-grid\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"fast-rating-btn level-0\",onClick:()=>handleFastRating(0),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"span\",{className:\"rating-emoji\",children:\"\\u274C\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-label\",children:\"Don't Know\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-key\",children:\"0\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fast-rating-btn level-1\",onClick:()=>handleFastRating(1),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"span\",{className:\"rating-emoji\",children:\"\\uD83E\\uDD14\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-label\",children:\"Beginner\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-key\",children:\"1\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fast-rating-btn level-2\",onClick:()=>handleFastRating(2),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"span\",{className:\"rating-emoji\",children:\"\\uD83D\\uDCDA\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-label\",children:\"Learning\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-key\",children:\"2\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fast-rating-btn level-3\",onClick:()=>handleFastRating(3),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"span\",{className:\"rating-emoji\",children:\"\\uD83D\\uDC4D\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-label\",children:\"Good\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-key\",children:\"3\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fast-rating-btn level-4\",onClick:()=>handleFastRating(4),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"span\",{className:\"rating-emoji\",children:\"\\u2B50\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-label\",children:\"Great\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-key\",children:\"4\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"fast-rating-btn level-5\",onClick:()=>handleFastRating(5),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"span\",{className:\"rating-emoji\",children:\"\\uD83C\\uDFC6\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-label\",children:\"Mastered\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-key\",children:\"5\"})]})]})})]})]})]}):/*#__PURE__*//* Result screen */_jsxs(\"div\",{className:\"kahoot-result\",onClick:handleNextWord,children:[/*#__PURE__*/_jsx(\"div\",{className:\"result-icon\",children:selectedLevel>=3?'🎉':'💪'}),/*#__PURE__*/_jsx(\"h2\",{children:selectedLevel>=3?'Great job!':'Keep practicing!'}),answeredWord&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"word-pair\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"english\",children:answeredWord.english}),/*#__PURE__*/_jsx(\"span\",{className:\"hebrew\",children:answeredWord.hebrew})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"level-result\",children:[\"You rated this as Level \",selectedLevel]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"click-to-continue\",children:/*#__PURE__*/_jsx(\"span\",{className:\"continue-text\",children:currentWordIndex<practiceWords.length-1?'Click anywhere to continue →':'Click to finish session'})})]})})]});};// Enhanced Flash Cards Component\nconst FlashCards=_ref3=>{let{words,onWordUpdated,onExit}=_ref3;const[currentWordIndex,setCurrentWordIndex]=useState(0);const[showAnswer,setShowAnswer]=useState(false);const[practiceWords,setPracticeWords]=useState([]);const[sessionStats,setSessionStats]=useState({total:0,reviewed:0,improved:0,declined:0});const[isUpdating,setIsUpdating]=useState(false);// Load words using the enhanced algorithm\nuseEffect(()=>{const loadFlashcardWords=async()=>{try{const settings=JSON.parse(localStorage.getItem('practiceSettings'))||{maxFocusWords:8,focusPeriodDays:5,reviewIntervalDays:7,masteredReviewDays:14};const response=await axios.get('/api/words/spaced-repetition',{params:settings});const{focusWords,reviewWords}=response.data;// Combine and shuffle words for flashcard practice\nconst allWords=[...focusWords,...reviewWords];const shuffled=allWords.sort(()=>Math.random()-0.5);setPracticeWords(shuffled);setSessionStats(prev=>({...prev,total:shuffled.length}));}catch(error){console.error('Error loading flashcard words:',error);// Fallback to all words if API fails\nconst allWords=words.sort(()=>Math.random()-0.5);setPracticeWords(allWords);setSessionStats(prev=>({...prev,total:allWords.length}));}};loadFlashcardWords();},[words]);const currentWord=practiceWords[currentWordIndex];const handleNext=()=>{if(currentWordIndex<practiceWords.length-1){setCurrentWordIndex(currentWordIndex+1);setShowAnswer(false);}};const handlePrevious=()=>{if(currentWordIndex>0){setCurrentWordIndex(currentWordIndex-1);setShowAnswer(false);}};const handleProgressUpdate=async newLevel=>{if(!currentWord||isUpdating)return;setIsUpdating(true);try{const settings=JSON.parse(localStorage.getItem('practiceSettings'))||{};const response=await axios.post(`/api/words/${currentWord.id}/spaced-progress`,{userLevel:newLevel,settings});onWordUpdated(response.data);// Update session stats\nconst oldLevel=currentWord.userLevel;setSessionStats(prev=>({...prev,reviewed:prev.reviewed+1,improved:newLevel>oldLevel?prev.improved+1:prev.improved,declined:newLevel<oldLevel?prev.declined+1:prev.declined}));// Auto-advance after a brief delay\nsetTimeout(()=>{handleNext();setIsUpdating(false);},800);}catch(error){console.error('Error updating progress:',error);setIsUpdating(false);}};const getLevelColor=level=>{const colors=['#dc3545','#fd7e14','#ffc107','#20c997','#198754','#0d6efd'];return colors[Math.min(level,5)];};const getLevelText=level=>{const texts=['New','Beginner','Learning','Good','Great','Confident'];return texts[Math.min(level,5)];};if(practiceWords.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"flashcards-fullscreen\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"flashcards-exit-btn\",onClick:onExit,children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flashcards-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flashcards-no-words\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"no-words-icon\",children:\"\\uD83D\\uDCDA\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"No words available for practice\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add some words to get started with flashcard practice!\"}),/*#__PURE__*/_jsx(\"button\",{className:\"flashcards-btn\",onClick:onExit,children:\"Back to Menu\"})]})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"flashcards-fullscreen\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"flashcards-exit-btn\",onClick:onExit,children:\"\\u2715\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flashcards-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${(currentWordIndex+1)/practiceWords.length*100}%`}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"progress-text\",children:[currentWordIndex+1,\" / \",practiceWords.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flashcards-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`flashcard-card ${showAnswer?'show-answer':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flashcard-question\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"flashcard-word\",children:currentWord===null||currentWord===void 0?void 0:currentWord.english}),/*#__PURE__*/_jsx(\"div\",{className:\"word-level\",children:/*#__PURE__*/_jsx(\"span\",{className:\"level-badge\",style:{backgroundColor:getLevelColor((currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0)},children:getLevelText((currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0)})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`flashcard-answer ${showAnswer?'visible':''}`,children:[/*#__PURE__*/_jsx(\"h3\",{className:\"hebrew-translation\",children:currentWord===null||currentWord===void 0?void 0:currentWord.hebrew}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"difficulty\",children:[\"Difficulty: \",(currentWord===null||currentWord===void 0?void 0:currentWord.difficulty)||1]}),/*#__PURE__*/_jsxs(\"span\",{className:\"reviews\",children:[\"Reviews: \",(currentWord===null||currentWord===void 0?void 0:currentWord.reviewCount)||0]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flashcards-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"control-btn prev-btn\",onClick:handlePrevious,disabled:currentWordIndex===0,children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"button\",{className:`control-btn main-btn ${showAnswer?'active':''}`,onClick:()=>setShowAnswer(!showAnswer),children:showAnswer?'Hide Answer':'Show Answer'}),/*#__PURE__*/_jsx(\"button\",{className:\"control-btn next-btn\",onClick:handleNext,disabled:currentWordIndex===practiceWords.length-1,children:\"\\u2192\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`flashcards-progress-controls ${showAnswer?'visible':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Update Knowledge Level\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"level-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"level-btn decrease\",onClick:()=>handleProgressUpdate(Math.max(0,((currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0)-1)),disabled:((currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0)===0||isUpdating,children:\"\\uD83D\\uDCC9 Decrease\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-level\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"level-number\",children:[\"Level \",(currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0]}),/*#__PURE__*/_jsx(\"span\",{className:\"level-name\",children:getLevelText((currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0)})]}),/*#__PURE__*/_jsx(\"button\",{className:\"level-btn increase\",onClick:()=>handleProgressUpdate(Math.min(5,((currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0)+1)),disabled:((currentWord===null||currentWord===void 0?void 0:currentWord.userLevel)||0)===5||isUpdating,children:\"\\uD83D\\uDCC8 Increase\"})]})]})]})]});};export default Practice;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Practice","_ref","words","onWordUpdated","currentMode","setCurrentMode","handleModeSelect","mode","handleExit","className","children","onClick","KnowledgeCheck","onExit","FlashCards","_ref2","currentWordIndex","setCurrentWordIndex","showHebrew","setShowHebrew","selectedLevel","setSelectedLevel","practiceWords","setPracticeWords","isUpdating","setIsUpdating","localWords","setLocalWords","speechSupported","setSpeechSupported","sessionStats","setSessionStats","correct","total","showResult","setShowResult","answeredWord","setAnsweredWord","window","loadSpacedRepetitionWords","savedSettings","localStorage","getItem","settings","JSON","parse","maxFocusWords","focusPeriodDays","reviewIntervalDays","masteredReviewDays","sessionSize","response","get","params","focusWords","reviewWords","data","allWords","markedWords","map","word","isReviewWord","some","rw","id","shuffled","sort","Math","random","slice","error","console","createFallbackPracticeSet","availableWords","filter","userLevel","length","weightedWords","forEach","weight","max","i","push","limitedSessionSize","min","loadWords","practiceSet","currentWord","handleKeyPress","event","code","preventDefault","speakWord","english","level","parseInt","replace","handleFastRating","addEventListener","removeEventListener","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","lang","rate","pitch","volume","speak","isCorrect","prev","post","setTimeout","alert","handleNextWord","accuracy","round","getLevelColor","colors","style","width","hebrew","title","disabled","_ref3","showAnswer","setShowAnswer","reviewed","improved","declined","loadFlashcardWords","handleNext","handlePrevious","handleProgressUpdate","newLevel","oldLevel","getLevelText","texts","backgroundColor","difficulty","reviewCount"],"sources":["C:/Users/Magshimim/Documents/wordGame/Y0natan123.github.io/client/src/components/Practice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Practice.css';\n\nconst Practice = ({ words, onWordUpdated }) => {\n  const [currentMode, setCurrentMode] = useState(null); // null = main menu, 'knowledge', 'flashcards'\n\n  const handleModeSelect = (mode) => {\n    setCurrentMode(mode);\n  };\n\n  const handleExit = () => {\n    setCurrentMode(null);\n  };\n\n  // Main menu\n  if (currentMode === null) {\n    return (\n      <div className=\"practice-main-menu\">\n        <div className=\"practice-menu-container\">\n          <h1>Practice Mode</h1>\n          <div className=\"practice-options\">\n            <button \n              className=\"practice-option knowledge-check\"\n              onClick={() => handleModeSelect('knowledge')}\n            >\n              <div className=\"option-icon\">📊</div>\n              <div className=\"option-content\">\n                <h3>Knowledge Check</h3>\n                <p>Test your knowledge level with interactive quizzes</p>\n              </div>\n            </button>\n            \n            <button \n              className=\"practice-option flashcards\"\n              onClick={() => handleModeSelect('flashcards')}\n            >\n              <div className=\"option-icon\">🃏</div>\n              <div className=\"option-content\">\n                <h3>Flash Cards</h3>\n                <p>Traditional flash card practice mode</p>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Knowledge Check Mode\n  if (currentMode === 'knowledge') {\n    return <KnowledgeCheck words={words} onWordUpdated={onWordUpdated} onExit={handleExit} />;\n  }\n\n  // Flash Cards Mode\n  if (currentMode === 'flashcards') {\n    return <FlashCards words={words} onWordUpdated={onWordUpdated} onExit={handleExit} />;\n  }\n\n  return null;\n};\n\n// Knowledge Check Component with Kahoot-style design and learning algorithm\nconst KnowledgeCheck = ({ words, onWordUpdated, onExit }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showHebrew, setShowHebrew] = useState(false);\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [localWords, setLocalWords] = useState([]);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [sessionStats, setSessionStats] = useState({ correct: 0, total: 0 });\n  const [showResult, setShowResult] = useState(false);\n  const [answeredWord, setAnsweredWord] = useState(null);\n // Default to middle value\n\n  useEffect(() => {\n    // Create a local copy of words to prevent issues\n    setLocalWords([...words]);\n    \n    // Check if speech synthesis is supported\n    if ('speechSynthesis' in window) {\n      setSpeechSupported(true);\n    }\n  }, [words]);\n\n  // Load words using spaced repetition algorithm\n  const loadSpacedRepetitionWords = async () => {\n    try {\n      // Get settings from localStorage\n      const savedSettings = localStorage.getItem('practiceSettings');\n      const settings = savedSettings ? JSON.parse(savedSettings) : {\n        maxFocusWords: 5,\n        focusPeriodDays: 5,\n        reviewIntervalDays: 7,\n        masteredReviewDays: 14,\n        sessionSize: 15  // New setting for session size\n      };\n      \n      const response = await axios.get('/api/words/spaced-repetition', { params: settings });\n      const { focusWords, reviewWords } = response.data;\n      \n      // Combine focus words and review words\n      const allWords = [...focusWords, ...reviewWords];\n      \n      // Mark review words for special handling\n      const markedWords = allWords.map(word => ({\n        ...word,\n        isReviewWord: reviewWords.some(rw => rw.id === word.id)\n      }));\n      \n      // Shuffle for variety\n      const shuffled = [...markedWords].sort(() => Math.random() - 0.5);\n      \n      // Limit session size based on settings\n      const sessionSize = settings.sessionSize || 15;\n      return shuffled.slice(0, sessionSize);\n    } catch (error) {\n      console.error('Error loading spaced repetition words:', error);\n      // Fallback to old algorithm if spaced repetition fails\n      return createFallbackPracticeSet(localWords);\n    }\n  };\n\n  // Fallback algorithm (original smart practice set)\n  const createFallbackPracticeSet = (words) => {\n    const availableWords = words.filter(word => word.userLevel < 5);\n    if (availableWords.length === 0) return [];\n    \n    // Get session size from settings\n    const savedSettings = localStorage.getItem('practiceSettings');\n    const settings = savedSettings ? JSON.parse(savedSettings) : { sessionSize: 15 };\n    const sessionSize = settings.sessionSize || 15;\n    \n    const weightedWords = [];\n    availableWords.forEach(word => {\n      const weight = Math.max(1, 5 - word.userLevel);\n      for (let i = 0; i < weight; i++) {\n        weightedWords.push(word);\n      }\n    });\n    \n    const shuffled = [...weightedWords].sort(() => Math.random() - 0.5);\n    const limitedSessionSize = Math.min(sessionSize, shuffled.length);\n    return shuffled.slice(0, limitedSessionSize);\n  };\n\n  useEffect(() => {\n    // Load words using spaced repetition algorithm\n    const loadWords = async () => {\n      if (localWords.length === 0) return;\n      \n      const practiceSet = await loadSpacedRepetitionWords();\n      setPracticeWords(practiceSet);\n      \n      // Reset state when words change\n      if (practiceSet.length === 0) {\n        setCurrentWordIndex(0);\n        setShowHebrew(false);\n        setSelectedLevel(null);\n      } else if (currentWordIndex >= practiceSet.length) {\n        // If current index is out of bounds, reset to 0\n        setCurrentWordIndex(0);\n        setShowHebrew(false);\n        setSelectedLevel(null);\n      }\n    };\n    \n    loadWords();\n  }, [localWords]);\n\n  const currentWord = practiceWords[currentWordIndex];\n\n  // Keyboard shortcuts for fast rating\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (showResult || isUpdating) return; // Don't handle keys during result screen or while updating\n      \n      if (event.code === 'Space') {\n        event.preventDefault();\n        if (speechSupported && currentWord) {\n          speakWord(currentWord.english);\n        }\n      } else if (event.code === 'Escape') {\n        onExit();\n      } else if (event.code >= 'Digit0' && event.code <= 'Digit5') {\n        // Handle number keys 0-5 for fast rating\n        event.preventDefault();\n        const level = parseInt(event.code.replace('Digit', ''));\n        handleFastRating(level);\n      } else if (event.code === 'KeyH') {\n        // H key to toggle Hebrew\n        event.preventDefault();\n        setShowHebrew(!showHebrew);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [showResult, isUpdating, speechSupported, currentWord, onExit, showHebrew]);\n\n  // Manual speech synthesis function\n  const speakWord = (word) => {\n    if (!speechSupported || !word) return;\n    \n    // Stop any current speech\n    window.speechSynthesis.cancel();\n    \n    const utterance = new SpeechSynthesisUtterance(word);\n    utterance.lang = 'en-US';\n    utterance.rate = 0.8;\n    utterance.pitch = 1;\n    utterance.volume = 1;\n    \n    window.speechSynthesis.speak(utterance);\n  };\n\n  const handleFastRating = async (level) => {\n    if (!currentWord || isUpdating) {\n      return;\n    }\n    \n    setIsUpdating(true);\n    setSelectedLevel(level);\n    setAnsweredWord(currentWord); // Store the word that was just answered\n    setShowResult(true);\n    \n    // Update session stats (consider level 3+ as \"correct\")\n    const isCorrect = level >= 3;\n    setSessionStats(prev => ({\n      correct: prev.correct + (isCorrect ? 1 : 0),\n      total: prev.total + 1\n    }));\n    \n    try {\n      // Get settings for spaced repetition\n      const savedSettings = localStorage.getItem('spacedRepetitionSettings');\n      const settings = savedSettings ? JSON.parse(savedSettings) : {};\n      \n      const response = await axios.post(`/api/words/${currentWord.id}/spaced-progress`, {\n        userLevel: level,\n        settings: settings\n      });\n      \n      // Update the word in the parent component\n      onWordUpdated(response.data);\n      \n      // For level 5, we don't immediately remove the word from local list\n      // Instead, we update it and let the useEffect handle the filtering\n      setLocalWords(prev => \n        prev.map(word => \n          word.id === currentWord.id \n            ? { ...word, userLevel: level }\n            : word\n        )\n      );\n      \n      // Show result screen for all levels - wait for user to click to continue\n      setTimeout(() => {\n        setIsUpdating(false);\n      }, 300); // Brief delay to show feedback\n      \n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setSelectedLevel(null);\n      setIsUpdating(false);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n\n  const handleNextWord = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(prev => prev + 1);\n      setShowHebrew(false);\n      setSelectedLevel(null);\n      setShowResult(false);\n      setAnsweredWord(null);\n    } else {\n      // Session completed\n      const accuracy = Math.round((sessionStats.correct / sessionStats.total) * 100);\n      alert(`Knowledge check completed!\\nAccuracy: ${accuracy}% (${sessionStats.correct}/${sessionStats.total})`);\n      onExit();\n    }\n  };\n\n\n\n  const getLevelColor = (level) => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n\n  if (practiceWords.length === 0) {\n    return (\n      <div className=\"practice-fullscreen\">\n        <button className=\"exit-button\" onClick={onExit}>✕</button>\n        <div className=\"practice-content\">\n          <div className=\"no-words\">\n            <h2>No words available for practice</h2>\n            <p>All your words are already mastered (Level 5) or you need to add more words.</p>\n            <button onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentWord) {\n    return (\n      <div className=\"practice-fullscreen\">\n        <button className=\"exit-button\" onClick={onExit}>✕</button>\n        <div className=\"practice-content\">\n          <div className=\"no-words\">\n            <h2>No words available for practice</h2>\n            <button onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"kahoot-fullscreen\">\n      <button className=\"kahoot-exit-btn\" onClick={onExit}>✕</button>\n      \n      {/* Header with progress and stats */}\n      <div className=\"kahoot-header\">\n        <div className=\"kahoot-progress\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${((currentWordIndex + 1) / practiceWords.length) * 100}%` }}\n            ></div>\n          </div>\n          <span className=\"progress-text\">\n            {currentWordIndex + 1} / {practiceWords.length}\n          </span>\n        </div>\n        <div className=\"session-stats\">\n          <span className=\"stat\">✅ {sessionStats.correct}</span>\n          <span className=\"stat\">📊 {sessionStats.total}</span>\n        </div>\n      </div>\n\n      {/* Main content area */}\n      <div className=\"kahoot-content\">\n        {!showResult ? (\n          <>\n            {/* Question area */}\n            <div className=\"kahoot-question\">\n              <h1 className=\"english-word\">{currentWord.english}</h1>\n              \n              {showHebrew && (\n                <div className=\"hebrew-reveal\">\n                  <h2 className=\"hebrew-word\">{currentWord.hebrew}</h2>\n                </div>\n              )}\n            </div>\n\n            {/* Knowledge Rating Slider with Side Actions */}\n            <div className=\"kahoot-slider-section\">\n              <h3 className=\"question-text\">How well do you know this word?</h3>\n              \n              <div className=\"slider-with-actions\">\n                {/* Left side actions */}\n                <div className=\"left-side-actions\">\n                  {speechSupported && (\n                    <button \n                      className=\"kahoot-audio-btn\"\n                      onClick={() => speakWord(currentWord.english)}\n                      title=\"Play pronunciation\"\n                    >\n                      🔊   Play Audio\n                    </button>\n                  )}\n                  <button \n                    className=\"show-hebrew-btn\"\n                    onClick={() => setShowHebrew(!showHebrew)}\n                    disabled={isUpdating}\n                  >\n                    {showHebrew ? '🙈 Hide Hebrew' : '👁️ Show Hebrew'}\n                  </button>\n                </div>\n\n                {/* Fast Rating Buttons */}\n                <div className=\"fast-rating-container\">\n                  <div className=\"fast-rating-grid\">\n                    <button\n                      className=\"fast-rating-btn level-0\"\n                      onClick={() => handleFastRating(0)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">❌</span>\n                      <span className=\"rating-label\">Don't Know</span>\n                      <span className=\"rating-key\">0</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-1\"\n                      onClick={() => handleFastRating(1)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">🤔</span>\n                      <span className=\"rating-label\">Beginner</span>\n                      <span className=\"rating-key\">1</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-2\"\n                      onClick={() => handleFastRating(2)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">📚</span>\n                      <span className=\"rating-label\">Learning</span>\n                      <span className=\"rating-key\">2</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-3\"\n                      onClick={() => handleFastRating(3)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">👍</span>\n                      <span className=\"rating-label\">Good</span>\n                      <span className=\"rating-key\">3</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-4\"\n                      onClick={() => handleFastRating(4)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">⭐</span>\n                      <span className=\"rating-label\">Great</span>\n                      <span className=\"rating-key\">4</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-5\"\n                      onClick={() => handleFastRating(5)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">🏆</span>\n                      <span className=\"rating-label\">Mastered</span>\n                      <span className=\"rating-key\">5</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          /* Result screen */\n          <div className=\"kahoot-result\" onClick={handleNextWord}>\n            <div className=\"result-icon\">\n              {selectedLevel >= 3 ? '🎉' : '💪'}\n            </div>\n            <h2>\n              {selectedLevel >= 3 ? 'Great job!' : 'Keep practicing!'}\n            </h2>\n            {answeredWord && (\n              <div className=\"result-details\">\n                <div className=\"word-pair\">\n                  <span className=\"english\">{answeredWord.english}</span>\n                  <span className=\"hebrew\">{answeredWord.hebrew}</span>\n                </div>\n                <div className=\"level-result\">\n                  You rated this as Level {selectedLevel}\n                </div>\n              </div>\n            )}\n            \n            <div className=\"click-to-continue\">\n              <span className=\"continue-text\">\n                {currentWordIndex < practiceWords.length - 1 ? 'Click anywhere to continue →' : 'Click to finish session'}\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Flash Cards Component\nconst FlashCards = ({ words, onWordUpdated, onExit }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [sessionStats, setSessionStats] = useState({\n    total: 0,\n    reviewed: 0,\n    improved: 0,\n    declined: 0\n  });\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Load words using the enhanced algorithm\n  useEffect(() => {\n    const loadFlashcardWords = async () => {\n      try {\n        const settings = JSON.parse(localStorage.getItem('practiceSettings')) || {\n          maxFocusWords: 8,\n          focusPeriodDays: 5,\n          reviewIntervalDays: 7,\n          masteredReviewDays: 14\n        };\n        \n        const response = await axios.get('/api/words/spaced-repetition', { params: settings });\n        const { focusWords, reviewWords } = response.data;\n        \n        // Combine and shuffle words for flashcard practice\n        const allWords = [...focusWords, ...reviewWords];\n        const shuffled = allWords.sort(() => Math.random() - 0.5);\n        \n        setPracticeWords(shuffled);\n        setSessionStats(prev => ({ ...prev, total: shuffled.length }));\n      } catch (error) {\n        console.error('Error loading flashcard words:', error);\n        // Fallback to all words if API fails\n        const allWords = words.sort(() => Math.random() - 0.5);\n        setPracticeWords(allWords);\n        setSessionStats(prev => ({ ...prev, total: allWords.length }));\n      }\n    };\n\n    loadFlashcardWords();\n  }, [words]);\n\n  const currentWord = practiceWords[currentWordIndex];\n\n  const handleNext = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentWordIndex > 0) {\n      setCurrentWordIndex(currentWordIndex - 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handleProgressUpdate = async (newLevel) => {\n    if (!currentWord || isUpdating) return;\n    \n    setIsUpdating(true);\n    try {\n      const settings = JSON.parse(localStorage.getItem('practiceSettings')) || {};\n      const response = await axios.post(`/api/words/${currentWord.id}/spaced-progress`, {\n        userLevel: newLevel,\n        settings\n      });\n      \n      onWordUpdated(response.data);\n      \n      // Update session stats\n      const oldLevel = currentWord.userLevel;\n      setSessionStats(prev => ({\n        ...prev,\n        reviewed: prev.reviewed + 1,\n        improved: newLevel > oldLevel ? prev.improved + 1 : prev.improved,\n        declined: newLevel < oldLevel ? prev.declined + 1 : prev.declined\n      }));\n      \n      // Auto-advance after a brief delay\n      setTimeout(() => {\n        handleNext();\n        setIsUpdating(false);\n      }, 800);\n      \n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setIsUpdating(false);\n    }\n  };\n\n  const getLevelColor = (level) => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n\n  const getLevelText = (level) => {\n    const texts = ['New', 'Beginner', 'Learning', 'Good', 'Great', 'Confident'];\n    return texts[Math.min(level, 5)];\n  };\n\n  if (practiceWords.length === 0) {\n    return (\n      <div className=\"flashcards-fullscreen\">\n        <button className=\"flashcards-exit-btn\" onClick={onExit}>✕</button>\n        <div className=\"flashcards-content\">\n          <div className=\"flashcards-no-words\">\n            <div className=\"no-words-icon\">📚</div>\n            <h2>No words available for practice</h2>\n            <p>Add some words to get started with flashcard practice!</p>\n            <button className=\"flashcards-btn\" onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flashcards-fullscreen\">\n      <button className=\"flashcards-exit-btn\" onClick={onExit}>✕</button>\n      \n      {/* Simple Progress Bar */}\n      <div className=\"flashcards-progress\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\" \n            style={{width: `${((currentWordIndex + 1) / practiceWords.length) * 100}%`}}\n          ></div>\n        </div>\n        <span className=\"progress-text\">{currentWordIndex + 1} / {practiceWords.length}</span>\n      </div>\n\n      <div className=\"flashcards-content\">\n        {/* Flashcard */}\n        <div className={`flashcard-card ${showAnswer ? 'show-answer' : ''}`}>\n          <div className=\"flashcard-question\">\n            <h2 className=\"flashcard-word\">{currentWord?.english}</h2>\n            <div className=\"word-level\">\n              <span className=\"level-badge\" style={{backgroundColor: getLevelColor(currentWord?.userLevel || 0)}}>\n                {getLevelText(currentWord?.userLevel || 0)}\n              </span>\n            </div>\n          </div>\n          \n          <div className={`flashcard-answer ${showAnswer ? 'visible' : ''}`}>\n            <h3 className=\"hebrew-translation\">{currentWord?.hebrew}</h3>\n            <div className=\"word-info\">\n              <span className=\"difficulty\">Difficulty: {currentWord?.difficulty || 1}</span>\n              <span className=\"reviews\">Reviews: {currentWord?.reviewCount || 0}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Navigation Controls */}\n        <div className=\"flashcards-controls\">\n          <button \n            className=\"control-btn prev-btn\"\n            onClick={handlePrevious} \n            disabled={currentWordIndex === 0}\n          >\n            ←\n          </button>\n          \n          <button \n            className={`control-btn main-btn ${showAnswer ? 'active' : ''}`}\n            onClick={() => setShowAnswer(!showAnswer)}\n          >\n            {showAnswer ? 'Hide Answer' : 'Show Answer'}\n          </button>\n          \n          <button \n            className=\"control-btn next-btn\"\n            onClick={handleNext} \n            disabled={currentWordIndex === practiceWords.length - 1}\n          >\n            →\n          </button>\n        </div>\n\n        {/* Progress Controls - Always present but hidden when answer is not shown */}\n        <div className={`flashcards-progress-controls ${showAnswer ? 'visible' : ''}`}>\n          <div className=\"progress-header\">\n            <h3>Update Knowledge Level</h3>\n          </div>\n          \n          <div className=\"level-controls\">\n            <button \n              className=\"level-btn decrease\"\n              onClick={() => handleProgressUpdate(Math.max(0, (currentWord?.userLevel || 0) - 1))}\n              disabled={(currentWord?.userLevel || 0) === 0 || isUpdating}\n            >\n              📉 Decrease\n            </button>\n            \n            <div className=\"current-level\">\n              <span className=\"level-number\">Level {(currentWord?.userLevel || 0)}</span>\n              <span className=\"level-name\">{getLevelText(currentWord?.userLevel || 0)}</span>\n            </div>\n            \n            <button \n              className=\"level-btn increase\"\n              onClick={() => handleProgressUpdate(Math.min(5, (currentWord?.userLevel || 0) + 1))}\n              disabled={(currentWord?.userLevel || 0) === 5 || isUpdating}\n            >\n              📈 Increase\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Practice; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAExB,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,KAAK,CAAEC,aAAc,CAAC,CAAAF,IAAA,CACxC,KAAM,CAACG,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAAE;AAEtD,KAAM,CAAAe,gBAAgB,CAAIC,IAAI,EAAK,CACjCF,cAAc,CAACE,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvBH,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED;AACA,GAAID,WAAW,GAAK,IAAI,CAAE,CACxB,mBACET,IAAA,QAAKc,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjCb,KAAA,QAAKY,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCf,IAAA,OAAAe,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBb,KAAA,QAAKY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bb,KAAA,WACEY,SAAS,CAAC,iCAAiC,CAC3CE,OAAO,CAAEA,CAAA,GAAML,gBAAgB,CAAC,WAAW,CAAE,CAAAI,QAAA,eAE7Cf,IAAA,QAAKc,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,cAAE,CAAK,CAAC,cACrCb,KAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bf,IAAA,OAAAe,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBf,IAAA,MAAAe,QAAA,CAAG,oDAAkD,CAAG,CAAC,EACtD,CAAC,EACA,CAAC,cAETb,KAAA,WACEY,SAAS,CAAC,4BAA4B,CACtCE,OAAO,CAAEA,CAAA,GAAML,gBAAgB,CAAC,YAAY,CAAE,CAAAI,QAAA,eAE9Cf,IAAA,QAAKc,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,cAAE,CAAK,CAAC,cACrCb,KAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bf,IAAA,OAAAe,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBf,IAAA,MAAAe,QAAA,CAAG,sCAAoC,CAAG,CAAC,EACxC,CAAC,EACA,CAAC,EACN,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAEA;AACA,GAAIN,WAAW,GAAK,WAAW,CAAE,CAC/B,mBAAOT,IAAA,CAACiB,cAAc,EAACV,KAAK,CAAEA,KAAM,CAACC,aAAa,CAAEA,aAAc,CAACU,MAAM,CAAEL,UAAW,CAAE,CAAC,CAC3F,CAEA;AACA,GAAIJ,WAAW,GAAK,YAAY,CAAE,CAChC,mBAAOT,IAAA,CAACmB,UAAU,EAACZ,KAAK,CAAEA,KAAM,CAACC,aAAa,CAAEA,aAAc,CAACU,MAAM,CAAEL,UAAW,CAAE,CAAC,CACvF,CAEA,MAAO,KAAI,CACb,CAAC,CAED;AACA,KAAM,CAAAI,cAAc,CAAGG,KAAA,EAAsC,IAArC,CAAEb,KAAK,CAAEC,aAAa,CAAEU,MAAO,CAAC,CAAAE,KAAA,CACtD,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAC3D,KAAM,CAAC2B,UAAU,CAAEC,aAAa,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC6B,aAAa,CAAEC,gBAAgB,CAAC,CAAG9B,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAAC+B,aAAa,CAAEC,gBAAgB,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACiC,UAAU,CAAEC,aAAa,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACmC,UAAU,CAAEC,aAAa,CAAC,CAAGpC,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACqC,eAAe,CAAEC,kBAAkB,CAAC,CAAGtC,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACuC,YAAY,CAAEC,eAAe,CAAC,CAAGxC,QAAQ,CAAC,CAAEyC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAC,CAAC,CAC1E,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAG5C,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC6C,YAAY,CAAEC,eAAe,CAAC,CAAG9C,QAAQ,CAAC,IAAI,CAAC,CACvD;AAECC,SAAS,CAAC,IAAM,CACd;AACAmC,aAAa,CAAC,CAAC,GAAGzB,KAAK,CAAC,CAAC,CAEzB;AACA,GAAI,iBAAiB,EAAI,CAAAoC,MAAM,CAAE,CAC/BT,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CACF,CAAC,CAAE,CAAC3B,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAAqC,yBAAyB,CAAG,KAAAA,CAAA,GAAY,CAC5C,GAAI,CACF;AACA,KAAM,CAAAC,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAC9D,KAAM,CAAAC,QAAQ,CAAGH,aAAa,CAAGI,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,CAAG,CAC3DM,aAAa,CAAE,CAAC,CAChBC,eAAe,CAAE,CAAC,CAClBC,kBAAkB,CAAE,CAAC,CACrBC,kBAAkB,CAAE,EAAE,CACtBC,WAAW,CAAE,EAAI;AACnB,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA1D,KAAK,CAAC2D,GAAG,CAAC,8BAA8B,CAAE,CAAEC,MAAM,CAAEV,QAAS,CAAC,CAAC,CACtF,KAAM,CAAEW,UAAU,CAAEC,WAAY,CAAC,CAAGJ,QAAQ,CAACK,IAAI,CAEjD;AACA,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGH,UAAU,CAAE,GAAGC,WAAW,CAAC,CAEhD;AACA,KAAM,CAAAG,WAAW,CAAGD,QAAQ,CAACE,GAAG,CAACC,IAAI,GAAK,CACxC,GAAGA,IAAI,CACPC,YAAY,CAAEN,WAAW,CAACO,IAAI,CAACC,EAAE,EAAIA,EAAE,CAACC,EAAE,GAAKJ,IAAI,CAACI,EAAE,CACxD,CAAC,CAAC,CAAC,CAEH;AACA,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGP,WAAW,CAAC,CAACQ,IAAI,CAAC,IAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAC,CAEjE;AACA,KAAM,CAAAlB,WAAW,CAAGP,QAAQ,CAACO,WAAW,EAAI,EAAE,CAC9C,MAAO,CAAAe,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAEnB,WAAW,CAAC,CACvC,CAAE,MAAOoB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAC9D;AACA,MAAO,CAAAE,yBAAyB,CAAC9C,UAAU,CAAC,CAC9C,CACF,CAAC,CAED;AACA,KAAM,CAAA8C,yBAAyB,CAAItE,KAAK,EAAK,CAC3C,KAAM,CAAAuE,cAAc,CAAGvE,KAAK,CAACwE,MAAM,CAACd,IAAI,EAAIA,IAAI,CAACe,SAAS,CAAG,CAAC,CAAC,CAC/D,GAAIF,cAAc,CAACG,MAAM,GAAK,CAAC,CAAE,MAAO,EAAE,CAE1C;AACA,KAAM,CAAApC,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAC9D,KAAM,CAAAC,QAAQ,CAAGH,aAAa,CAAGI,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,CAAG,CAAEU,WAAW,CAAE,EAAG,CAAC,CAChF,KAAM,CAAAA,WAAW,CAAGP,QAAQ,CAACO,WAAW,EAAI,EAAE,CAE9C,KAAM,CAAA2B,aAAa,CAAG,EAAE,CACxBJ,cAAc,CAACK,OAAO,CAAClB,IAAI,EAAI,CAC7B,KAAM,CAAAmB,MAAM,CAAGZ,IAAI,CAACa,GAAG,CAAC,CAAC,CAAE,CAAC,CAAGpB,IAAI,CAACe,SAAS,CAAC,CAC9C,IAAK,GAAI,CAAAM,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,MAAM,CAAEE,CAAC,EAAE,CAAE,CAC/BJ,aAAa,CAACK,IAAI,CAACtB,IAAI,CAAC,CAC1B,CACF,CAAC,CAAC,CAEF,KAAM,CAAAK,QAAQ,CAAG,CAAC,GAAGY,aAAa,CAAC,CAACX,IAAI,CAAC,IAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAC,CACnE,KAAM,CAAAe,kBAAkB,CAAGhB,IAAI,CAACiB,GAAG,CAAClC,WAAW,CAAEe,QAAQ,CAACW,MAAM,CAAC,CACjE,MAAO,CAAAX,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAEc,kBAAkB,CAAC,CAC9C,CAAC,CAED3F,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAA6F,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI3D,UAAU,CAACkD,MAAM,GAAK,CAAC,CAAE,OAE7B,KAAM,CAAAU,WAAW,CAAG,KAAM,CAAA/C,yBAAyB,CAAC,CAAC,CACrDhB,gBAAgB,CAAC+D,WAAW,CAAC,CAE7B;AACA,GAAIA,WAAW,CAACV,MAAM,GAAK,CAAC,CAAE,CAC5B3D,mBAAmB,CAAC,CAAC,CAAC,CACtBE,aAAa,CAAC,KAAK,CAAC,CACpBE,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,IAAM,IAAIL,gBAAgB,EAAIsE,WAAW,CAACV,MAAM,CAAE,CACjD;AACA3D,mBAAmB,CAAC,CAAC,CAAC,CACtBE,aAAa,CAAC,KAAK,CAAC,CACpBE,gBAAgB,CAAC,IAAI,CAAC,CACxB,CACF,CAAC,CAEDgE,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAAC3D,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAA6D,WAAW,CAAGjE,aAAa,CAACN,gBAAgB,CAAC,CAEnD;AACAxB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgG,cAAc,CAAIC,KAAK,EAAK,CAChC,GAAIvD,UAAU,EAAIV,UAAU,CAAE,OAAQ;AAEtC,GAAIiE,KAAK,CAACC,IAAI,GAAK,OAAO,CAAE,CAC1BD,KAAK,CAACE,cAAc,CAAC,CAAC,CACtB,GAAI/D,eAAe,EAAI2D,WAAW,CAAE,CAClCK,SAAS,CAACL,WAAW,CAACM,OAAO,CAAC,CAChC,CACF,CAAC,IAAM,IAAIJ,KAAK,CAACC,IAAI,GAAK,QAAQ,CAAE,CAClC7E,MAAM,CAAC,CAAC,CACV,CAAC,IAAM,IAAI4E,KAAK,CAACC,IAAI,EAAI,QAAQ,EAAID,KAAK,CAACC,IAAI,EAAI,QAAQ,CAAE,CAC3D;AACAD,KAAK,CAACE,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAG,KAAK,CAAGC,QAAQ,CAACN,KAAK,CAACC,IAAI,CAACM,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAAC,CACvDC,gBAAgB,CAACH,KAAK,CAAC,CACzB,CAAC,IAAM,IAAIL,KAAK,CAACC,IAAI,GAAK,MAAM,CAAE,CAChC;AACAD,KAAK,CAACE,cAAc,CAAC,CAAC,CACtBxE,aAAa,CAAC,CAACD,UAAU,CAAC,CAC5B,CACF,CAAC,CAEDoB,MAAM,CAAC4D,gBAAgB,CAAC,SAAS,CAAEV,cAAc,CAAC,CAClD,MAAO,IAAMlD,MAAM,CAAC6D,mBAAmB,CAAC,SAAS,CAAEX,cAAc,CAAC,CACpE,CAAC,CAAE,CAACtD,UAAU,CAAEV,UAAU,CAAEI,eAAe,CAAE2D,WAAW,CAAE1E,MAAM,CAAEK,UAAU,CAAC,CAAC,CAE9E;AACA,KAAM,CAAA0E,SAAS,CAAIhC,IAAI,EAAK,CAC1B,GAAI,CAAChC,eAAe,EAAI,CAACgC,IAAI,CAAE,OAE/B;AACAtB,MAAM,CAAC8D,eAAe,CAACC,MAAM,CAAC,CAAC,CAE/B,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,wBAAwB,CAAC3C,IAAI,CAAC,CACpD0C,SAAS,CAACE,IAAI,CAAG,OAAO,CACxBF,SAAS,CAACG,IAAI,CAAG,GAAG,CACpBH,SAAS,CAACI,KAAK,CAAG,CAAC,CACnBJ,SAAS,CAACK,MAAM,CAAG,CAAC,CAEpBrE,MAAM,CAAC8D,eAAe,CAACQ,KAAK,CAACN,SAAS,CAAC,CACzC,CAAC,CAED,KAAM,CAAAL,gBAAgB,CAAG,KAAO,CAAAH,KAAK,EAAK,CACxC,GAAI,CAACP,WAAW,EAAI/D,UAAU,CAAE,CAC9B,OACF,CAEAC,aAAa,CAAC,IAAI,CAAC,CACnBJ,gBAAgB,CAACyE,KAAK,CAAC,CACvBzD,eAAe,CAACkD,WAAW,CAAC,CAAE;AAC9BpD,aAAa,CAAC,IAAI,CAAC,CAEnB;AACA,KAAM,CAAA0E,SAAS,CAAGf,KAAK,EAAI,CAAC,CAC5B/D,eAAe,CAAC+E,IAAI,GAAK,CACvB9E,OAAO,CAAE8E,IAAI,CAAC9E,OAAO,EAAI6E,SAAS,CAAG,CAAC,CAAG,CAAC,CAAC,CAC3C5E,KAAK,CAAE6E,IAAI,CAAC7E,KAAK,CAAG,CACtB,CAAC,CAAC,CAAC,CAEH,GAAI,CACF;AACA,KAAM,CAAAO,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,CACtE,KAAM,CAAAC,QAAQ,CAAGH,aAAa,CAAGI,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC,CAAG,CAAC,CAAC,CAE/D,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAA1D,KAAK,CAACsH,IAAI,CAAC,cAAcxB,WAAW,CAACvB,EAAE,kBAAkB,CAAE,CAChFW,SAAS,CAAEmB,KAAK,CAChBnD,QAAQ,CAAEA,QACZ,CAAC,CAAC,CAEF;AACAxC,aAAa,CAACgD,QAAQ,CAACK,IAAI,CAAC,CAE5B;AACA;AACA7B,aAAa,CAACmF,IAAI,EAChBA,IAAI,CAACnD,GAAG,CAACC,IAAI,EACXA,IAAI,CAACI,EAAE,GAAKuB,WAAW,CAACvB,EAAE,CACtB,CAAE,GAAGJ,IAAI,CAAEe,SAAS,CAAEmB,KAAM,CAAC,CAC7BlC,IACN,CACF,CAAC,CAED;AACAoD,UAAU,CAAC,IAAM,CACfvF,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAAE,GAAG,CAAC,CAAE;AAEX,CAAE,MAAO6C,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDjD,gBAAgB,CAAC,IAAI,CAAC,CACtBI,aAAa,CAAC,KAAK,CAAC,CACpBwF,KAAK,CAAC,8CAA8C,CAAC,CACvD,CACF,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIlG,gBAAgB,CAAGM,aAAa,CAACsD,MAAM,CAAG,CAAC,CAAE,CAC/C3D,mBAAmB,CAAC6F,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CACrC3F,aAAa,CAAC,KAAK,CAAC,CACpBE,gBAAgB,CAAC,IAAI,CAAC,CACtBc,aAAa,CAAC,KAAK,CAAC,CACpBE,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,IAAM,CACL;AACA,KAAM,CAAA8E,QAAQ,CAAGhD,IAAI,CAACiD,KAAK,CAAEtF,YAAY,CAACE,OAAO,CAAGF,YAAY,CAACG,KAAK,CAAI,GAAG,CAAC,CAC9EgF,KAAK,CAAC,yCAAyCE,QAAQ,MAAMrF,YAAY,CAACE,OAAO,IAAIF,YAAY,CAACG,KAAK,GAAG,CAAC,CAC3GpB,MAAM,CAAC,CAAC,CACV,CACF,CAAC,CAID,KAAM,CAAAwG,aAAa,CAAIvB,KAAK,EAAK,CAC/B,KAAM,CAAAwB,MAAM,CAAG,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAC,CACjF,MAAO,CAAAA,MAAM,CAACnD,IAAI,CAACiB,GAAG,CAACU,KAAK,CAAE,CAAC,CAAC,CAAC,CACnC,CAAC,CAED,GAAIxE,aAAa,CAACsD,MAAM,GAAK,CAAC,CAAE,CAC9B,mBACE/E,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,WAAQc,SAAS,CAAC,aAAa,CAACE,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,QAAC,CAAQ,CAAC,cAC3Df,IAAA,QAAKc,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/Bb,KAAA,QAAKY,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBf,IAAA,OAAAe,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCf,IAAA,MAAAe,QAAA,CAAG,8EAA4E,CAAG,CAAC,cACnFf,IAAA,WAAQgB,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,cAAY,CAAQ,CAAC,EAC3C,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAEA,GAAI,CAAC6E,WAAW,CAAE,CAChB,mBACE1F,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,WAAQc,SAAS,CAAC,aAAa,CAACE,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,QAAC,CAAQ,CAAC,cAC3Df,IAAA,QAAKc,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/Bb,KAAA,QAAKY,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBf,IAAA,OAAAe,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCf,IAAA,WAAQgB,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,cAAY,CAAQ,CAAC,EAC3C,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAEA,mBACEb,KAAA,QAAKY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCf,IAAA,WAAQc,SAAS,CAAC,iBAAiB,CAACE,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,QAAC,CAAQ,CAAC,cAG/Db,KAAA,QAAKY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5Bb,KAAA,QAAKY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9Bf,IAAA,QAAKc,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3Bf,IAAA,QACEc,SAAS,CAAC,eAAe,CACzB8G,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAI,CAACxG,gBAAgB,CAAG,CAAC,EAAIM,aAAa,CAACsD,MAAM,CAAI,GAAG,GAAI,CAAE,CAC1E,CAAC,CACJ,CAAC,cACN/E,KAAA,SAAMY,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC5BM,gBAAgB,CAAG,CAAC,CAAC,KAAG,CAACM,aAAa,CAACsD,MAAM,EAC1C,CAAC,EACJ,CAAC,cACN/E,KAAA,QAAKY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5Bb,KAAA,SAAMY,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,SAAE,CAACoB,YAAY,CAACE,OAAO,EAAO,CAAC,cACtDnC,KAAA,SAAMY,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,eAAG,CAACoB,YAAY,CAACG,KAAK,EAAO,CAAC,EAClD,CAAC,EACH,CAAC,cAGNtC,IAAA,QAAKc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5B,CAACwB,UAAU,cACVrC,KAAA,CAAAE,SAAA,EAAAW,QAAA,eAEEb,KAAA,QAAKY,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9Bf,IAAA,OAAIc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAE6E,WAAW,CAACM,OAAO,CAAK,CAAC,CAEtD3E,UAAU,eACTvB,IAAA,QAAKc,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5Bf,IAAA,OAAIc,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE6E,WAAW,CAACkC,MAAM,CAAK,CAAC,CAClD,CACN,EACE,CAAC,cAGN5H,KAAA,QAAKY,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCf,IAAA,OAAIc,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,iCAA+B,CAAI,CAAC,cAElEb,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAElCb,KAAA,QAAKY,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAC/BkB,eAAe,eACdjC,IAAA,WACEc,SAAS,CAAC,kBAAkB,CAC5BE,OAAO,CAAEA,CAAA,GAAMiF,SAAS,CAACL,WAAW,CAACM,OAAO,CAAE,CAC9C6B,KAAK,CAAC,oBAAoB,CAAAhH,QAAA,CAC3B,2BAED,CAAQ,CACT,cACDf,IAAA,WACEc,SAAS,CAAC,iBAAiB,CAC3BE,OAAO,CAAEA,CAAA,GAAMQ,aAAa,CAAC,CAACD,UAAU,CAAE,CAC1CyG,QAAQ,CAAEnG,UAAW,CAAAd,QAAA,CAEpBQ,UAAU,CAAG,gBAAgB,CAAG,iBAAiB,CAC5C,CAAC,EACN,CAAC,cAGNvB,IAAA,QAAKc,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cACpCb,KAAA,QAAKY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bb,KAAA,WACEY,SAAS,CAAC,yBAAyB,CACnCE,OAAO,CAAEA,CAAA,GAAMsF,gBAAgB,CAAC,CAAC,CAAE,CACnC0B,QAAQ,CAAEnG,UAAW,CAAAd,QAAA,eAErBf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,cACvCf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,cAChDf,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,EAC/B,CAAC,cAETb,KAAA,WACEY,SAAS,CAAC,yBAAyB,CACnCE,OAAO,CAAEA,CAAA,GAAMsF,gBAAgB,CAAC,CAAC,CAAE,CACnC0B,QAAQ,CAAEnG,UAAW,CAAAd,QAAA,eAErBf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACxCf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cAC9Cf,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,EAC/B,CAAC,cAETb,KAAA,WACEY,SAAS,CAAC,yBAAyB,CACnCE,OAAO,CAAEA,CAAA,GAAMsF,gBAAgB,CAAC,CAAC,CAAE,CACnC0B,QAAQ,CAAEnG,UAAW,CAAAd,QAAA,eAErBf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACxCf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cAC9Cf,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,EAC/B,CAAC,cAETb,KAAA,WACEY,SAAS,CAAC,yBAAyB,CACnCE,OAAO,CAAEA,CAAA,GAAMsF,gBAAgB,CAAC,CAAC,CAAE,CACnC0B,QAAQ,CAAEnG,UAAW,CAAAd,QAAA,eAErBf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACxCf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,MAAI,CAAM,CAAC,cAC1Cf,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,EAC/B,CAAC,cAETb,KAAA,WACEY,SAAS,CAAC,yBAAyB,CACnCE,OAAO,CAAEA,CAAA,GAAMsF,gBAAgB,CAAC,CAAC,CAAE,CACnC0B,QAAQ,CAAEnG,UAAW,CAAAd,QAAA,eAErBf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,cACvCf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,OAAK,CAAM,CAAC,cAC3Cf,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,EAC/B,CAAC,cAETb,KAAA,WACEY,SAAS,CAAC,yBAAyB,CACnCE,OAAO,CAAEA,CAAA,GAAMsF,gBAAgB,CAAC,CAAC,CAAE,CACnC0B,QAAQ,CAAEnG,UAAW,CAAAd,QAAA,eAErBf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACxCf,IAAA,SAAMc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cAC9Cf,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,GAAC,CAAM,CAAC,EAC/B,CAAC,EACN,CAAC,CACH,CAAC,EACH,CAAC,EACH,CAAC,EACN,CAAC,cAEH,mBACAb,KAAA,QAAKY,SAAS,CAAC,eAAe,CAACE,OAAO,CAAEuG,cAAe,CAAAxG,QAAA,eACrDf,IAAA,QAAKc,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzBU,aAAa,EAAI,CAAC,CAAG,IAAI,CAAG,IAAI,CAC9B,CAAC,cACNzB,IAAA,OAAAe,QAAA,CACGU,aAAa,EAAI,CAAC,CAAG,YAAY,CAAG,kBAAkB,CACrD,CAAC,CACJgB,YAAY,eACXvC,KAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bb,KAAA,QAAKY,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBf,IAAA,SAAMc,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAE0B,YAAY,CAACyD,OAAO,CAAO,CAAC,cACvDlG,IAAA,SAAMc,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAE0B,YAAY,CAACqF,MAAM,CAAO,CAAC,EAClD,CAAC,cACN5H,KAAA,QAAKY,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,0BACJ,CAACU,aAAa,EACnC,CAAC,EACH,CACN,cAEDzB,IAAA,QAAKc,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCf,IAAA,SAAMc,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC5BM,gBAAgB,CAAGM,aAAa,CAACsD,MAAM,CAAG,CAAC,CAAG,8BAA8B,CAAG,yBAAyB,CACrG,CAAC,CACJ,CAAC,EACH,CACN,CACE,CAAC,EACH,CAAC,CAEV,CAAC,CAED;AACA,KAAM,CAAA9D,UAAU,CAAG8G,KAAA,EAAsC,IAArC,CAAE1H,KAAK,CAAEC,aAAa,CAAEU,MAAO,CAAC,CAAA+G,KAAA,CAClD,KAAM,CAAC5G,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAC3D,KAAM,CAACsI,UAAU,CAAEC,aAAa,CAAC,CAAGvI,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC+B,aAAa,CAAEC,gBAAgB,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACuC,YAAY,CAAEC,eAAe,CAAC,CAAGxC,QAAQ,CAAC,CAC/C0C,KAAK,CAAE,CAAC,CACR8F,QAAQ,CAAE,CAAC,CACXC,QAAQ,CAAE,CAAC,CACXC,QAAQ,CAAE,CACZ,CAAC,CAAC,CACF,KAAM,CAACzG,UAAU,CAAEC,aAAa,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CAEnD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAA0I,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAvF,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAI,CACvEI,aAAa,CAAE,CAAC,CAChBC,eAAe,CAAE,CAAC,CAClBC,kBAAkB,CAAE,CAAC,CACrBC,kBAAkB,CAAE,EACtB,CAAC,CAED,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA1D,KAAK,CAAC2D,GAAG,CAAC,8BAA8B,CAAE,CAAEC,MAAM,CAAEV,QAAS,CAAC,CAAC,CACtF,KAAM,CAAEW,UAAU,CAAEC,WAAY,CAAC,CAAGJ,QAAQ,CAACK,IAAI,CAEjD;AACA,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAGH,UAAU,CAAE,GAAGC,WAAW,CAAC,CAChD,KAAM,CAAAU,QAAQ,CAAGR,QAAQ,CAACS,IAAI,CAAC,IAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAC,CAEzD7C,gBAAgB,CAAC0C,QAAQ,CAAC,CAC1BlC,eAAe,CAAC+E,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE7E,KAAK,CAAEgC,QAAQ,CAACW,MAAO,CAAC,CAAC,CAAC,CAChE,CAAE,MAAON,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD;AACA,KAAM,CAAAb,QAAQ,CAAGvD,KAAK,CAACgE,IAAI,CAAC,IAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAC,CACtD7C,gBAAgB,CAACkC,QAAQ,CAAC,CAC1B1B,eAAe,CAAC+E,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE7E,KAAK,CAAEwB,QAAQ,CAACmB,MAAO,CAAC,CAAC,CAAC,CAChE,CACF,CAAC,CAEDsD,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,CAAChI,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAqF,WAAW,CAAGjE,aAAa,CAACN,gBAAgB,CAAC,CAEnD,KAAM,CAAAmH,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAInH,gBAAgB,CAAGM,aAAa,CAACsD,MAAM,CAAG,CAAC,CAAE,CAC/C3D,mBAAmB,CAACD,gBAAgB,CAAG,CAAC,CAAC,CACzC8G,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAM,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIpH,gBAAgB,CAAG,CAAC,CAAE,CACxBC,mBAAmB,CAACD,gBAAgB,CAAG,CAAC,CAAC,CACzC8G,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAO,oBAAoB,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC/C,GAAI,CAAC/C,WAAW,EAAI/D,UAAU,CAAE,OAEhCC,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI,CACF,KAAM,CAAAkB,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAI,CAAC,CAAC,CAC3E,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAA1D,KAAK,CAACsH,IAAI,CAAC,cAAcxB,WAAW,CAACvB,EAAE,kBAAkB,CAAE,CAChFW,SAAS,CAAE2D,QAAQ,CACnB3F,QACF,CAAC,CAAC,CAEFxC,aAAa,CAACgD,QAAQ,CAACK,IAAI,CAAC,CAE5B;AACA,KAAM,CAAA+E,QAAQ,CAAGhD,WAAW,CAACZ,SAAS,CACtC5C,eAAe,CAAC+E,IAAI,GAAK,CACvB,GAAGA,IAAI,CACPiB,QAAQ,CAAEjB,IAAI,CAACiB,QAAQ,CAAG,CAAC,CAC3BC,QAAQ,CAAEM,QAAQ,CAAGC,QAAQ,CAAGzB,IAAI,CAACkB,QAAQ,CAAG,CAAC,CAAGlB,IAAI,CAACkB,QAAQ,CACjEC,QAAQ,CAAEK,QAAQ,CAAGC,QAAQ,CAAGzB,IAAI,CAACmB,QAAQ,CAAG,CAAC,CAAGnB,IAAI,CAACmB,QAC3D,CAAC,CAAC,CAAC,CAEH;AACAjB,UAAU,CAAC,IAAM,CACfmB,UAAU,CAAC,CAAC,CACZ1G,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAAE,GAAG,CAAC,CAET,CAAE,MAAO6C,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD7C,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAA4F,aAAa,CAAIvB,KAAK,EAAK,CAC/B,KAAM,CAAAwB,MAAM,CAAG,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAC,CACjF,MAAO,CAAAA,MAAM,CAACnD,IAAI,CAACiB,GAAG,CAACU,KAAK,CAAE,CAAC,CAAC,CAAC,CACnC,CAAC,CAED,KAAM,CAAA0C,YAAY,CAAI1C,KAAK,EAAK,CAC9B,KAAM,CAAA2C,KAAK,CAAG,CAAC,KAAK,CAAE,UAAU,CAAE,UAAU,CAAE,MAAM,CAAE,OAAO,CAAE,WAAW,CAAC,CAC3E,MAAO,CAAAA,KAAK,CAACtE,IAAI,CAACiB,GAAG,CAACU,KAAK,CAAE,CAAC,CAAC,CAAC,CAClC,CAAC,CAED,GAAIxE,aAAa,CAACsD,MAAM,GAAK,CAAC,CAAE,CAC9B,mBACE/E,KAAA,QAAKY,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCf,IAAA,WAAQc,SAAS,CAAC,qBAAqB,CAACE,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,QAAC,CAAQ,CAAC,cACnEf,IAAA,QAAKc,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjCb,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,QAAKc,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,cAAE,CAAK,CAAC,cACvCf,IAAA,OAAAe,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCf,IAAA,MAAAe,QAAA,CAAG,wDAAsD,CAAG,CAAC,cAC7Df,IAAA,WAAQc,SAAS,CAAC,gBAAgB,CAACE,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,cAAY,CAAQ,CAAC,EACtE,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAEA,mBACEb,KAAA,QAAKY,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCf,IAAA,WAAQc,SAAS,CAAC,qBAAqB,CAACE,OAAO,CAAEE,MAAO,CAAAH,QAAA,CAAC,QAAC,CAAQ,CAAC,cAGnEb,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,QAAKc,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3Bf,IAAA,QACEc,SAAS,CAAC,eAAe,CACzB8G,KAAK,CAAE,CAACC,KAAK,CAAE,GAAI,CAACxG,gBAAgB,CAAG,CAAC,EAAIM,aAAa,CAACsD,MAAM,CAAI,GAAG,GAAG,CAAE,CACxE,CAAC,CACJ,CAAC,cACN/E,KAAA,SAAMY,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAEM,gBAAgB,CAAG,CAAC,CAAC,KAAG,CAACM,aAAa,CAACsD,MAAM,EAAO,CAAC,EACnF,CAAC,cAEN/E,KAAA,QAAKY,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAEjCb,KAAA,QAAKY,SAAS,CAAE,kBAAkBoH,UAAU,CAAG,aAAa,CAAG,EAAE,EAAG,CAAAnH,QAAA,eAClEb,KAAA,QAAKY,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCf,IAAA,OAAIc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAE6E,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEM,OAAO,CAAK,CAAC,cAC1DlG,IAAA,QAAKc,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBf,IAAA,SAAMc,SAAS,CAAC,aAAa,CAAC8G,KAAK,CAAE,CAACmB,eAAe,CAAErB,aAAa,CAAC,CAAA9B,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,CAAC,CAAE,CAAAjE,QAAA,CAChG8H,YAAY,CAAC,CAAAjD,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,CAAC,CACtC,CAAC,CACJ,CAAC,EACH,CAAC,cAEN9E,KAAA,QAAKY,SAAS,CAAE,oBAAoBoH,UAAU,CAAG,SAAS,CAAG,EAAE,EAAG,CAAAnH,QAAA,eAChEf,IAAA,OAAIc,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAE6E,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEkC,MAAM,CAAK,CAAC,cAC7D5H,KAAA,QAAKY,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBb,KAAA,SAAMY,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,cAAY,CAAC,CAAA6E,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEoD,UAAU,GAAI,CAAC,EAAO,CAAC,cAC9E9I,KAAA,SAAMY,SAAS,CAAC,SAAS,CAAAC,QAAA,EAAC,WAAS,CAAC,CAAA6E,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEqD,WAAW,GAAI,CAAC,EAAO,CAAC,EACtE,CAAC,EACH,CAAC,EACH,CAAC,cAGN/I,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCf,IAAA,WACEc,SAAS,CAAC,sBAAsB,CAChCE,OAAO,CAAEyH,cAAe,CACxBT,QAAQ,CAAE3G,gBAAgB,GAAK,CAAE,CAAAN,QAAA,CAClC,QAED,CAAQ,CAAC,cAETf,IAAA,WACEc,SAAS,CAAE,wBAAwBoH,UAAU,CAAG,QAAQ,CAAG,EAAE,EAAG,CAChElH,OAAO,CAAEA,CAAA,GAAMmH,aAAa,CAAC,CAACD,UAAU,CAAE,CAAAnH,QAAA,CAEzCmH,UAAU,CAAG,aAAa,CAAG,aAAa,CACrC,CAAC,cAETlI,IAAA,WACEc,SAAS,CAAC,sBAAsB,CAChCE,OAAO,CAAEwH,UAAW,CACpBR,QAAQ,CAAE3G,gBAAgB,GAAKM,aAAa,CAACsD,MAAM,CAAG,CAAE,CAAAlE,QAAA,CACzD,QAED,CAAQ,CAAC,EACN,CAAC,cAGNb,KAAA,QAAKY,SAAS,CAAE,gCAAgCoH,UAAU,CAAG,SAAS,CAAG,EAAE,EAAG,CAAAnH,QAAA,eAC5Ef,IAAA,QAAKc,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9Bf,IAAA,OAAAe,QAAA,CAAI,wBAAsB,CAAI,CAAC,CAC5B,CAAC,cAENb,KAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bf,IAAA,WACEc,SAAS,CAAC,oBAAoB,CAC9BE,OAAO,CAAEA,CAAA,GAAM0H,oBAAoB,CAAClE,IAAI,CAACa,GAAG,CAAC,CAAC,CAAE,CAAC,CAAAO,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,EAAI,CAAC,CAAC,CAAE,CACpFgD,QAAQ,CAAE,CAAC,CAAApC,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,IAAM,CAAC,EAAInD,UAAW,CAAAd,QAAA,CAC7D,uBAED,CAAQ,CAAC,cAETb,KAAA,QAAKY,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5Bb,KAAA,SAAMY,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAC,QAAM,CAAE,CAAA6E,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,EAAQ,CAAC,cAC3EhF,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE8H,YAAY,CAAC,CAAAjD,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,CAAC,CAAO,CAAC,EAC5E,CAAC,cAENhF,IAAA,WACEc,SAAS,CAAC,oBAAoB,CAC9BE,OAAO,CAAEA,CAAA,GAAM0H,oBAAoB,CAAClE,IAAI,CAACiB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAAG,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,EAAI,CAAC,CAAC,CAAE,CACpFgD,QAAQ,CAAE,CAAC,CAAApC,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEZ,SAAS,GAAI,CAAC,IAAM,CAAC,EAAInD,UAAW,CAAAd,QAAA,CAC7D,uBAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}