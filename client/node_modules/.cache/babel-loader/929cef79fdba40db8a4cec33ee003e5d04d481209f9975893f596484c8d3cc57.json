{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magshimim\\\\Documents\\\\wordGame\\\\client\\\\src\\\\components\\\\Statistics.js\";\nimport React from 'react';\nimport './Statistics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = ({\n  stats,\n  words\n}) => {\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading statistics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  const calculateProgress = () => {\n    const total = stats.totalWords;\n    if (total === 0) return 0;\n    const mastered = stats.byUserLevel[5] || 0;\n    return Math.round(mastered / total * 100);\n  };\n  const getLevelDescription = level => {\n    const descriptions = {\n      0: 'Not Started',\n      1: 'Beginner',\n      2: 'Elementary',\n      3: 'Intermediate',\n      4: 'Advanced',\n      5: 'Mastered'\n    };\n    return descriptions[level] || 'Unknown';\n  };\n  const getDifficultyDescription = difficulty => {\n    const descriptions = {\n      1: 'Very Basic',\n      2: 'Basic',\n      3: 'Intermediate',\n      4: 'Advanced',\n      5: 'Very Advanced'\n    };\n    return descriptions[difficulty] || 'Unknown';\n  };\n  const renderProgressBar = (current, total, label) => {\n    const percentage = total === 0 ? 0 : Math.round(current / total * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [current, \" / \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${percentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-percentage\",\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n  const renderLevelDistribution = () => {\n    return Object.entries(stats.byUserLevel).map(([level, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribution-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-name\",\n          children: [\"Level \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-fill\",\n          style: {\n            width: `${stats.totalWords === 0 ? 0 : count / stats.totalWords * 100}%`,\n            backgroundColor: getLevelColor(parseInt(level))\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"level-description\",\n        children: getLevelDescription(parseInt(level))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, level, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this));\n  };\n  const renderDifficultyDistribution = () => {\n    return Object.entries(stats.byDifficulty).map(([difficulty, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribution-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-name\",\n          children: [\"Difficulty \", difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-fill\",\n          style: {\n            width: `${stats.totalWords === 0 ? 0 : count / stats.totalWords * 100}%`,\n            backgroundColor: getDifficultyColor(parseInt(difficulty))\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"level-description\",\n        children: getDifficultyDescription(parseInt(difficulty))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, difficulty, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this));\n  };\n  const getLevelColor = level => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n  const getDifficultyColor = difficulty => {\n    const colors = ['', '#28a745', '#ffc107', '#fd7e14', '#dc3545', '#6f42c1'];\n    return colors[difficulty];\n  };\n  const getRecentWords = () => {\n    return words.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).slice(0, 5);\n  };\n  const getTopWords = () => {\n    return words.filter(word => word.userLevel > 0).sort((a, b) => b.userLevel - a.userLevel).slice(0, 5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Learning Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Track your progress and see your learning patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: stats.totalWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mastered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: stats.byUserLevel[5] || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Learning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: Object.entries(stats.byUserLevel).filter(([level]) => level > 0 && level < 5).reduce((sum, [, count]) => sum + count, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: [calculateProgress(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Learning Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [renderProgressBar(stats.byUserLevel[5] || 0, stats.totalWords, 'Mastered (Level 5)'), renderProgressBar(Object.entries(stats.byUserLevel).filter(([level]) => level > 0 && level < 5).reduce((sum, [, count]) => sum + count, 0), stats.totalWords, 'Learning (Level 1-4)'), renderProgressBar(stats.byUserLevel[0] || 0, stats.totalWords, 'Not Started (Level 0)')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Level Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-container\",\n          children: renderLevelDistribution()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Difficulty Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-container\",\n          children: renderDifficultyDistribution()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Words Added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-list\",\n          children: getRecentWords().map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"english\",\n                children: word.english\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"hebrew\",\n                children: word.hebrew\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"level\",\n                children: [\"Level \", word.userLevel]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"difficulty\",\n                children: [\"Diff \", word.difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Top Performing Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-list\",\n          children: getTopWords().map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"english\",\n                children: word.english\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"hebrew\",\n                children: word.hebrew\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"level\",\n                children: [\"Level \", word.userLevel]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"difficulty\",\n                children: [\"Diff \", word.difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Statistics","stats","words","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateProgress","total","totalWords","mastered","byUserLevel","Math","round","getLevelDescription","level","descriptions","getDifficultyDescription","difficulty","renderProgressBar","current","label","percentage","style","width","renderLevelDistribution","Object","entries","map","count","backgroundColor","getLevelColor","parseInt","renderDifficultyDistribution","byDifficulty","getDifficultyColor","colors","min","getRecentWords","sort","a","b","Date","createdAt","slice","getTopWords","filter","word","userLevel","reduce","sum","english","hebrew","id","_c","$RefreshReg$"],"sources":["C:/Users/Magshimim/Documents/wordGame/client/src/components/Statistics.js"],"sourcesContent":["import React from 'react';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ stats, words }) => {\r\n  if (!stats) {\r\n    return (\r\n      <div className=\"statistics\">\r\n        <div className=\"loading\">Loading statistics...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const calculateProgress = () => {\r\n    const total = stats.totalWords;\r\n    if (total === 0) return 0;\r\n    \r\n    const mastered = stats.byUserLevel[5] || 0;\r\n    return Math.round((mastered / total) * 100);\r\n  };\r\n\r\n  const getLevelDescription = (level) => {\r\n    const descriptions = {\r\n      0: 'Not Started',\r\n      1: 'Beginner',\r\n      2: 'Elementary',\r\n      3: 'Intermediate',\r\n      4: 'Advanced',\r\n      5: 'Mastered'\r\n    };\r\n    return descriptions[level] || 'Unknown';\r\n  };\r\n\r\n  const getDifficultyDescription = (difficulty) => {\r\n    const descriptions = {\r\n      1: 'Very Basic',\r\n      2: 'Basic',\r\n      3: 'Intermediate',\r\n      4: 'Advanced',\r\n      5: 'Very Advanced'\r\n    };\r\n    return descriptions[difficulty] || 'Unknown';\r\n  };\r\n\r\n  const renderProgressBar = (current, total, label) => {\r\n    const percentage = total === 0 ? 0 : Math.round((current / total) * 100);\r\n    return (\r\n      <div className=\"progress-item\">\r\n        <div className=\"progress-label\">\r\n          <span>{label}</span>\r\n          <span>{current} / {total}</span>\r\n        </div>\r\n        <div className=\"progress-bar\">\r\n          <div \r\n            className=\"progress-fill\" \r\n            style={{ width: `${percentage}%` }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"progress-percentage\">{percentage}%</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderLevelDistribution = () => {\r\n    return Object.entries(stats.byUserLevel).map(([level, count]) => (\r\n      <div key={level} className=\"distribution-item\">\r\n        <div className=\"distribution-header\">\r\n          <span className=\"level-name\">Level {level}</span>\r\n          <span className=\"level-count\">{count}</span>\r\n        </div>\r\n        <div className=\"distribution-bar\">\r\n          <div \r\n            className=\"distribution-fill\"\r\n            style={{ \r\n              width: `${stats.totalWords === 0 ? 0 : (count / stats.totalWords) * 100}%`,\r\n              backgroundColor: getLevelColor(parseInt(level))\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"level-description\">{getLevelDescription(parseInt(level))}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const renderDifficultyDistribution = () => {\r\n    return Object.entries(stats.byDifficulty).map(([difficulty, count]) => (\r\n      <div key={difficulty} className=\"distribution-item\">\r\n        <div className=\"distribution-header\">\r\n          <span className=\"level-name\">Difficulty {difficulty}</span>\r\n          <span className=\"level-count\">{count}</span>\r\n        </div>\r\n        <div className=\"distribution-bar\">\r\n          <div \r\n            className=\"distribution-fill\"\r\n            style={{ \r\n              width: `${stats.totalWords === 0 ? 0 : (count / stats.totalWords) * 100}%`,\r\n              backgroundColor: getDifficultyColor(parseInt(difficulty))\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"level-description\">{getDifficultyDescription(parseInt(difficulty))}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const getLevelColor = (level) => {\r\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\r\n    return colors[Math.min(level, 5)];\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    const colors = ['', '#28a745', '#ffc107', '#fd7e14', '#dc3545', '#6f42c1'];\r\n    return colors[difficulty];\r\n  };\r\n\r\n  const getRecentWords = () => {\r\n    return words\r\n      .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n      .slice(0, 5);\r\n  };\r\n\r\n  const getTopWords = () => {\r\n    return words\r\n      .filter(word => word.userLevel > 0)\r\n      .sort((a, b) => b.userLevel - a.userLevel)\r\n      .slice(0, 5);\r\n  };\r\n\r\n  return (\r\n    <div className=\"statistics\">\r\n      <div className=\"statistics-header\">\r\n        <h2>Learning Statistics</h2>\r\n        <p>Track your progress and see your learning patterns</p>\r\n      </div>\r\n\r\n      <div className=\"stats-overview\">\r\n        <div className=\"overview-card\">\r\n          <h3>Total Words</h3>\r\n          <div className=\"overview-number\">{stats.totalWords}</div>\r\n        </div>\r\n        <div className=\"overview-card\">\r\n          <h3>Mastered</h3>\r\n          <div className=\"overview-number\">{stats.byUserLevel[5] || 0}</div>\r\n        </div>\r\n        <div className=\"overview-card\">\r\n          <h3>Learning</h3>\r\n          <div className=\"overview-number\">\r\n            {Object.entries(stats.byUserLevel)\r\n              .filter(([level]) => level > 0 && level < 5)\r\n              .reduce((sum, [, count]) => sum + count, 0)}\r\n          </div>\r\n        </div>\r\n        <div className=\"overview-card\">\r\n          <h3>Progress</h3>\r\n          <div className=\"overview-number\">{calculateProgress()}%</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-sections\">\r\n        <div className=\"stats-section\">\r\n          <h3>Learning Progress</h3>\r\n          <div className=\"progress-container\">\r\n            {renderProgressBar(stats.byUserLevel[5] || 0, stats.totalWords, 'Mastered (Level 5)')}\r\n            {renderProgressBar(\r\n              Object.entries(stats.byUserLevel)\r\n                .filter(([level]) => level > 0 && level < 5)\r\n                .reduce((sum, [, count]) => sum + count, 0),\r\n              stats.totalWords,\r\n              'Learning (Level 1-4)'\r\n            )}\r\n            {renderProgressBar(stats.byUserLevel[0] || 0, stats.totalWords, 'Not Started (Level 0)')}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Level Distribution</h3>\r\n          <div className=\"distribution-container\">\r\n            {renderLevelDistribution()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Difficulty Distribution</h3>\r\n          <div className=\"distribution-container\">\r\n            {renderDifficultyDistribution()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Recent Words Added</h3>\r\n          <div className=\"words-list\">\r\n            {getRecentWords().map(word => (\r\n              <div key={word.id} className=\"word-item\">\r\n                <div className=\"word-text\">\r\n                  <span className=\"english\">{word.english}</span>\r\n                  <span className=\"hebrew\">{word.hebrew}</span>\r\n                </div>\r\n                <div className=\"word-meta\">\r\n                  <span className=\"level\">Level {word.userLevel}</span>\r\n                  <span className=\"difficulty\">Diff {word.difficulty}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Top Performing Words</h3>\r\n          <div className=\"words-list\">\r\n            {getTopWords().map(word => (\r\n              <div key={word.id} className=\"word-item\">\r\n                <div className=\"word-text\">\r\n                  <span className=\"english\">{word.english}</span>\r\n                  <span className=\"hebrew\">{word.hebrew}</span>\r\n                </div>\r\n                <div className=\"word-meta\">\r\n                  <span className=\"level\">Level {word.userLevel}</span>\r\n                  <span className=\"difficulty\">Diff {word.difficulty}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}