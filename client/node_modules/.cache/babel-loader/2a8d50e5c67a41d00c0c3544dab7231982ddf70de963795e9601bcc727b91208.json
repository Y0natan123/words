{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import axios from'axios';import'./AdminImport.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminImport=()=>{const[textContent,setTextContent]=useState('');const[isImporting,setIsImporting]=useState(false);const[isGenerating,setIsGenerating]=useState(false);const[progress,setProgress]=useState(null);const[importResult,setImportResult]=useState(null);const[showPreview,setShowPreview]=useState(false);const[words,setWords]=useState([]);const[activeTab,setActiveTab]=useState('import');const[searchTerm,setSearchTerm]=useState('');const fileInputRef=useRef(null);// Load words for admin management\nuseEffect(()=>{if(activeTab==='manage'){fetchWords();}},[activeTab]);const fetchWords=async()=>{try{const response=await axios.get('/api/words');setWords(response.data);}catch(error){console.error('Error fetching words:',error);}};const handleDeleteWord=async wordId=>{if(window.confirm('Are you sure you want to delete this word?')){try{await axios.delete(`/api/words/${wordId}`);setWords(words.filter(word=>word.id!==wordId));alert('Word deleted successfully');}catch(error){console.error('Error deleting word:',error);alert('Failed to delete word');}}};const reassessDifficulty=async word=>{try{const response=await axios.post('/api/ai/assess-difficulty',{word:word.english,context:`Hebrew translation: ${word.hebrew}`});const newDifficulty=response.data.difficulty;const updateResponse=await axios.put(`/api/words/${word.id}`,{difficulty:newDifficulty});// Update the word in the local state\nsetWords(words.map(w=>w.id===word.id?updateResponse.data:w));alert(`Difficulty reassessed: Level ${newDifficulty}`);}catch(error){console.error('Error reassessing difficulty:',error);alert('Failed to reassess difficulty');}};const handleFileUpload=event=>{const file=event.target.files[0];if(file){const reader=new FileReader();reader.onload=e=>{setTextContent(e.target.result);};reader.readAsText(file);}};const handleTextChange=e=>{setTextContent(e.target.value);};const previewWords=()=>{if(!textContent.trim()){alert('Please enter or upload text content first');return;}setShowPreview(true);};const parseWords=text=>{const lines=text.split('\\n').filter(line=>line.trim());const words=[];lines.forEach((line,index)=>{const trimmedLine=line.trim();// Try different parsing strategies\nlet english,hebrew;// Strategy 1: Look for tab separator\nif(trimmedLine.includes('\\t')){const parts=trimmedLine.split('\\t');if(parts.length>=2){english=parts[0].toLowerCase().trim();hebrew=parts.slice(1).join('\\t').trim();}}// Strategy 2: Look for multiple consecutive spaces (likely separator)\nelse if(trimmedLine.includes('  ')){const parts=trimmedLine.split(/\\s{2,}/);if(parts.length>=2){english=parts[0].toLowerCase().trim();hebrew=parts.slice(1).join(' ').trim();}}// Strategy 3: Look for common separators like |, -, or :\nelse if(trimmedLine.includes('|')||trimmedLine.includes('-')||trimmedLine.includes(':')){const separator=trimmedLine.includes('|')?'|':trimmedLine.includes('-')?'-':':';const parts=trimmedLine.split(separator);if(parts.length>=2){english=parts[0].toLowerCase().trim();hebrew=parts.slice(1).join(separator).trim();}}// Strategy 4: Fallback to original logic but with better hebrew detection\nelse{const parts=trimmedLine.split(/\\s+/);if(parts.length>=2){// Try to find where English ends and Hebrew begins\n// Hebrew text typically contains Hebrew characters\nconst hebrewCharRegex=/[\\u0590-\\u05FF\\uFB1D-\\uFB4F]/;let englishEndIndex=0;for(let i=0;i<parts.length;i++){if(hebrewCharRegex.test(parts[i])){englishEndIndex=i;break;}}// If no Hebrew characters found, assume last word is Hebrew\nif(englishEndIndex===0){englishEndIndex=parts.length-1;}english=parts.slice(0,englishEndIndex).join(' ').toLowerCase().trim();hebrew=parts.slice(englishEndIndex).join(' ').trim();}}if(english&&hebrew){words.push({english,hebrew,lineNumber:index+1});}});return words;};const startImport=async()=>{if(!textContent.trim()){alert('Please enter or upload text content first');return;}setIsImporting(true);setProgress(null);setImportResult(null);try{// Show progress simulation\nconst totalWords=parsedWords.length;let processed=0;const progressInterval=setInterval(()=>{processed+=Math.ceil(totalWords/20);// Update every 5%\nif(processed>=totalWords){processed=totalWords;}setProgress({processed,total:totalWords,added:Math.floor(processed*0.8),// Simulate 80% success rate\nskipped:Math.floor(processed*0.2),// Simulate 20% duplicates\nerrors:0,percentage:Math.round(processed/totalWords*100)});if(processed>=totalWords){clearInterval(progressInterval);}},100);// Send the import request\nconst response=await axios.post('/api/words/import',{textContent});clearInterval(progressInterval);setImportResult(response.data);setIsImporting(false);}catch(error){var _error$response,_error$response$data;console.error('Error importing words:',error);setImportResult({error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to import words'});setIsImporting(false);}};const resetForm=()=>{setTextContent('');setProgress(null);setImportResult(null);setShowPreview(false);if(fileInputRef.current){fileInputRef.current.value='';}};const handleDeleteAll=async()=>{const confirmMessage=`Are you sure you want to delete ALL words from the database?\\n\\nThis action cannot be undone!`;const userConfirmed=window.confirm(confirmMessage);if(userConfirmed){const finalConfirm=window.confirm('Final confirmation: This will permanently delete all words. Are you absolutely sure?');if(finalConfirm){try{const response=await axios.post('/api/words/clear-all',{confirm:true});alert(`Successfully deleted ${response.data.deletedCount} words`);// Refresh the page\nwindow.location.reload();}catch(error){var _error$response2,_error$response2$data;console.error('Error deleting all words:',error);alert('Failed to delete all words: '+(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message));}}}};const handleGenerateSentences=async()=>{const confirmMessage=`This will generate example sentences for all words that don't have them.\\n\\nThis may take a few minutes. Continue?`;const userConfirmed=window.confirm(confirmMessage);if(userConfirmed){setIsGenerating(true);try{const response=await axios.post('/api/words/generate-sentences');const details=response.data.details;alert(`✅ Successfully generated sentences!\\n\\n📊 Results:\\n• Processed: ${details.processed} words\\n• Updated: ${details.updated} words\\n• Errors: ${details.errors} words\\n\\n📝 All sentences were generated using high-quality educational templates matched to difficulty levels.`);// Refresh the page to show new sentences\nwindow.location.reload();}catch(error){var _error$response3,_error$response3$data;console.error('Error generating sentences:',error);alert('❌ Failed to generate sentences: '+(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message));}finally{setIsGenerating(false);}}};const parsedWords=parseWords(textContent);// Filter words for management tab\nconst filteredWords=words.filter(word=>word.english.toLowerCase().includes(searchTerm.toLowerCase())||word.hebrew.includes(searchTerm));return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-import\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"admin-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='import'?'active':''}`,onClick:()=>setActiveTab('import'),children:\"\\uD83D\\uDCE5 Import Words\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='manage'?'active':''}`,onClick:()=>setActiveTab('manage'),children:\"\\u2699\\uFE0F Manage Words\"})]}),activeTab==='import'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"admin-import-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Bulk Import Words\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Import multiple words from a text file or paste text directly. Supports multiple formats:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"format-help\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tab-separated:\"}),\" \\\"english\\\\t\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\\\"\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Double space:\"}),\" \\\"english  \\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\\\"\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Separators:\"}),\" \\\"english|\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\\\", \\\"english-\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\\\", \\\"english:\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\\\"\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Auto-detect:\"}),\" \\\"english phrase \\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\\\" (automatically detects Hebrew characters)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Auto-difficulty:\"}),\" Difficulty levels are automatically assessed based on word complexity\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"import-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-upload-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Upload Text File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".txt,.csv\",onChange:handleFileUpload,ref:fileInputRef,className:\"file-input\"}),/*#__PURE__*/_jsx(\"p\",{className:\"file-help\",children:\"Supported formats: .txt, .csv (UTF-8 encoding)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-input-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Or Paste Text Directly\"}),/*#__PURE__*/_jsx(\"textarea\",{value:textContent,onChange:handleTextChange,placeholder:\"Enter words in any format:\\nhello \\u05E9\\u05DC\\u05D5\\u05DD\\naccording to  \\u05E2\\u05DC \\u05E4\\u05D9\\ngood morning|\\u05D1\\u05D5\\u05E7\\u05E8 \\u05D8\\u05D5\\u05D1\\nthank you-\\u05EA\\u05D5\\u05D3\\u05D4\\nhow are you:\\u05D0\\u05D9\\u05DA \\u05D0\\u05EA\\u05D4\",rows:10,className:\"text-input\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"preview-section\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:previewWords,disabled:!textContent.trim(),children:[\"Preview Words (\",parsedWords.length,\" found)\"]})}),showPreview&&parsedWords.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"words-preview\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Preview (\",parsedWords.length,\" words)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview-table\",children:[/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"English\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Hebrew\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:parsedWords.slice(0,20).map((word,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:word.lineNumber}),/*#__PURE__*/_jsx(\"td\",{children:word.english}),/*#__PURE__*/_jsx(\"td\",{dir:\"rtl\",children:word.hebrew})]},index))})]}),parsedWords.length>20&&/*#__PURE__*/_jsxs(\"p\",{className:\"preview-note\",children:[\"Showing first 20 words. Total: \",parsedWords.length]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"import-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:startImport,disabled:isImporting||!textContent.trim(),children:isImporting?'Importing...':`Import ${parsedWords.length} Words`}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:resetForm,disabled:isImporting,children:\"Reset\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:handleDeleteAll,disabled:isImporting,title:\"Delete all words from database (Admin only)\",children:\"\\uD83D\\uDDD1\\uFE0F Delete All Words\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-success\",onClick:handleGenerateSentences,disabled:isGenerating||isImporting,title:\"Generate example sentences for existing words\",children:isGenerating?'Generating...':'📝 Generate Sentences'})]})]}),isImporting&&progress&&/*#__PURE__*/_jsxs(\"div\",{className:\"import-progress\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Import Progress\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${progress.percentage}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-stats\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Processed: \",progress.processed,\" / \",progress.total,\" (\",progress.percentage,\"%)\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Added: \",progress.added,\" | Skipped: \",progress.skipped,\" | Errors: \",progress.errors]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Estimated time remaining: \",Math.ceil((progress.total-progress.processed)/10),\" seconds\"]})]})]}),importResult&&/*#__PURE__*/_jsxs(\"div\",{className:`import-result ${importResult.error?'error':'success'}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Import Complete\"}),importResult.error?/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:importResult.error}):/*#__PURE__*/_jsxs(\"div\",{className:\"result-stats\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total processed:\"}),\" \",importResult.total]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Successfully added:\"}),\" \",importResult.added]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Skipped (already exist):\"}),\" \",importResult.skipped]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Errors:\"}),\" \",importResult.errors]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"import-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Import Instructions:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Format: \\\"english hebrew\\\" (one word per line)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"English words will be converted to lowercase\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Duplicate words will be skipped automatically\"}),/*#__PURE__*/_jsx(\"li\",{children:\"All imported words start at difficulty level 1 and user level 0\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Maximum file size: 10MB\"})]})]})]}),activeTab==='manage'&&/*#__PURE__*/_jsxs(\"div\",{className:\"word-management\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"management-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Word Management\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Manage existing words - reassess difficulty levels and delete words.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search words...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"search-input\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"word-count\",children:[filteredWords.length,\" words found\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"words-grid\",children:filteredWords.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-words\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"No words found. \",searchTerm?'Try a different search term.':'Import some words first.']})}):filteredWords.map(word=>/*#__PURE__*/_jsxs(\"div\",{className:\"admin-word-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"word-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"english\",children:word.english}),/*#__PURE__*/_jsx(\"p\",{className:\"hebrew\",children:word.hebrew}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat\",children:[\"Level: \",word.userLevel,\"/5\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat\",children:[\"Difficulty: \",word.difficulty,\"/5\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>reassessDifficulty(word),title:\"Reassess difficulty\",children:\"\\uD83D\\uDD04 Reassess\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>handleDeleteWord(word.id),title:\"Delete word\",children:\"\\uD83D\\uDDD1\\uFE0F Delete\"})]})]},word.id))})]})]});};export default AdminImport;","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminImport","textContent","setTextContent","isImporting","setIsImporting","isGenerating","setIsGenerating","progress","setProgress","importResult","setImportResult","showPreview","setShowPreview","words","setWords","activeTab","setActiveTab","searchTerm","setSearchTerm","fileInputRef","fetchWords","response","get","data","error","console","handleDeleteWord","wordId","window","confirm","delete","filter","word","id","alert","reassessDifficulty","post","english","context","hebrew","newDifficulty","difficulty","updateResponse","put","map","w","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsText","handleTextChange","value","previewWords","trim","parseWords","text","lines","split","line","forEach","index","trimmedLine","includes","parts","length","toLowerCase","slice","join","separator","hebrewCharRegex","englishEndIndex","i","test","push","lineNumber","startImport","totalWords","parsedWords","processed","progressInterval","setInterval","Math","ceil","total","added","floor","skipped","errors","percentage","round","clearInterval","_error$response","_error$response$data","resetForm","current","handleDeleteAll","confirmMessage","userConfirmed","finalConfirm","deletedCount","location","reload","_error$response2","_error$response2$data","message","handleGenerateSentences","details","updated","_error$response3","_error$response3$data","filteredWords","className","children","onClick","type","accept","onChange","ref","placeholder","rows","disabled","dir","title","style","width","userLevel"],"sources":["C:/Users/Magshimim/Documents/wordGame/Y0natan123.github.io/client/src/components/AdminImport.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminImport.css';\n\nconst AdminImport = () => {\n  const [textContent, setTextContent] = useState('');\n  const [isImporting, setIsImporting] = useState(false);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState(null);\n  const [importResult, setImportResult] = useState(null);\n  const [showPreview, setShowPreview] = useState(false);\n  const [words, setWords] = useState([]);\n  const [activeTab, setActiveTab] = useState('import');\n  const [searchTerm, setSearchTerm] = useState('');\n  const fileInputRef = useRef(null);\n\n  // Load words for admin management\n  useEffect(() => {\n    if (activeTab === 'manage') {\n      fetchWords();\n    }\n  }, [activeTab]);\n\n  const fetchWords = async () => {\n    try {\n      const response = await axios.get('/api/words');\n      setWords(response.data);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const handleDeleteWord = async (wordId) => {\n    if (window.confirm('Are you sure you want to delete this word?')) {\n      try {\n        await axios.delete(`/api/words/${wordId}`);\n        setWords(words.filter(word => word.id !== wordId));\n        alert('Word deleted successfully');\n      } catch (error) {\n        console.error('Error deleting word:', error);\n        alert('Failed to delete word');\n      }\n    }\n  };\n\n  const reassessDifficulty = async (word) => {\n    try {\n      const response = await axios.post('/api/ai/assess-difficulty', {\n        word: word.english,\n        context: `Hebrew translation: ${word.hebrew}`\n      });\n      const newDifficulty = response.data.difficulty;\n      const updateResponse = await axios.put(`/api/words/${word.id}`, { difficulty: newDifficulty });\n      \n      // Update the word in the local state\n      setWords(words.map(w => w.id === word.id ? updateResponse.data : w));\n      alert(`Difficulty reassessed: Level ${newDifficulty}`);\n    } catch (error) {\n      console.error('Error reassessing difficulty:', error);\n      alert('Failed to reassess difficulty');\n    }\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setTextContent(e.target.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const handleTextChange = (e) => {\n    setTextContent(e.target.value);\n  };\n\n  const previewWords = () => {\n    if (!textContent.trim()) {\n      alert('Please enter or upload text content first');\n      return;\n    }\n    setShowPreview(true);\n  };\n\n  const parseWords = (text) => {\n    const lines = text.split('\\n').filter(line => line.trim());\n    const words = [];\n    \n    lines.forEach((line, index) => {\n      const trimmedLine = line.trim();\n      \n      // Try different parsing strategies\n      let english, hebrew;\n      \n      // Strategy 1: Look for tab separator\n      if (trimmedLine.includes('\\t')) {\n        const parts = trimmedLine.split('\\t');\n        if (parts.length >= 2) {\n          english = parts[0].toLowerCase().trim();\n          hebrew = parts.slice(1).join('\\t').trim();\n        }\n      }\n      // Strategy 2: Look for multiple consecutive spaces (likely separator)\n      else if (trimmedLine.includes('  ')) {\n        const parts = trimmedLine.split(/\\s{2,}/);\n        if (parts.length >= 2) {\n          english = parts[0].toLowerCase().trim();\n          hebrew = parts.slice(1).join(' ').trim();\n        }\n      }\n      // Strategy 3: Look for common separators like |, -, or :\n      else if (trimmedLine.includes('|') || trimmedLine.includes('-') || trimmedLine.includes(':')) {\n        const separator = trimmedLine.includes('|') ? '|' : \n                        trimmedLine.includes('-') ? '-' : ':';\n        const parts = trimmedLine.split(separator);\n        if (parts.length >= 2) {\n          english = parts[0].toLowerCase().trim();\n          hebrew = parts.slice(1).join(separator).trim();\n        }\n      }\n      // Strategy 4: Fallback to original logic but with better hebrew detection\n      else {\n        const parts = trimmedLine.split(/\\s+/);\n        if (parts.length >= 2) {\n          // Try to find where English ends and Hebrew begins\n          // Hebrew text typically contains Hebrew characters\n          const hebrewCharRegex = /[\\u0590-\\u05FF\\uFB1D-\\uFB4F]/;\n          \n          let englishEndIndex = 0;\n          for (let i = 0; i < parts.length; i++) {\n            if (hebrewCharRegex.test(parts[i])) {\n              englishEndIndex = i;\n              break;\n            }\n          }\n          \n          // If no Hebrew characters found, assume last word is Hebrew\n          if (englishEndIndex === 0) {\n            englishEndIndex = parts.length - 1;\n          }\n          \n          english = parts.slice(0, englishEndIndex).join(' ').toLowerCase().trim();\n          hebrew = parts.slice(englishEndIndex).join(' ').trim();\n        }\n      }\n      \n      if (english && hebrew) {\n        words.push({\n          english,\n          hebrew,\n          lineNumber: index + 1\n        });\n      }\n    });\n    \n    return words;\n  };\n\n  const startImport = async () => {\n    if (!textContent.trim()) {\n      alert('Please enter or upload text content first');\n      return;\n    }\n\n    setIsImporting(true);\n    setProgress(null);\n    setImportResult(null);\n\n    try {\n      // Show progress simulation\n      const totalWords = parsedWords.length;\n      let processed = 0;\n      \n      const progressInterval = setInterval(() => {\n        processed += Math.ceil(totalWords / 20); // Update every 5%\n        if (processed >= totalWords) {\n          processed = totalWords;\n        }\n        \n        setProgress({\n          processed,\n          total: totalWords,\n          added: Math.floor(processed * 0.8), // Simulate 80% success rate\n          skipped: Math.floor(processed * 0.2), // Simulate 20% duplicates\n          errors: 0,\n          percentage: Math.round((processed / totalWords) * 100)\n        });\n        \n        if (processed >= totalWords) {\n          clearInterval(progressInterval);\n        }\n      }, 100);\n\n      // Send the import request\n      const response = await axios.post('/api/words/import', { textContent });\n      \n      clearInterval(progressInterval);\n      setImportResult(response.data);\n      setIsImporting(false);\n      \n    } catch (error) {\n      console.error('Error importing words:', error);\n      setImportResult({ error: error.response?.data?.error || 'Failed to import words' });\n      setIsImporting(false);\n    }\n  };\n\n  const resetForm = () => {\n    setTextContent('');\n    setProgress(null);\n    setImportResult(null);\n    setShowPreview(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleDeleteAll = async () => {\n    const confirmMessage = `Are you sure you want to delete ALL words from the database?\\n\\nThis action cannot be undone!`;\n    const userConfirmed = window.confirm(confirmMessage);\n    \n    if (userConfirmed) {\n      const finalConfirm = window.confirm('Final confirmation: This will permanently delete all words. Are you absolutely sure?');\n      if (finalConfirm) {\n        try {\n          const response = await axios.post('/api/words/clear-all', { confirm: true });\n          alert(`Successfully deleted ${response.data.deletedCount} words`);\n          // Refresh the page\n          window.location.reload();\n        } catch (error) {\n          console.error('Error deleting all words:', error);\n          alert('Failed to delete all words: ' + (error.response?.data?.error || error.message));\n        }\n      }\n    }\n  };\n\n  const handleGenerateSentences = async () => {\n    const confirmMessage = `This will generate example sentences for all words that don't have them.\\n\\nThis may take a few minutes. Continue?`;\n    const userConfirmed = window.confirm(confirmMessage);\n    \n    if (userConfirmed) {\n      setIsGenerating(true);\n      try {\n        const response = await axios.post('/api/words/generate-sentences');\n        const details = response.data.details;\n        alert(`✅ Successfully generated sentences!\\n\\n📊 Results:\\n• Processed: ${details.processed} words\\n• Updated: ${details.updated} words\\n• Errors: ${details.errors} words\\n\\n📝 All sentences were generated using high-quality educational templates matched to difficulty levels.`);\n        // Refresh the page to show new sentences\n        window.location.reload();\n      } catch (error) {\n        console.error('Error generating sentences:', error);\n        alert('❌ Failed to generate sentences: ' + (error.response?.data?.error || error.message));\n      } finally {\n        setIsGenerating(false);\n      }\n    }\n  };\n\n  const parsedWords = parseWords(textContent);\n\n  // Filter words for management tab\n  const filteredWords = words.filter(word => \n    word.english.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    word.hebrew.includes(searchTerm)\n  );\n\n  return (\n    <div className=\"admin-import\">\n      {/* Tab Navigation */}\n      <div className=\"admin-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'import' ? 'active' : ''}`}\n          onClick={() => setActiveTab('import')}\n        >\n          📥 Import Words\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'manage' ? 'active' : ''}`}\n          onClick={() => setActiveTab('manage')}\n        >\n          ⚙️ Manage Words\n        </button>\n      </div>\n\n      {/* Import Tab */}\n      {activeTab === 'import' && (\n        <>\n          <div className=\"admin-import-header\">\n            <h2>Bulk Import Words</h2>\n            <p>Import multiple words from a text file or paste text directly. Supports multiple formats:</p>\n            <ul className=\"format-help\">\n              <li><strong>Tab-separated:</strong> \"english\\tעברית\"</li>\n              <li><strong>Double space:</strong> \"english  עברית\"</li>\n              <li><strong>Separators:</strong> \"english|עברית\", \"english-עברית\", \"english:עברית\"</li>\n              <li><strong>Auto-detect:</strong> \"english phrase עברית\" (automatically detects Hebrew characters)</li>\n              <li><strong>Auto-difficulty:</strong> Difficulty levels are automatically assessed based on word complexity</li>\n            </ul>\n          </div>\n\n      <div className=\"import-section\">\n        <div className=\"file-upload-section\">\n          <h3>Upload Text File</h3>\n          <input\n            type=\"file\"\n            accept=\".txt,.csv\"\n            onChange={handleFileUpload}\n            ref={fileInputRef}\n            className=\"file-input\"\n          />\n          <p className=\"file-help\">Supported formats: .txt, .csv (UTF-8 encoding)</p>\n        </div>\n\n        <div className=\"text-input-section\">\n          <h3>Or Paste Text Directly</h3>\n          <textarea\n            value={textContent}\n            onChange={handleTextChange}\n            placeholder=\"Enter words in any format:&#10;hello שלום&#10;according to  על פי&#10;good morning|בוקר טוב&#10;thank you-תודה&#10;how are you:איך אתה\"\n            rows={10}\n            className=\"text-input\"\n          />\n        </div>\n\n        <div className=\"preview-section\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={previewWords}\n            disabled={!textContent.trim()}\n          >\n            Preview Words ({parsedWords.length} found)\n          </button>\n        </div>\n\n        {showPreview && parsedWords.length > 0 && (\n          <div className=\"words-preview\">\n            <h3>Preview ({parsedWords.length} words)</h3>\n            <div className=\"preview-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>English</th>\n                    <th>Hebrew</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {parsedWords.slice(0, 20).map((word, index) => (\n                    <tr key={index}>\n                      <td>{word.lineNumber}</td>\n                      <td>{word.english}</td>\n                      <td dir=\"rtl\">{word.hebrew}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              {parsedWords.length > 20 && (\n                <p className=\"preview-note\">Showing first 20 words. Total: {parsedWords.length}</p>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div className=\"import-actions\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={startImport}\n            disabled={isImporting || !textContent.trim()}\n          >\n            {isImporting ? 'Importing...' : `Import ${parsedWords.length} Words`}\n          </button>\n          \n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={resetForm}\n            disabled={isImporting}\n          >\n            Reset\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={handleDeleteAll}\n            disabled={isImporting}\n            title=\"Delete all words from database (Admin only)\"\n          >\n            🗑️ Delete All Words\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            onClick={handleGenerateSentences}\n            disabled={isGenerating || isImporting}\n            title=\"Generate example sentences for existing words\"\n          >\n            {isGenerating ? 'Generating...' : '📝 Generate Sentences'}\n          </button>\n        </div>\n      </div>\n\n      {isImporting && progress && (\n        <div className=\"import-progress\">\n          <h3>Import Progress</h3>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${progress.percentage}%` }}\n            ></div>\n          </div>\n          <div className=\"progress-stats\">\n            <p>Processed: {progress.processed} / {progress.total} ({progress.percentage}%)</p>\n            <p>Added: {progress.added} | Skipped: {progress.skipped} | Errors: {progress.errors}</p>\n            <p>Estimated time remaining: {Math.ceil((progress.total - progress.processed) / 10)} seconds</p>\n          </div>\n        </div>\n      )}\n\n      {importResult && (\n        <div className={`import-result ${importResult.error ? 'error' : 'success'}`}>\n          <h3>Import Complete</h3>\n          {importResult.error ? (\n            <p className=\"error-message\">{importResult.error}</p>\n          ) : (\n            <div className=\"result-stats\">\n              <p><strong>Total processed:</strong> {importResult.total}</p>\n              <p><strong>Successfully added:</strong> {importResult.added}</p>\n              <p><strong>Skipped (already exist):</strong> {importResult.skipped}</p>\n              <p><strong>Errors:</strong> {importResult.errors}</p>\n            </div>\n          )}\n        </div>\n      )}\n\n          <div className=\"import-info\">\n            <h3>Import Instructions:</h3>\n            <ul>\n              <li>Format: \"english hebrew\" (one word per line)</li>\n              <li>English words will be converted to lowercase</li>\n              <li>Duplicate words will be skipped automatically</li>\n              <li>All imported words start at difficulty level 1 and user level 0</li>\n              <li>Maximum file size: 10MB</li>\n            </ul>\n          </div>\n        </>\n      )}\n\n      {/* Manage Tab */}\n      {activeTab === 'manage' && (\n        <div className=\"word-management\">\n          <div className=\"management-header\">\n            <h2>Word Management</h2>\n            <p>Manage existing words - reassess difficulty levels and delete words.</p>\n            \n            <div className=\"search-section\">\n              <input\n                type=\"text\"\n                placeholder=\"Search words...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-input\"\n              />\n              <span className=\"word-count\">{filteredWords.length} words found</span>\n            </div>\n          </div>\n\n          <div className=\"words-grid\">\n            {filteredWords.length === 0 ? (\n              <div className=\"no-words\">\n                <p>No words found. {searchTerm ? 'Try a different search term.' : 'Import some words first.'}</p>\n              </div>\n            ) : (\n              filteredWords.map(word => (\n                <div key={word.id} className=\"admin-word-card\">\n                  <div className=\"word-info\">\n                    <h3 className=\"english\">{word.english}</h3>\n                    <p className=\"hebrew\">{word.hebrew}</p>\n                    <div className=\"word-stats\">\n                      <span className=\"stat\">Level: {word.userLevel}/5</span>\n                      <span className=\"stat\">Difficulty: {word.difficulty}/5</span>\n                    </div>\n                  </div>\n                  <div className=\"word-actions\">\n                    <button \n                      className=\"btn btn-secondary\"\n                      onClick={() => reassessDifficulty(word)}\n                      title=\"Reassess difficulty\"\n                    >\n                      🔄 Reassess\n                    </button>\n                    <button \n                      className=\"btn btn-danger\"\n                      onClick={() => handleDeleteWord(word.id)}\n                      title=\"Delete word\"\n                    >\n                      🗑️ Delete\n                    </button>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminImport; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}