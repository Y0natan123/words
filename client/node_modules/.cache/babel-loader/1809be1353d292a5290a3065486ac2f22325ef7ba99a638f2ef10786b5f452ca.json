{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magshimim\\\\Documents\\\\wordGame\\\\Y0natan123.github.io\\\\client\\\\src\\\\components\\\\Statistics.js\";\nimport React from 'react';\nimport './Statistics.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = ({\n  stats,\n  words,\n  languagePair\n}) => {\n  var _stats$byUserLevel2, _stats$byUserLevel3, _stats$byUserLevel4;\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading statistics...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n  const calculateProgress = () => {\n    var _stats$byUserLevel;\n    const total = stats.totalWords;\n    if (total === 0) return 0;\n\n    // Handle both old and new data formats\n    const mastered = stats.masteredWords || ((_stats$byUserLevel = stats.byUserLevel) === null || _stats$byUserLevel === void 0 ? void 0 : _stats$byUserLevel[5]) || 0;\n    return Math.round(mastered / total * 100);\n  };\n  const getLevelDescription = level => {\n    const descriptions = {\n      0: 'Not Started',\n      1: 'Beginner',\n      2: 'Elementary',\n      3: 'Intermediate',\n      4: 'Advanced',\n      5: 'Mastered'\n    };\n    return descriptions[level] || 'Unknown';\n  };\n  const getDifficultyDescription = difficulty => {\n    const descriptions = {\n      1: 'Very Basic',\n      2: 'Basic',\n      3: 'Intermediate',\n      4: 'Advanced',\n      5: 'Very Advanced'\n    };\n    return descriptions[difficulty] || 'Unknown';\n  };\n  const renderProgressBar = (current, total, label) => {\n    const percentage = total === 0 ? 0 : Math.round(current / total * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [current, \" / \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${percentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-percentage\",\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  const renderLevelDistribution = () => {\n    // Handle new data format\n    if (stats.byUserLevel) {\n      return Object.entries(stats.byUserLevel).map(([level, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"level-name\",\n            children: [\"Level \", level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"level-count\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"distribution-fill\",\n            style: {\n              width: `${stats.totalWords === 0 ? 0 : count / stats.totalWords * 100}%`,\n              backgroundColor: getLevelColor(parseInt(level))\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-description\",\n          children: getLevelDescription(parseInt(level))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, level, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this));\n    }\n\n    // New data format - create distribution from available stats\n    const distribution = [{\n      level: 0,\n      count: stats.newWords || 0,\n      description: 'Not Started'\n    }, {\n      level: 1,\n      count: Math.round((stats.learningWords || 0) * 0.25),\n      description: 'Beginner'\n    }, {\n      level: 2,\n      count: Math.round((stats.learningWords || 0) * 0.25),\n      description: 'Elementary'\n    }, {\n      level: 3,\n      count: Math.round((stats.learningWords || 0) * 0.25),\n      description: 'Intermediate'\n    }, {\n      level: 4,\n      count: Math.round((stats.learningWords || 0) * 0.25),\n      description: 'Advanced'\n    }, {\n      level: 5,\n      count: stats.masteredWords || 0,\n      description: 'Mastered'\n    }];\n    return distribution.filter(item => item.count > 0).map(({\n      level,\n      count,\n      description\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribution-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-name\",\n          children: [\"Level \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-fill\",\n          style: {\n            width: `${stats.totalWords === 0 ? 0 : count / stats.totalWords * 100}%`,\n            backgroundColor: getLevelColor(level)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"level-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, level, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this));\n  };\n  const renderDifficultyDistribution = () => {\n    // Handle old data format\n    if (stats.byDifficulty) {\n      return Object.entries(stats.byDifficulty).map(([difficulty, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"level-name\",\n            children: [\"Difficulty \", difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"level-count\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"distribution-fill\",\n            style: {\n              width: `${stats.totalWords === 0 ? 0 : count / stats.totalWords * 100}%`,\n              backgroundColor: getDifficultyColor(parseInt(difficulty))\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-description\",\n          children: getDifficultyDescription(parseInt(difficulty))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, difficulty, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this));\n    }\n\n    // New data format - calculate from words array\n    if (!words || words.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No difficulty data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this);\n    }\n    const difficultyCount = words.reduce((acc, word) => {\n      const diff = word.difficulty || 1;\n      acc[diff] = (acc[diff] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(difficultyCount).map(([difficulty, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribution-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-name\",\n          children: [\"Difficulty \", difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-fill\",\n          style: {\n            width: `${stats.totalWords === 0 ? 0 : count / stats.totalWords * 100}%`,\n            backgroundColor: getDifficultyColor(parseInt(difficulty))\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"level-description\",\n        children: getDifficultyDescription(parseInt(difficulty))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, difficulty, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this));\n  };\n  const getLevelColor = level => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n  const getDifficultyColor = difficulty => {\n    const colors = ['', '#28a745', '#ffc107', '#fd7e14', '#dc3545', '#6f42c1'];\n    return colors[difficulty];\n  };\n  const getRecentWords = () => {\n    if (!words || words.length === 0) return [];\n    return words.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).slice(0, 5);\n  };\n  const getTopWords = () => {\n    if (!words || words.length === 0) return [];\n    return words.filter(word => (word.userLevel || 0) > 0).sort((a, b) => (b.userLevel || 0) - (a.userLevel || 0)).slice(0, 5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Learning Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Track your progress and see your learning patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), languagePair && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-pair-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Language Pair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pair-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"source-language\",\n          children: languagePair.sourceLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrow\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"target-language\",\n          children: languagePair.targetLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: stats.totalWords || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mastered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: stats.masteredWords || ((_stats$byUserLevel2 = stats.byUserLevel) === null || _stats$byUserLevel2 === void 0 ? void 0 : _stats$byUserLevel2[5]) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Learning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: stats.learningWords || (stats.byUserLevel ? Object.entries(stats.byUserLevel).filter(([level]) => level > 0 && level < 5).reduce((sum, [, count]) => sum + count, 0) : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overview-number\",\n          children: [calculateProgress(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Learning Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [renderProgressBar(stats.masteredWords || ((_stats$byUserLevel3 = stats.byUserLevel) === null || _stats$byUserLevel3 === void 0 ? void 0 : _stats$byUserLevel3[5]) || 0, stats.totalWords, 'Mastered (Level 5)'), renderProgressBar(stats.learningWords || (stats.byUserLevel ? Object.entries(stats.byUserLevel).filter(([level]) => level > 0 && level < 5).reduce((sum, [, count]) => sum + count, 0) : 0), stats.totalWords, 'Learning (Level 1-4)'), renderProgressBar(stats.newWords || ((_stats$byUserLevel4 = stats.byUserLevel) === null || _stats$byUserLevel4 === void 0 ? void 0 : _stats$byUserLevel4[0]) || 0, stats.totalWords, 'Not Started (Level 0)')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Level Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-container\",\n          children: renderLevelDistribution()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Difficulty Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution-container\",\n          children: renderDifficultyDistribution()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Words Added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-list\",\n          children: getRecentWords().length > 0 ? getRecentWords().map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"source\",\n                children: word.sourceWord || word.english\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"target\",\n                children: word.targetWord || word.hebrew\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"level\",\n                children: [\"Level \", word.userLevel || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"difficulty\",\n                children: [\"Diff \", word.difficulty || 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No words added yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Top Performing Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-list\",\n          children: getTopWords().length > 0 ? getTopWords().map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"source\",\n                children: word.sourceWord || word.english\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"target\",\n                children: word.targetWord || word.hebrew\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"level\",\n                children: [\"Level \", word.userLevel || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"difficulty\",\n                children: [\"Diff \", word.difficulty || 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No words learned yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Statistics","stats","words","languagePair","_stats$byUserLevel2","_stats$byUserLevel3","_stats$byUserLevel4","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateProgress","_stats$byUserLevel","total","totalWords","mastered","masteredWords","byUserLevel","Math","round","getLevelDescription","level","descriptions","getDifficultyDescription","difficulty","renderProgressBar","current","label","percentage","style","width","renderLevelDistribution","Object","entries","map","count","backgroundColor","getLevelColor","parseInt","distribution","newWords","description","learningWords","filter","item","renderDifficultyDistribution","byDifficulty","getDifficultyColor","length","difficultyCount","reduce","acc","word","diff","colors","min","getRecentWords","sort","a","b","Date","createdAt","slice","getTopWords","userLevel","sourceLanguage","targetLanguage","sum","sourceWord","english","targetWord","hebrew","id","_c","$RefreshReg$"],"sources":["C:/Users/Magshimim/Documents/wordGame/Y0natan123.github.io/client/src/components/Statistics.js"],"sourcesContent":["import React from 'react';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ stats, words, languagePair }) => {\r\n  if (!stats) {\r\n    return (\r\n      <div className=\"statistics\">\r\n        <div className=\"loading\">Loading statistics...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const calculateProgress = () => {\r\n    const total = stats.totalWords;\r\n    if (total === 0) return 0;\r\n    \r\n    // Handle both old and new data formats\r\n    const mastered = stats.masteredWords || stats.byUserLevel?.[5] || 0;\r\n    return Math.round((mastered / total) * 100);\r\n  };\r\n\r\n  const getLevelDescription = (level) => {\r\n    const descriptions = {\r\n      0: 'Not Started',\r\n      1: 'Beginner',\r\n      2: 'Elementary',\r\n      3: 'Intermediate',\r\n      4: 'Advanced',\r\n      5: 'Mastered'\r\n    };\r\n    return descriptions[level] || 'Unknown';\r\n  };\r\n\r\n  const getDifficultyDescription = (difficulty) => {\r\n    const descriptions = {\r\n      1: 'Very Basic',\r\n      2: 'Basic',\r\n      3: 'Intermediate',\r\n      4: 'Advanced',\r\n      5: 'Very Advanced'\r\n    };\r\n    return descriptions[difficulty] || 'Unknown';\r\n  };\r\n\r\n  const renderProgressBar = (current, total, label) => {\r\n    const percentage = total === 0 ? 0 : Math.round((current / total) * 100);\r\n    return (\r\n      <div className=\"progress-item\">\r\n        <div className=\"progress-label\">\r\n          <span>{label}</span>\r\n          <span>{current} / {total}</span>\r\n        </div>\r\n        <div className=\"progress-bar\">\r\n          <div \r\n            className=\"progress-fill\" \r\n            style={{ width: `${percentage}%` }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"progress-percentage\">{percentage}%</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderLevelDistribution = () => {\r\n    // Handle new data format\r\n    if (stats.byUserLevel) {\r\n      return Object.entries(stats.byUserLevel).map(([level, count]) => (\r\n        <div key={level} className=\"distribution-item\">\r\n          <div className=\"distribution-header\">\r\n            <span className=\"level-name\">Level {level}</span>\r\n            <span className=\"level-count\">{count}</span>\r\n          </div>\r\n          <div className=\"distribution-bar\">\r\n            <div \r\n              className=\"distribution-fill\"\r\n              style={{ \r\n                width: `${stats.totalWords === 0 ? 0 : (count / stats.totalWords) * 100}%`,\r\n                backgroundColor: getLevelColor(parseInt(level))\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <span className=\"level-description\">{getLevelDescription(parseInt(level))}</span>\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    // New data format - create distribution from available stats\r\n    const distribution = [\r\n      { level: 0, count: stats.newWords || 0, description: 'Not Started' },\r\n      { level: 1, count: Math.round((stats.learningWords || 0) * 0.25), description: 'Beginner' },\r\n      { level: 2, count: Math.round((stats.learningWords || 0) * 0.25), description: 'Elementary' },\r\n      { level: 3, count: Math.round((stats.learningWords || 0) * 0.25), description: 'Intermediate' },\r\n      { level: 4, count: Math.round((stats.learningWords || 0) * 0.25), description: 'Advanced' },\r\n      { level: 5, count: stats.masteredWords || 0, description: 'Mastered' }\r\n    ];\r\n\r\n    return distribution.filter(item => item.count > 0).map(({ level, count, description }) => (\r\n      <div key={level} className=\"distribution-item\">\r\n        <div className=\"distribution-header\">\r\n          <span className=\"level-name\">Level {level}</span>\r\n          <span className=\"level-count\">{count}</span>\r\n        </div>\r\n        <div className=\"distribution-bar\">\r\n          <div \r\n            className=\"distribution-fill\"\r\n            style={{ \r\n              width: `${stats.totalWords === 0 ? 0 : (count / stats.totalWords) * 100}%`,\r\n              backgroundColor: getLevelColor(level)\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"level-description\">{description}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const renderDifficultyDistribution = () => {\r\n    // Handle old data format\r\n    if (stats.byDifficulty) {\r\n      return Object.entries(stats.byDifficulty).map(([difficulty, count]) => (\r\n        <div key={difficulty} className=\"distribution-item\">\r\n          <div className=\"distribution-header\">\r\n            <span className=\"level-name\">Difficulty {difficulty}</span>\r\n            <span className=\"level-count\">{count}</span>\r\n          </div>\r\n          <div className=\"distribution-bar\">\r\n            <div \r\n              className=\"distribution-fill\"\r\n              style={{ \r\n                width: `${stats.totalWords === 0 ? 0 : (count / stats.totalWords) * 100}%`,\r\n                backgroundColor: getDifficultyColor(parseInt(difficulty))\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <span className=\"level-description\">{getDifficultyDescription(parseInt(difficulty))}</span>\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    // New data format - calculate from words array\r\n    if (!words || words.length === 0) {\r\n      return (\r\n        <div className=\"no-data\">\r\n          <p>No difficulty data available</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const difficultyCount = words.reduce((acc, word) => {\r\n      const diff = word.difficulty || 1;\r\n      acc[diff] = (acc[diff] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n\r\n    return Object.entries(difficultyCount).map(([difficulty, count]) => (\r\n      <div key={difficulty} className=\"distribution-item\">\r\n        <div className=\"distribution-header\">\r\n          <span className=\"level-name\">Difficulty {difficulty}</span>\r\n          <span className=\"level-count\">{count}</span>\r\n        </div>\r\n        <div className=\"distribution-bar\">\r\n          <div \r\n            className=\"distribution-fill\"\r\n            style={{ \r\n              width: `${stats.totalWords === 0 ? 0 : (count / stats.totalWords) * 100}%`,\r\n              backgroundColor: getDifficultyColor(parseInt(difficulty))\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"level-description\">{getDifficultyDescription(parseInt(difficulty))}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const getLevelColor = (level) => {\r\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\r\n    return colors[Math.min(level, 5)];\r\n  };\r\n\r\n  const getDifficultyColor = (difficulty) => {\r\n    const colors = ['', '#28a745', '#ffc107', '#fd7e14', '#dc3545', '#6f42c1'];\r\n    return colors[difficulty];\r\n  };\r\n\r\n  const getRecentWords = () => {\r\n    if (!words || words.length === 0) return [];\r\n    return words\r\n      .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n      .slice(0, 5);\r\n  };\r\n\r\n  const getTopWords = () => {\r\n    if (!words || words.length === 0) return [];\r\n    return words\r\n      .filter(word => (word.userLevel || 0) > 0)\r\n      .sort((a, b) => (b.userLevel || 0) - (a.userLevel || 0))\r\n      .slice(0, 5);\r\n  };\r\n\r\n  return (\r\n    <div className=\"statistics\">\r\n      <div className=\"statistics-header\">\r\n        <h2>Learning Statistics</h2>\r\n        <p>Track your progress and see your learning patterns</p>\r\n      </div>\r\n\r\n      {languagePair && (\r\n        <div className=\"language-pair-info\">\r\n          <h3>Current Language Pair</h3>\r\n          <div className=\"pair-display\">\r\n            <span className=\"source-language\">{languagePair.sourceLanguage}</span>\r\n            <span className=\"arrow\">→</span>\r\n            <span className=\"target-language\">{languagePair.targetLanguage}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"stats-overview\">\r\n        <div className=\"overview-card\">\r\n          <h3>Total Words</h3>\r\n          <div className=\"overview-number\">{stats.totalWords || 0}</div>\r\n        </div>\r\n        <div className=\"overview-card\">\r\n          <h3>Mastered</h3>\r\n          <div className=\"overview-number\">{stats.masteredWords || stats.byUserLevel?.[5] || 0}</div>\r\n        </div>\r\n        <div className=\"overview-card\">\r\n          <h3>Learning</h3>\r\n          <div className=\"overview-number\">\r\n            {stats.learningWords || \r\n             (stats.byUserLevel ? \r\n               Object.entries(stats.byUserLevel)\r\n                 .filter(([level]) => level > 0 && level < 5)\r\n                 .reduce((sum, [, count]) => sum + count, 0) \r\n               : 0)}\r\n          </div>\r\n        </div>\r\n        <div className=\"overview-card\">\r\n          <h3>Progress</h3>\r\n          <div className=\"overview-number\">{calculateProgress()}%</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-sections\">\r\n        <div className=\"stats-section\">\r\n          <h3>Learning Progress</h3>\r\n          <div className=\"progress-container\">\r\n            {renderProgressBar(\r\n              stats.masteredWords || stats.byUserLevel?.[5] || 0, \r\n              stats.totalWords, \r\n              'Mastered (Level 5)'\r\n            )}\r\n            {renderProgressBar(\r\n              stats.learningWords || \r\n              (stats.byUserLevel ? \r\n                Object.entries(stats.byUserLevel)\r\n                  .filter(([level]) => level > 0 && level < 5)\r\n                  .reduce((sum, [, count]) => sum + count, 0) \r\n                : 0),\r\n              stats.totalWords,\r\n              'Learning (Level 1-4)'\r\n            )}\r\n            {renderProgressBar(\r\n              stats.newWords || stats.byUserLevel?.[0] || 0, \r\n              stats.totalWords, \r\n              'Not Started (Level 0)'\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Level Distribution</h3>\r\n          <div className=\"distribution-container\">\r\n            {renderLevelDistribution()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Difficulty Distribution</h3>\r\n          <div className=\"distribution-container\">\r\n            {renderDifficultyDistribution()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Recent Words Added</h3>\r\n          <div className=\"words-list\">\r\n            {getRecentWords().length > 0 ? (\r\n              getRecentWords().map(word => (\r\n                <div key={word.id} className=\"word-item\">\r\n                  <div className=\"word-text\">\r\n                    <span className=\"source\">{word.sourceWord || word.english}</span>\r\n                    <span className=\"target\">{word.targetWord || word.hebrew}</span>\r\n                  </div>\r\n                  <div className=\"word-meta\">\r\n                    <span className=\"level\">Level {word.userLevel || 0}</span>\r\n                    <span className=\"difficulty\">Diff {word.difficulty || 1}</span>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-data\">\r\n                <p>No words added yet</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats-section\">\r\n          <h3>Top Performing Words</h3>\r\n          <div className=\"words-list\">\r\n            {getTopWords().length > 0 ? (\r\n              getTopWords().map(word => (\r\n                <div key={word.id} className=\"word-item\">\r\n                  <div className=\"word-text\">\r\n                    <span className=\"source\">{word.sourceWord || word.english}</span>\r\n                    <span className=\"target\">{word.targetWord || word.hebrew}</span>\r\n                  </div>\r\n                  <div className=\"word-meta\">\r\n                    <span className=\"level\">Level {word.userLevel || 0}</span>\r\n                    <span className=\"difficulty\">Diff {word.difficulty || 1}</span>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-data\">\r\n                <p>No words learned yet</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}