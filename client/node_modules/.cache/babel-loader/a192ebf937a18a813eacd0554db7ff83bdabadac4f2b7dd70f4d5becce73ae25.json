{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magshimim\\\\Documents\\\\wordGame\\\\client\\\\src\\\\components\\\\Practice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Practice = ({\n  words,\n  onWordUpdated\n}) => {\n  _s();\n  const [currentMode, setCurrentMode] = useState(null); // null = main menu, 'knowledge', 'flashcards'\n\n  const handleModeSelect = mode => {\n    setCurrentMode(mode);\n  };\n  const handleExit = () => {\n    setCurrentMode(null);\n  };\n\n  // Main menu\n  if (currentMode === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-main-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-menu-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Practice Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"practice-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"practice-option knowledge-check\",\n            onClick: () => handleModeSelect('knowledge'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-icon\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Knowledge Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Test your knowledge level with interactive quizzes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"practice-option flashcards\",\n            onClick: () => handleModeSelect('flashcards'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-icon\",\n              children: \"\\uD83C\\uDCCF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Flash Cards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Traditional flash card practice mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Knowledge Check Mode\n  if (currentMode === 'knowledge') {\n    return /*#__PURE__*/_jsxDEV(KnowledgeCheck, {\n      words: words,\n      onWordUpdated: onWordUpdated,\n      onExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Flash Cards Mode\n  if (currentMode === 'flashcards') {\n    return /*#__PURE__*/_jsxDEV(FlashCards, {\n      words: words,\n      onWordUpdated: onWordUpdated,\n      onExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return null;\n};\n\n// Knowledge Check Component with Kahoot-style design and learning algorithm\n_s(Practice, \"QdvPwKuyqopehOUMRRlXQstoUgo=\");\n_c = Practice;\nconst KnowledgeCheck = ({\n  words,\n  onWordUpdated,\n  onExit\n}) => {\n  _s2();\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showHebrew, setShowHebrew] = useState(false);\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [localWords, setLocalWords] = useState([]);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [sessionStats, setSessionStats] = useState({\n    correct: 0,\n    total: 0\n  });\n  const [showResult, setShowResult] = useState(false);\n  const [answeredWord, setAnsweredWord] = useState(null);\n  // Default to middle value\n\n  useEffect(() => {\n    // Create a local copy of words to prevent issues\n    setLocalWords([...words]);\n\n    // Check if speech synthesis is supported\n    if ('speechSynthesis' in window) {\n      setSpeechSupported(true);\n    }\n  }, [words]);\n\n  // Load words using spaced repetition algorithm\n  const loadSpacedRepetitionWords = async () => {\n    try {\n      // Get settings from localStorage\n      const savedSettings = localStorage.getItem('practiceSettings');\n      const settings = savedSettings ? JSON.parse(savedSettings) : {\n        maxFocusWords: 5,\n        focusPeriodDays: 5,\n        reviewIntervalDays: 7,\n        masteredReviewDays: 14,\n        sessionSize: 15 // New setting for session size\n      };\n      const response = await axios.get('/api/words/spaced-repetition', {\n        params: settings\n      });\n      const {\n        focusWords,\n        reviewWords\n      } = response.data;\n\n      // Combine focus words and review words\n      const allWords = [...focusWords, ...reviewWords];\n\n      // Mark review words for special handling\n      const markedWords = allWords.map(word => ({\n        ...word,\n        isReviewWord: reviewWords.some(rw => rw.id === word.id)\n      }));\n\n      // Shuffle for variety\n      const shuffled = [...markedWords].sort(() => Math.random() - 0.5);\n\n      // Limit session size based on settings\n      const sessionSize = settings.sessionSize || 15;\n      return shuffled.slice(0, sessionSize);\n    } catch (error) {\n      console.error('Error loading spaced repetition words:', error);\n      // Fallback to old algorithm if spaced repetition fails\n      return createFallbackPracticeSet(localWords);\n    }\n  };\n\n  // Fallback algorithm (original smart practice set)\n  const createFallbackPracticeSet = words => {\n    const availableWords = words.filter(word => word.userLevel < 5);\n    if (availableWords.length === 0) return [];\n\n    // Get session size from settings\n    const savedSettings = localStorage.getItem('practiceSettings');\n    const settings = savedSettings ? JSON.parse(savedSettings) : {\n      sessionSize: 15\n    };\n    const sessionSize = settings.sessionSize || 15;\n    const weightedWords = [];\n    availableWords.forEach(word => {\n      const weight = Math.max(1, 5 - word.userLevel);\n      for (let i = 0; i < weight; i++) {\n        weightedWords.push(word);\n      }\n    });\n    const shuffled = [...weightedWords].sort(() => Math.random() - 0.5);\n    const limitedSessionSize = Math.min(sessionSize, shuffled.length);\n    return shuffled.slice(0, limitedSessionSize);\n  };\n  useEffect(() => {\n    // Load words using spaced repetition algorithm\n    const loadWords = async () => {\n      if (localWords.length === 0) return;\n      const practiceSet = await loadSpacedRepetitionWords();\n      setPracticeWords(practiceSet);\n\n      // Reset state when words change\n      if (practiceSet.length === 0) {\n        setCurrentWordIndex(0);\n        setShowHebrew(false);\n        setSelectedLevel(null);\n      } else if (currentWordIndex >= practiceSet.length) {\n        // If current index is out of bounds, reset to 0\n        setCurrentWordIndex(0);\n        setShowHebrew(false);\n        setSelectedLevel(null);\n      }\n    };\n    loadWords();\n  }, [localWords]);\n  const currentWord = practiceWords[currentWordIndex];\n\n  // Keyboard shortcuts for fast rating\n  useEffect(() => {\n    const handleKeyPress = event => {\n      if (showResult || isUpdating) return; // Don't handle keys during result screen or while updating\n\n      if (event.code === 'Space') {\n        event.preventDefault();\n        if (speechSupported && currentWord) {\n          speakWord(currentWord.english);\n        }\n      } else if (event.code === 'Escape') {\n        onExit();\n      } else if (event.code >= 'Digit0' && event.code <= 'Digit5') {\n        // Handle number keys 0-5 for fast rating\n        event.preventDefault();\n        const level = parseInt(event.code.replace('Digit', ''));\n        handleFastRating(level);\n      } else if (event.code === 'KeyH') {\n        // H key to toggle Hebrew\n        event.preventDefault();\n        setShowHebrew(!showHebrew);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [showResult, isUpdating, speechSupported, currentWord, onExit, showHebrew]);\n\n  // Manual speech synthesis function\n  const speakWord = word => {\n    if (!speechSupported || !word) return;\n\n    // Stop any current speech\n    window.speechSynthesis.cancel();\n    const utterance = new SpeechSynthesisUtterance(word);\n    utterance.lang = 'en-US';\n    utterance.rate = 0.8;\n    utterance.pitch = 1;\n    utterance.volume = 1;\n    window.speechSynthesis.speak(utterance);\n  };\n  const handleFastRating = async level => {\n    if (!currentWord || isUpdating) {\n      return;\n    }\n    setIsUpdating(true);\n    setSelectedLevel(level);\n    setAnsweredWord(currentWord); // Store the word that was just answered\n    setShowResult(true);\n\n    // Update session stats (consider level 3+ as \"correct\")\n    const isCorrect = level >= 3;\n    setSessionStats(prev => ({\n      correct: prev.correct + (isCorrect ? 1 : 0),\n      total: prev.total + 1\n    }));\n    try {\n      // Get settings for spaced repetition\n      const savedSettings = localStorage.getItem('spacedRepetitionSettings');\n      const settings = savedSettings ? JSON.parse(savedSettings) : {};\n      const response = await axios.post(`/api/words/${currentWord.id}/spaced-progress`, {\n        userLevel: level,\n        settings: settings\n      });\n\n      // Update the word in the parent component\n      onWordUpdated(response.data);\n\n      // For level 5, we don't immediately remove the word from local list\n      // Instead, we update it and let the useEffect handle the filtering\n      setLocalWords(prev => prev.map(word => word.id === currentWord.id ? {\n        ...word,\n        userLevel: level\n      } : word));\n\n      // Show result screen for all levels - wait for user to click to continue\n      setTimeout(() => {\n        setIsUpdating(false);\n      }, 300); // Brief delay to show feedback\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setSelectedLevel(null);\n      setIsUpdating(false);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n  const handleNextWord = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(prev => prev + 1);\n      setShowHebrew(false);\n      setSelectedLevel(null);\n      setShowResult(false);\n      setAnsweredWord(null);\n    } else {\n      // Session completed\n      const accuracy = Math.round(sessionStats.correct / sessionStats.total * 100);\n      alert(`Knowledge check completed!\\nAccuracy: ${accuracy}% (${sessionStats.correct}/${sessionStats.total})`);\n      onExit();\n    }\n  };\n  const getLevelColor = level => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n  if (practiceWords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: onExit,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-words\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No words available for practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"All your words are already mastered (Level 5) or you need to add more words.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onExit,\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentWord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: onExit,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-words\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No words available for practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onExit,\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kahoot-fullscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"kahoot-exit-btn\",\n      onClick: onExit,\n      children: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kahoot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kahoot-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${(currentWordIndex + 1) / practiceWords.length * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [currentWordIndex + 1, \" / \", practiceWords.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [\"\\u2705 \", sessionStats.correct]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [\"\\uD83D\\uDCCA \", sessionStats.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kahoot-content\",\n      children: !showResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kahoot-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"english-word\",\n            children: currentWord.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), showHebrew && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hebrew-reveal\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"hebrew-word\",\n              children: currentWord.hebrew\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kahoot-slider-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"question-text\",\n            children: \"How well do you know this word?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider-with-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-side-actions\",\n              children: [speechSupported && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"kahoot-audio-btn\",\n                onClick: () => speakWord(currentWord.english),\n                title: \"Play pronunciation\",\n                children: \"\\uD83D\\uDD0A   Play Audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"show-hebrew-btn\",\n                onClick: () => setShowHebrew(!showHebrew),\n                disabled: isUpdating,\n                children: showHebrew ? '🙈 Hide Hebrew' : '👁️ Show Hebrew'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fast-rating-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fast-rating-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fast-rating-btn level-0\",\n                  onClick: () => handleFastRating(0),\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-emoji\",\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-label\",\n                    children: \"Don't Know\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-key\",\n                    children: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fast-rating-btn level-1\",\n                  onClick: () => handleFastRating(1),\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-emoji\",\n                    children: \"\\uD83E\\uDD14\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-label\",\n                    children: \"Beginner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-key\",\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fast-rating-btn level-2\",\n                  onClick: () => handleFastRating(2),\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-emoji\",\n                    children: \"\\uD83D\\uDCDA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-label\",\n                    children: \"Learning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-key\",\n                    children: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fast-rating-btn level-3\",\n                  onClick: () => handleFastRating(3),\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-emoji\",\n                    children: \"\\uD83D\\uDC4D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-label\",\n                    children: \"Good\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-key\",\n                    children: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fast-rating-btn level-4\",\n                  onClick: () => handleFastRating(4),\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-emoji\",\n                    children: \"\\u2B50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-label\",\n                    children: \"Great\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-key\",\n                    children: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fast-rating-btn level-5\",\n                  onClick: () => handleFastRating(5),\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-emoji\",\n                    children: \"\\uD83C\\uDFC6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-label\",\n                    children: \"Mastered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating-key\",\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      /* Result screen */\n      _jsxDEV(\"div\", {\n        className: \"kahoot-result\",\n        onClick: handleNextWord,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-icon\",\n          children: selectedLevel >= 3 ? '🎉' : '💪'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedLevel >= 3 ? 'Great job!' : 'Keep practicing!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), answeredWord && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-pair\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"english\",\n              children: answeredWord.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hebrew\",\n              children: answeredWord.hebrew\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"level-result\",\n            children: [\"You rated this as Level \", selectedLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"click-to-continue\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"continue-text\",\n            children: currentWordIndex < practiceWords.length - 1 ? 'Click anywhere to continue →' : 'Click to finish session'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n};\n\n// Enhanced Flash Cards Component\n_s2(KnowledgeCheck, \"eoQyKenkg5oaFxOC7WUp0vyNbn4=\");\n_c2 = KnowledgeCheck;\nconst FlashCards = ({\n  words,\n  onWordUpdated,\n  onExit\n}) => {\n  _s3();\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [sessionStats, setSessionStats] = useState({\n    total: 0,\n    reviewed: 0,\n    improved: 0,\n    declined: 0\n  });\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Load words using the enhanced algorithm\n  useEffect(() => {\n    const loadFlashcardWords = async () => {\n      try {\n        const settings = JSON.parse(localStorage.getItem('practiceSettings')) || {\n          maxFocusWords: 8,\n          focusPeriodDays: 5,\n          reviewIntervalDays: 7,\n          masteredReviewDays: 14\n        };\n        const response = await axios.get('/api/words/spaced-repetition', {\n          params: settings\n        });\n        const {\n          focusWords,\n          reviewWords\n        } = response.data;\n\n        // Combine and shuffle words for flashcard practice\n        const allWords = [...focusWords, ...reviewWords];\n        const shuffled = allWords.sort(() => Math.random() - 0.5);\n        setPracticeWords(shuffled);\n        setSessionStats(prev => ({\n          ...prev,\n          total: shuffled.length\n        }));\n      } catch (error) {\n        console.error('Error loading flashcard words:', error);\n        // Fallback to all words if API fails\n        const allWords = words.sort(() => Math.random() - 0.5);\n        setPracticeWords(allWords);\n        setSessionStats(prev => ({\n          ...prev,\n          total: allWords.length\n        }));\n      }\n    };\n    loadFlashcardWords();\n  }, [words]);\n  const currentWord = practiceWords[currentWordIndex];\n  const handleNext = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentWordIndex > 0) {\n      setCurrentWordIndex(currentWordIndex - 1);\n      setShowAnswer(false);\n    }\n  };\n  const handleProgressUpdate = async newLevel => {\n    if (!currentWord || isUpdating) return;\n    setIsUpdating(true);\n    try {\n      const settings = JSON.parse(localStorage.getItem('practiceSettings')) || {};\n      const response = await axios.post(`/api/words/${currentWord.id}/spaced-progress`, {\n        userLevel: newLevel,\n        settings\n      });\n      onWordUpdated(response.data);\n\n      // Update session stats\n      const oldLevel = currentWord.userLevel;\n      setSessionStats(prev => ({\n        ...prev,\n        reviewed: prev.reviewed + 1,\n        improved: newLevel > oldLevel ? prev.improved + 1 : prev.improved,\n        declined: newLevel < oldLevel ? prev.declined + 1 : prev.declined\n      }));\n\n      // Auto-advance after a brief delay\n      setTimeout(() => {\n        handleNext();\n        setIsUpdating(false);\n      }, 800);\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setIsUpdating(false);\n    }\n  };\n  const getLevelColor = level => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n  const getLevelText = level => {\n    const texts = ['New', 'Beginner', 'Learning', 'Good', 'Great', 'Confident'];\n    return texts[Math.min(level, 5)];\n  };\n  if (practiceWords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcards-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flashcards-exit-btn\",\n        onClick: onExit,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcards-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcards-no-words\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-words-icon\",\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No words available for practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add some words to get started with flashcard practice!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flashcards-btn\",\n            onClick: onExit,\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcards-fullscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"flashcards-exit-btn\",\n      onClick: onExit,\n      children: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcards-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${(currentWordIndex + 1) / practiceWords.length * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: [currentWordIndex + 1, \" / \", practiceWords.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcards-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flashcard-card ${showAnswer ? 'show-answer' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"flashcard-word\",\n            children: currentWord === null || currentWord === void 0 ? void 0 : currentWord.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-level\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-badge\",\n              style: {\n                backgroundColor: getLevelColor((currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0)\n              },\n              children: getLevelText((currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flashcard-answer ${showAnswer ? 'visible' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"hebrew-translation\",\n            children: currentWord === null || currentWord === void 0 ? void 0 : currentWord.hebrew\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty\",\n              children: [\"Difficulty: \", (currentWord === null || currentWord === void 0 ? void 0 : currentWord.difficulty) || 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reviews\",\n              children: [\"Reviews: \", (currentWord === null || currentWord === void 0 ? void 0 : currentWord.reviewCount) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcards-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn prev-btn\",\n          onClick: handlePrevious,\n          disabled: currentWordIndex === 0,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn main-btn ${showAnswer ? 'active' : ''}`,\n          onClick: () => setShowAnswer(!showAnswer),\n          children: showAnswer ? 'Hide Answer' : 'Show Answer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn next-btn\",\n          onClick: handleNext,\n          disabled: currentWordIndex === practiceWords.length - 1,\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flashcards-progress-controls ${showAnswer ? 'visible' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Update Knowledge Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"level-btn decrease\",\n            onClick: () => handleProgressUpdate(Math.max(0, ((currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0) - 1)),\n            disabled: ((currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0) === 0 || isUpdating,\n            children: \"\\uD83D\\uDCC9 Decrease\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-number\",\n              children: [\"Level \", (currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-name\",\n              children: getLevelText((currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"level-btn increase\",\n            onClick: () => handleProgressUpdate(Math.min(5, ((currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0) + 1)),\n            disabled: ((currentWord === null || currentWord === void 0 ? void 0 : currentWord.userLevel) || 0) === 5 || isUpdating,\n            children: \"\\uD83D\\uDCC8 Increase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 607,\n    columnNumber: 5\n  }, this);\n};\n_s3(FlashCards, \"HUjf06Fkjx9ysvDhftuXdTEd0v8=\");\n_c3 = FlashCards;\nexport default Practice;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Practice\");\n$RefreshReg$(_c2, \"KnowledgeCheck\");\n$RefreshReg$(_c3, \"FlashCards\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Practice","words","onWordUpdated","_s","currentMode","setCurrentMode","handleModeSelect","mode","handleExit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","KnowledgeCheck","onExit","FlashCards","_c","_s2","currentWordIndex","setCurrentWordIndex","showHebrew","setShowHebrew","selectedLevel","setSelectedLevel","practiceWords","setPracticeWords","isUpdating","setIsUpdating","localWords","setLocalWords","speechSupported","setSpeechSupported","sessionStats","setSessionStats","correct","total","showResult","setShowResult","answeredWord","setAnsweredWord","window","loadSpacedRepetitionWords","savedSettings","localStorage","getItem","settings","JSON","parse","maxFocusWords","focusPeriodDays","reviewIntervalDays","masteredReviewDays","sessionSize","response","get","params","focusWords","reviewWords","data","allWords","markedWords","map","word","isReviewWord","some","rw","id","shuffled","sort","Math","random","slice","error","console","createFallbackPracticeSet","availableWords","filter","userLevel","length","weightedWords","forEach","weight","max","i","push","limitedSessionSize","min","loadWords","practiceSet","currentWord","handleKeyPress","event","code","preventDefault","speakWord","english","level","parseInt","replace","handleFastRating","addEventListener","removeEventListener","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","lang","rate","pitch","volume","speak","isCorrect","prev","post","setTimeout","alert","handleNextWord","accuracy","round","getLevelColor","colors","style","width","hebrew","title","disabled","_c2","_s3","showAnswer","setShowAnswer","reviewed","improved","declined","loadFlashcardWords","handleNext","handlePrevious","handleProgressUpdate","newLevel","oldLevel","getLevelText","texts","backgroundColor","difficulty","reviewCount","_c3","$RefreshReg$"],"sources":["C:/Users/Magshimim/Documents/wordGame/client/src/components/Practice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Practice.css';\n\nconst Practice = ({ words, onWordUpdated }) => {\n  const [currentMode, setCurrentMode] = useState(null); // null = main menu, 'knowledge', 'flashcards'\n\n  const handleModeSelect = (mode) => {\n    setCurrentMode(mode);\n  };\n\n  const handleExit = () => {\n    setCurrentMode(null);\n  };\n\n  // Main menu\n  if (currentMode === null) {\n    return (\n      <div className=\"practice-main-menu\">\n        <div className=\"practice-menu-container\">\n          <h1>Practice Mode</h1>\n          <div className=\"practice-options\">\n            <button \n              className=\"practice-option knowledge-check\"\n              onClick={() => handleModeSelect('knowledge')}\n            >\n              <div className=\"option-icon\">📊</div>\n              <div className=\"option-content\">\n                <h3>Knowledge Check</h3>\n                <p>Test your knowledge level with interactive quizzes</p>\n              </div>\n            </button>\n            \n            <button \n              className=\"practice-option flashcards\"\n              onClick={() => handleModeSelect('flashcards')}\n            >\n              <div className=\"option-icon\">🃏</div>\n              <div className=\"option-content\">\n                <h3>Flash Cards</h3>\n                <p>Traditional flash card practice mode</p>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Knowledge Check Mode\n  if (currentMode === 'knowledge') {\n    return <KnowledgeCheck words={words} onWordUpdated={onWordUpdated} onExit={handleExit} />;\n  }\n\n  // Flash Cards Mode\n  if (currentMode === 'flashcards') {\n    return <FlashCards words={words} onWordUpdated={onWordUpdated} onExit={handleExit} />;\n  }\n\n  return null;\n};\n\n// Knowledge Check Component with Kahoot-style design and learning algorithm\nconst KnowledgeCheck = ({ words, onWordUpdated, onExit }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showHebrew, setShowHebrew] = useState(false);\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [localWords, setLocalWords] = useState([]);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [sessionStats, setSessionStats] = useState({ correct: 0, total: 0 });\n  const [showResult, setShowResult] = useState(false);\n  const [answeredWord, setAnsweredWord] = useState(null);\n // Default to middle value\n\n  useEffect(() => {\n    // Create a local copy of words to prevent issues\n    setLocalWords([...words]);\n    \n    // Check if speech synthesis is supported\n    if ('speechSynthesis' in window) {\n      setSpeechSupported(true);\n    }\n  }, [words]);\n\n  // Load words using spaced repetition algorithm\n  const loadSpacedRepetitionWords = async () => {\n    try {\n      // Get settings from localStorage\n      const savedSettings = localStorage.getItem('practiceSettings');\n      const settings = savedSettings ? JSON.parse(savedSettings) : {\n        maxFocusWords: 5,\n        focusPeriodDays: 5,\n        reviewIntervalDays: 7,\n        masteredReviewDays: 14,\n        sessionSize: 15  // New setting for session size\n      };\n      \n      const response = await axios.get('/api/words/spaced-repetition', { params: settings });\n      const { focusWords, reviewWords } = response.data;\n      \n      // Combine focus words and review words\n      const allWords = [...focusWords, ...reviewWords];\n      \n      // Mark review words for special handling\n      const markedWords = allWords.map(word => ({\n        ...word,\n        isReviewWord: reviewWords.some(rw => rw.id === word.id)\n      }));\n      \n      // Shuffle for variety\n      const shuffled = [...markedWords].sort(() => Math.random() - 0.5);\n      \n      // Limit session size based on settings\n      const sessionSize = settings.sessionSize || 15;\n      return shuffled.slice(0, sessionSize);\n    } catch (error) {\n      console.error('Error loading spaced repetition words:', error);\n      // Fallback to old algorithm if spaced repetition fails\n      return createFallbackPracticeSet(localWords);\n    }\n  };\n\n  // Fallback algorithm (original smart practice set)\n  const createFallbackPracticeSet = (words) => {\n    const availableWords = words.filter(word => word.userLevel < 5);\n    if (availableWords.length === 0) return [];\n    \n    // Get session size from settings\n    const savedSettings = localStorage.getItem('practiceSettings');\n    const settings = savedSettings ? JSON.parse(savedSettings) : { sessionSize: 15 };\n    const sessionSize = settings.sessionSize || 15;\n    \n    const weightedWords = [];\n    availableWords.forEach(word => {\n      const weight = Math.max(1, 5 - word.userLevel);\n      for (let i = 0; i < weight; i++) {\n        weightedWords.push(word);\n      }\n    });\n    \n    const shuffled = [...weightedWords].sort(() => Math.random() - 0.5);\n    const limitedSessionSize = Math.min(sessionSize, shuffled.length);\n    return shuffled.slice(0, limitedSessionSize);\n  };\n\n  useEffect(() => {\n    // Load words using spaced repetition algorithm\n    const loadWords = async () => {\n      if (localWords.length === 0) return;\n      \n      const practiceSet = await loadSpacedRepetitionWords();\n      setPracticeWords(practiceSet);\n      \n      // Reset state when words change\n      if (practiceSet.length === 0) {\n        setCurrentWordIndex(0);\n        setShowHebrew(false);\n        setSelectedLevel(null);\n      } else if (currentWordIndex >= practiceSet.length) {\n        // If current index is out of bounds, reset to 0\n        setCurrentWordIndex(0);\n        setShowHebrew(false);\n        setSelectedLevel(null);\n      }\n    };\n    \n    loadWords();\n  }, [localWords]);\n\n  const currentWord = practiceWords[currentWordIndex];\n\n  // Keyboard shortcuts for fast rating\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (showResult || isUpdating) return; // Don't handle keys during result screen or while updating\n      \n      if (event.code === 'Space') {\n        event.preventDefault();\n        if (speechSupported && currentWord) {\n          speakWord(currentWord.english);\n        }\n      } else if (event.code === 'Escape') {\n        onExit();\n      } else if (event.code >= 'Digit0' && event.code <= 'Digit5') {\n        // Handle number keys 0-5 for fast rating\n        event.preventDefault();\n        const level = parseInt(event.code.replace('Digit', ''));\n        handleFastRating(level);\n      } else if (event.code === 'KeyH') {\n        // H key to toggle Hebrew\n        event.preventDefault();\n        setShowHebrew(!showHebrew);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [showResult, isUpdating, speechSupported, currentWord, onExit, showHebrew]);\n\n  // Manual speech synthesis function\n  const speakWord = (word) => {\n    if (!speechSupported || !word) return;\n    \n    // Stop any current speech\n    window.speechSynthesis.cancel();\n    \n    const utterance = new SpeechSynthesisUtterance(word);\n    utterance.lang = 'en-US';\n    utterance.rate = 0.8;\n    utterance.pitch = 1;\n    utterance.volume = 1;\n    \n    window.speechSynthesis.speak(utterance);\n  };\n\n  const handleFastRating = async (level) => {\n    if (!currentWord || isUpdating) {\n      return;\n    }\n    \n    setIsUpdating(true);\n    setSelectedLevel(level);\n    setAnsweredWord(currentWord); // Store the word that was just answered\n    setShowResult(true);\n    \n    // Update session stats (consider level 3+ as \"correct\")\n    const isCorrect = level >= 3;\n    setSessionStats(prev => ({\n      correct: prev.correct + (isCorrect ? 1 : 0),\n      total: prev.total + 1\n    }));\n    \n    try {\n      // Get settings for spaced repetition\n      const savedSettings = localStorage.getItem('spacedRepetitionSettings');\n      const settings = savedSettings ? JSON.parse(savedSettings) : {};\n      \n      const response = await axios.post(`/api/words/${currentWord.id}/spaced-progress`, {\n        userLevel: level,\n        settings: settings\n      });\n      \n      // Update the word in the parent component\n      onWordUpdated(response.data);\n      \n      // For level 5, we don't immediately remove the word from local list\n      // Instead, we update it and let the useEffect handle the filtering\n      setLocalWords(prev => \n        prev.map(word => \n          word.id === currentWord.id \n            ? { ...word, userLevel: level }\n            : word\n        )\n      );\n      \n      // Show result screen for all levels - wait for user to click to continue\n      setTimeout(() => {\n        setIsUpdating(false);\n      }, 300); // Brief delay to show feedback\n      \n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setSelectedLevel(null);\n      setIsUpdating(false);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n\n  const handleNextWord = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(prev => prev + 1);\n      setShowHebrew(false);\n      setSelectedLevel(null);\n      setShowResult(false);\n      setAnsweredWord(null);\n    } else {\n      // Session completed\n      const accuracy = Math.round((sessionStats.correct / sessionStats.total) * 100);\n      alert(`Knowledge check completed!\\nAccuracy: ${accuracy}% (${sessionStats.correct}/${sessionStats.total})`);\n      onExit();\n    }\n  };\n\n\n\n  const getLevelColor = (level) => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n\n  if (practiceWords.length === 0) {\n    return (\n      <div className=\"practice-fullscreen\">\n        <button className=\"exit-button\" onClick={onExit}>✕</button>\n        <div className=\"practice-content\">\n          <div className=\"no-words\">\n            <h2>No words available for practice</h2>\n            <p>All your words are already mastered (Level 5) or you need to add more words.</p>\n            <button onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentWord) {\n    return (\n      <div className=\"practice-fullscreen\">\n        <button className=\"exit-button\" onClick={onExit}>✕</button>\n        <div className=\"practice-content\">\n          <div className=\"no-words\">\n            <h2>No words available for practice</h2>\n            <button onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"kahoot-fullscreen\">\n      <button className=\"kahoot-exit-btn\" onClick={onExit}>✕</button>\n      \n      {/* Header with progress and stats */}\n      <div className=\"kahoot-header\">\n        <div className=\"kahoot-progress\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${((currentWordIndex + 1) / practiceWords.length) * 100}%` }}\n            ></div>\n          </div>\n          <span className=\"progress-text\">\n            {currentWordIndex + 1} / {practiceWords.length}\n          </span>\n        </div>\n        <div className=\"session-stats\">\n          <span className=\"stat\">✅ {sessionStats.correct}</span>\n          <span className=\"stat\">📊 {sessionStats.total}</span>\n        </div>\n      </div>\n\n      {/* Main content area */}\n      <div className=\"kahoot-content\">\n        {!showResult ? (\n          <>\n            {/* Question area */}\n            <div className=\"kahoot-question\">\n              <h1 className=\"english-word\">{currentWord.english}</h1>\n              \n              {showHebrew && (\n                <div className=\"hebrew-reveal\">\n                  <h2 className=\"hebrew-word\">{currentWord.hebrew}</h2>\n                </div>\n              )}\n            </div>\n\n            {/* Knowledge Rating Slider with Side Actions */}\n            <div className=\"kahoot-slider-section\">\n              <h3 className=\"question-text\">How well do you know this word?</h3>\n              \n              <div className=\"slider-with-actions\">\n                {/* Left side actions */}\n                <div className=\"left-side-actions\">\n                  {speechSupported && (\n                    <button \n                      className=\"kahoot-audio-btn\"\n                      onClick={() => speakWord(currentWord.english)}\n                      title=\"Play pronunciation\"\n                    >\n                      🔊   Play Audio\n                    </button>\n                  )}\n                  <button \n                    className=\"show-hebrew-btn\"\n                    onClick={() => setShowHebrew(!showHebrew)}\n                    disabled={isUpdating}\n                  >\n                    {showHebrew ? '🙈 Hide Hebrew' : '👁️ Show Hebrew'}\n                  </button>\n                </div>\n\n                {/* Fast Rating Buttons */}\n                <div className=\"fast-rating-container\">\n                  <div className=\"fast-rating-grid\">\n                    <button\n                      className=\"fast-rating-btn level-0\"\n                      onClick={() => handleFastRating(0)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">❌</span>\n                      <span className=\"rating-label\">Don't Know</span>\n                      <span className=\"rating-key\">0</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-1\"\n                      onClick={() => handleFastRating(1)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">🤔</span>\n                      <span className=\"rating-label\">Beginner</span>\n                      <span className=\"rating-key\">1</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-2\"\n                      onClick={() => handleFastRating(2)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">📚</span>\n                      <span className=\"rating-label\">Learning</span>\n                      <span className=\"rating-key\">2</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-3\"\n                      onClick={() => handleFastRating(3)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">👍</span>\n                      <span className=\"rating-label\">Good</span>\n                      <span className=\"rating-key\">3</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-4\"\n                      onClick={() => handleFastRating(4)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">⭐</span>\n                      <span className=\"rating-label\">Great</span>\n                      <span className=\"rating-key\">4</span>\n                    </button>\n                    \n                    <button\n                      className=\"fast-rating-btn level-5\"\n                      onClick={() => handleFastRating(5)}\n                      disabled={isUpdating}\n                    >\n                      <span className=\"rating-emoji\">🏆</span>\n                      <span className=\"rating-label\">Mastered</span>\n                      <span className=\"rating-key\">5</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          /* Result screen */\n          <div className=\"kahoot-result\" onClick={handleNextWord}>\n            <div className=\"result-icon\">\n              {selectedLevel >= 3 ? '🎉' : '💪'}\n            </div>\n            <h2>\n              {selectedLevel >= 3 ? 'Great job!' : 'Keep practicing!'}\n            </h2>\n            {answeredWord && (\n              <div className=\"result-details\">\n                <div className=\"word-pair\">\n                  <span className=\"english\">{answeredWord.english}</span>\n                  <span className=\"hebrew\">{answeredWord.hebrew}</span>\n                </div>\n                <div className=\"level-result\">\n                  You rated this as Level {selectedLevel}\n                </div>\n              </div>\n            )}\n            \n            <div className=\"click-to-continue\">\n              <span className=\"continue-text\">\n                {currentWordIndex < practiceWords.length - 1 ? 'Click anywhere to continue →' : 'Click to finish session'}\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Flash Cards Component\nconst FlashCards = ({ words, onWordUpdated, onExit }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [sessionStats, setSessionStats] = useState({\n    total: 0,\n    reviewed: 0,\n    improved: 0,\n    declined: 0\n  });\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Load words using the enhanced algorithm\n  useEffect(() => {\n    const loadFlashcardWords = async () => {\n      try {\n        const settings = JSON.parse(localStorage.getItem('practiceSettings')) || {\n          maxFocusWords: 8,\n          focusPeriodDays: 5,\n          reviewIntervalDays: 7,\n          masteredReviewDays: 14\n        };\n        \n        const response = await axios.get('/api/words/spaced-repetition', { params: settings });\n        const { focusWords, reviewWords } = response.data;\n        \n        // Combine and shuffle words for flashcard practice\n        const allWords = [...focusWords, ...reviewWords];\n        const shuffled = allWords.sort(() => Math.random() - 0.5);\n        \n        setPracticeWords(shuffled);\n        setSessionStats(prev => ({ ...prev, total: shuffled.length }));\n      } catch (error) {\n        console.error('Error loading flashcard words:', error);\n        // Fallback to all words if API fails\n        const allWords = words.sort(() => Math.random() - 0.5);\n        setPracticeWords(allWords);\n        setSessionStats(prev => ({ ...prev, total: allWords.length }));\n      }\n    };\n\n    loadFlashcardWords();\n  }, [words]);\n\n  const currentWord = practiceWords[currentWordIndex];\n\n  const handleNext = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentWordIndex > 0) {\n      setCurrentWordIndex(currentWordIndex - 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handleProgressUpdate = async (newLevel) => {\n    if (!currentWord || isUpdating) return;\n    \n    setIsUpdating(true);\n    try {\n      const settings = JSON.parse(localStorage.getItem('practiceSettings')) || {};\n      const response = await axios.post(`/api/words/${currentWord.id}/spaced-progress`, {\n        userLevel: newLevel,\n        settings\n      });\n      \n      onWordUpdated(response.data);\n      \n      // Update session stats\n      const oldLevel = currentWord.userLevel;\n      setSessionStats(prev => ({\n        ...prev,\n        reviewed: prev.reviewed + 1,\n        improved: newLevel > oldLevel ? prev.improved + 1 : prev.improved,\n        declined: newLevel < oldLevel ? prev.declined + 1 : prev.declined\n      }));\n      \n      // Auto-advance after a brief delay\n      setTimeout(() => {\n        handleNext();\n        setIsUpdating(false);\n      }, 800);\n      \n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setIsUpdating(false);\n    }\n  };\n\n  const getLevelColor = (level) => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n\n  const getLevelText = (level) => {\n    const texts = ['New', 'Beginner', 'Learning', 'Good', 'Great', 'Confident'];\n    return texts[Math.min(level, 5)];\n  };\n\n  if (practiceWords.length === 0) {\n    return (\n      <div className=\"flashcards-fullscreen\">\n        <button className=\"flashcards-exit-btn\" onClick={onExit}>✕</button>\n        <div className=\"flashcards-content\">\n          <div className=\"flashcards-no-words\">\n            <div className=\"no-words-icon\">📚</div>\n            <h2>No words available for practice</h2>\n            <p>Add some words to get started with flashcard practice!</p>\n            <button className=\"flashcards-btn\" onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flashcards-fullscreen\">\n      <button className=\"flashcards-exit-btn\" onClick={onExit}>✕</button>\n      \n      {/* Simple Progress Bar */}\n      <div className=\"flashcards-progress\">\n        <div className=\"progress-bar\">\n          <div \n            className=\"progress-fill\" \n            style={{width: `${((currentWordIndex + 1) / practiceWords.length) * 100}%`}}\n          ></div>\n        </div>\n        <span className=\"progress-text\">{currentWordIndex + 1} / {practiceWords.length}</span>\n      </div>\n\n      <div className=\"flashcards-content\">\n        {/* Flashcard */}\n        <div className={`flashcard-card ${showAnswer ? 'show-answer' : ''}`}>\n          <div className=\"flashcard-question\">\n            <h2 className=\"flashcard-word\">{currentWord?.english}</h2>\n            <div className=\"word-level\">\n              <span className=\"level-badge\" style={{backgroundColor: getLevelColor(currentWord?.userLevel || 0)}}>\n                {getLevelText(currentWord?.userLevel || 0)}\n              </span>\n            </div>\n          </div>\n          \n          <div className={`flashcard-answer ${showAnswer ? 'visible' : ''}`}>\n            <h3 className=\"hebrew-translation\">{currentWord?.hebrew}</h3>\n            <div className=\"word-info\">\n              <span className=\"difficulty\">Difficulty: {currentWord?.difficulty || 1}</span>\n              <span className=\"reviews\">Reviews: {currentWord?.reviewCount || 0}</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Navigation Controls */}\n        <div className=\"flashcards-controls\">\n          <button \n            className=\"control-btn prev-btn\"\n            onClick={handlePrevious} \n            disabled={currentWordIndex === 0}\n          >\n            ←\n          </button>\n          \n          <button \n            className={`control-btn main-btn ${showAnswer ? 'active' : ''}`}\n            onClick={() => setShowAnswer(!showAnswer)}\n          >\n            {showAnswer ? 'Hide Answer' : 'Show Answer'}\n          </button>\n          \n          <button \n            className=\"control-btn next-btn\"\n            onClick={handleNext} \n            disabled={currentWordIndex === practiceWords.length - 1}\n          >\n            →\n          </button>\n        </div>\n\n        {/* Progress Controls - Always present but hidden when answer is not shown */}\n        <div className={`flashcards-progress-controls ${showAnswer ? 'visible' : ''}`}>\n          <div className=\"progress-header\">\n            <h3>Update Knowledge Level</h3>\n          </div>\n          \n          <div className=\"level-controls\">\n            <button \n              className=\"level-btn decrease\"\n              onClick={() => handleProgressUpdate(Math.max(0, (currentWord?.userLevel || 0) - 1))}\n              disabled={(currentWord?.userLevel || 0) === 0 || isUpdating}\n            >\n              📉 Decrease\n            </button>\n            \n            <div className=\"current-level\">\n              <span className=\"level-number\">Level {(currentWord?.userLevel || 0)}</span>\n              <span className=\"level-name\">{getLevelText(currentWord?.userLevel || 0)}</span>\n            </div>\n            \n            <button \n              className=\"level-btn increase\"\n              onClick={() => handleProgressUpdate(Math.min(5, (currentWord?.userLevel || 0) + 1))}\n              disabled={(currentWord?.userLevel || 0) === 5 || isUpdating}\n            >\n              📈 Increase\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Practice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}