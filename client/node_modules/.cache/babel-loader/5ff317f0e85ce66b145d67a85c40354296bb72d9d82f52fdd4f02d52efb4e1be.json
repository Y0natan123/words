{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./WordList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WordList=_ref=>{let{words,onWordUpdated,onWordDeleted}=_ref;const[filterText,setFilterText]=useState('');const[filterLevel,setFilterLevel]=useState('');const updateProgress=async(wordId,newLevel)=>{try{const response=await axios.post(`/api/words/${wordId}/progress`,{userLevel:newLevel});onWordUpdated(response.data);}catch(error){console.error('Error updating progress:',error);}};const getLevelColor=level=>{const colors=['#dc3545','#fd7e14','#ffc107','#20c997','#198754','#0d6efd'];return colors[Math.min(level,5)];};const getDifficultyColor=difficulty=>{const colors=['','#28a745','#ffc107','#fd7e14','#dc3545','#6f42c1'];return colors[difficulty];};const speakWord=word=>{if('speechSynthesis'in window){const utterance=new SpeechSynthesisUtterance(word);utterance.lang='en-US';utterance.rate=0.8;window.speechSynthesis.speak(utterance);}};// Filter words based on search text and level\nconst filteredWords=words.filter(word=>{const matchesText=word.english.toLowerCase().includes(filterText.toLowerCase())||word.hebrew.includes(filterText);const matchesLevel=filterLevel===''||word.userLevel.toString()===filterLevel;return matchesText&&matchesLevel;});return/*#__PURE__*/_jsxs(\"div\",{className:\"word-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"word-list-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDCDA My Words\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"word-count\",children:[filteredWords.length,\" of \",words.length,\" words\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"search-icon\",children:\"\\uD83D\\uDD0D\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search words...\",value:filterText,onChange:e=>setFilterText(e.target.value),className:\"search-input\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"level-filter\",children:/*#__PURE__*/_jsxs(\"select\",{value:filterLevel,onChange:e=>setFilterLevel(e.target.value),className:\"level-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Levels\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"\\uD83D\\uDD34 New (0)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"\\uD83D\\uDFE0 Beginner (1)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"\\uD83D\\uDFE1 Basic (2)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3\",children:\"\\uD83D\\uDFE2 Good (3)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"4\",children:\"\\uD83D\\uDD35 Advanced (4)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"5\",children:\"\\uD83D\\uDFE3 Mastered (5)\"})]})})]})]}),filteredWords.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"No words found\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Try adjusting your search or filter criteria\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"words-container\",children:filteredWords.map(word=>/*#__PURE__*/_jsxs(\"div\",{className:\"word-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${word.userLevel/5*100}%`,backgroundColor:getLevelColor(word.userLevel)}})}),/*#__PURE__*/_jsx(\"div\",{className:\"word-main\",children:/*#__PURE__*/_jsx(\"div\",{className:\"word-pair\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"word-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"word-text\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"english-word\",children:word.english}),/*#__PURE__*/_jsx(\"p\",{className:\"hebrew-word\",children:word.hebrew})]}),/*#__PURE__*/_jsx(\"button\",{className:\"listen-btn\",onClick:()=>speakWord(word.english),title:\"Listen to pronunciation\",children:\"\\uD83D\\uDD0A\"})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"word-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Level\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value level-badge\",style:{color:getLevelColor(word.userLevel)},children:[word.userLevel,\"/5\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Difficulty\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value difficulty-badge\",style:{color:getDifficultyColor(word.difficulty)},children:[word.difficulty,\"/5\"]})]})]})]},word.id))})]});};export default WordList;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","WordList","_ref","words","onWordUpdated","onWordDeleted","filterText","setFilterText","filterLevel","setFilterLevel","updateProgress","wordId","newLevel","response","post","userLevel","data","error","console","getLevelColor","level","colors","Math","min","getDifficultyColor","difficulty","speakWord","word","window","utterance","SpeechSynthesisUtterance","lang","rate","speechSynthesis","speak","filteredWords","filter","matchesText","english","toLowerCase","includes","hebrew","matchesLevel","toString","className","children","length","type","placeholder","value","onChange","e","target","map","style","width","backgroundColor","onClick","title","color","id"],"sources":["C:/Users/Magshimim/Documents/wordGame/Y0natan123.github.io/client/src/components/WordList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './WordList.css';\n\nconst WordList = ({ words, onWordUpdated, onWordDeleted }) => {\n  const [filterText, setFilterText] = useState('');\n  const [filterLevel, setFilterLevel] = useState('');\n\n  const updateProgress = async (wordId, newLevel) => {\n    try {\n      const response = await axios.post(`/api/words/${wordId}/progress`, {\n        userLevel: newLevel\n      });\n      onWordUpdated(response.data);\n    } catch (error) {\n      console.error('Error updating progress:', error);\n    }\n  };\n\n  const getLevelColor = (level) => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    const colors = ['', '#28a745', '#ffc107', '#fd7e14', '#dc3545', '#6f42c1'];\n    return colors[difficulty];\n  };\n\n\n\n  const speakWord = (word) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(word);\n      utterance.lang = 'en-US';\n      utterance.rate = 0.8;\n      window.speechSynthesis.speak(utterance);\n    }\n  };\n\n  // Filter words based on search text and level\n  const filteredWords = words.filter(word => {\n    const matchesText = word.english.toLowerCase().includes(filterText.toLowerCase()) ||\n                       word.hebrew.includes(filterText);\n    const matchesLevel = filterLevel === '' || word.userLevel.toString() === filterLevel;\n    return matchesText && matchesLevel;\n  });\n\n  return (\n    <div className=\"word-list\">\n      {/* Header Section */}\n      <div className=\"word-list-header\">\n        <div className=\"header-title\">\n          <h1>📚 My Words</h1>\n          <p className=\"word-count\">{filteredWords.length} of {words.length} words</p>\n        </div>\n        \n        {/* Search and Filter */}\n        <div className=\"search-section\">\n          <div className=\"search-box\">\n            <span className=\"search-icon\">🔍</span>\n            <input\n              type=\"text\"\n              placeholder=\"Search words...\"\n              value={filterText}\n              onChange={(e) => setFilterText(e.target.value)}\n              className=\"search-input\"\n            />\n          </div>\n          \n          <div className=\"level-filter\">\n            <select\n              value={filterLevel}\n              onChange={(e) => setFilterLevel(e.target.value)}\n              className=\"level-select\"\n            >\n              <option value=\"\">All Levels</option>\n              <option value=\"0\">🔴 New (0)</option>\n              <option value=\"1\">🟠 Beginner (1)</option>\n              <option value=\"2\">🟡 Basic (2)</option>\n              <option value=\"3\">🟢 Good (3)</option>\n              <option value=\"4\">🔵 Advanced (4)</option>\n              <option value=\"5\">🟣 Mastered (5)</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Content Section */}\n      {filteredWords.length === 0 ? (\n        <div className=\"empty-state\">\n          <div className=\"empty-icon\">📝</div>\n          <h3>No words found</h3>\n          <p>Try adjusting your search or filter criteria</p>\n        </div>\n      ) : (\n        <div className=\"words-container\">\n          {filteredWords.map(word => (\n            <div key={word.id} className=\"word-card\">\n              {/* Progress Indicator */}\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\" \n                  style={{\n                    width: `${(word.userLevel / 5) * 100}%`,\n                    backgroundColor: getLevelColor(word.userLevel)\n                  }}\n                ></div>\n              </div>\n              \n              {/* Word Content */}\n              <div className=\"word-main\">\n                <div className=\"word-pair\">\n                  <div className=\"word-header\">\n                    <div className=\"word-text\">\n                      <h3 className=\"english-word\">{word.english}</h3>\n                      <p className=\"hebrew-word\">{word.hebrew}</p>\n                    </div>\n                    <button \n                      className=\"listen-btn\"\n                      onClick={() => speakWord(word.english)}\n                      title=\"Listen to pronunciation\"\n                    >\n                      🔊\n                    </button>\n                  </div>\n                </div>\n                \n\n                \n\n              </div>\n              \n              {/* Word Stats */}\n              <div className=\"word-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Level</span>\n                  <span className=\"stat-value level-badge\" style={{color: getLevelColor(word.userLevel)}}>\n                    {word.userLevel}/5\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Difficulty</span>\n                  <span className=\"stat-value difficulty-badge\" style={{color: getDifficultyColor(word.difficulty)}}>\n                    {word.difficulty}/5\n                  </span>\n                </div>\n              </div>\n              \n\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WordList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}