{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Link,useLocation}from'react-router-dom';import axios from'axios';import WordList from'./components/WordList';import Practice from'./components/Practice';import Statistics from'./components/Statistics';import AdminDashboard from'./components/AdminDashboard';import Settings from'./components/Settings';import Auth from'./components/Auth';import UserPreferences from'./components/UserPreferences';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);const[words,setWords]=useState([]);const[languagePairs,setLanguagePairs]=useState([]);const[selectedLanguagePair,setSelectedLanguagePair]=useState(null);const[loading,setLoading]=useState(true);const[stats,setStats]=useState(null);const[isMobileMenuOpen,setIsMobileMenuOpen]=useState(false);useEffect(()=>{checkAuthStatus();},[]);useEffect(()=>{if(user){fetchLanguagePairs();initializeUserData();}},[user]);useEffect(()=>{if(selectedLanguagePair&&user){fetchWords();fetchStats();}},[selectedLanguagePair,user]);const checkAuthStatus=async()=>{const token=localStorage.getItem('token');const userData=localStorage.getItem('user');if(token&&userData){try{// Set axios default header\naxios.defaults.headers.common['Authorization']=`Bearer ${token}`;// Verify token is still valid\nconst response=await axios.get('/api/auth/me');setUser(response.data.user);}catch(error){console.error('Token verification failed:',error);handleLogout();}}setLoading(false);};const fetchLanguagePairs=async()=>{try{const response=await axios.get('/api/language-pairs');setLanguagePairs(response.data);// Set default language pair from user preferences or first available\nconst userPrefs=(user===null||user===void 0?void 0:user.preferences)||{};const defaultPairId=userPrefs.defaultLanguagePair;if(defaultPairId&&response.data.find(pair=>pair.id===defaultPairId)){setSelectedLanguagePair(defaultPairId);}else if(response.data.length>0){setSelectedLanguagePair(response.data[0].id);}}catch(error){console.error('Error fetching language pairs:',error);}};const initializeUserData=()=>{var _userPrefs$selectedLa;const userPrefs=(user===null||user===void 0?void 0:user.preferences)||{};// If user has selected language pairs in preferences, use those\nif(((_userPrefs$selectedLa=userPrefs.selectedLanguagePairs)===null||_userPrefs$selectedLa===void 0?void 0:_userPrefs$selectedLa.length)>0){const defaultPair=userPrefs.defaultLanguagePair||userPrefs.selectedLanguagePairs[0];setSelectedLanguagePair(defaultPair);}};const fetchWords=async()=>{if(!selectedLanguagePair)return;try{const response=await axios.get(`/api/language-pairs/${selectedLanguagePair}/words`);setWords(response.data);}catch(error){console.error('Error fetching words:',error);}};const fetchStats=async()=>{if(!selectedLanguagePair)return;try{const response=await axios.get(`/api/language-pairs/${selectedLanguagePair}/stats`);setStats(response.data);}catch(error){console.error('Error fetching stats:',error);}};const handleLogin=userData=>{setUser(userData);};const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');delete axios.defaults.headers.common['Authorization'];setUser(null);setWords([]);setLanguagePairs([]);setSelectedLanguagePair(null);setStats(null);};const handlePreferencesUpdate=newPreferences=>{const updatedUser={...user,preferences:newPreferences};setUser(updatedUser);localStorage.setItem('user',JSON.stringify(updatedUser));// Update selected language pair if it changed\nif(newPreferences.defaultLanguagePair&&newPreferences.defaultLanguagePair!==selectedLanguagePair){setSelectedLanguagePair(newPreferences.defaultLanguagePair);}};const handleWordAdded=newWord=>{setWords([...words,newWord]);fetchStats();};const handleWordUpdated=updatedWord=>{setWords(words.map(word=>word.id===updatedWord.id?updatedWord:word));fetchStats();};const handleWordDeleted=wordId=>{setWords(words.filter(word=>word.id!==wordId));fetchStats();};const handleLanguagePairChange=pairId=>{setSelectedLanguagePair(pairId);};const toggleMobileMenu=()=>{setIsMobileMenuOpen(!isMobileMenuOpen);};const closeMobileMenu=()=>{setIsMobileMenuOpen(false);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"})});}// Show auth screen if not logged in\nif(!user){return/*#__PURE__*/_jsx(Auth,{onLogin:handleLogin});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"nav\",{className:\"navbar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"nav-title\",children:\"Word Memory App\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mobile-menu-btn\",onClick:toggleMobileMenu,\"aria-label\":\"Toggle navigation menu\",children:/*#__PURE__*/_jsxs(\"span\",{className:`hamburger ${isMobileMenuOpen?'open':''}`,children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})}),languagePairs.length>1&&/*#__PURE__*/_jsx(\"div\",{className:\"language-pair-selector\",children:/*#__PURE__*/_jsx(\"select\",{value:selectedLanguagePair||'',onChange:e=>handleLanguagePairChange(e.target.value),className:\"pair-select\",children:languagePairs.map(pair=>/*#__PURE__*/_jsx(\"option\",{value:pair.id,children:pair.name},pair.id))})}),/*#__PURE__*/_jsxs(\"div\",{className:`nav-links ${isMobileMenuOpen?'mobile-open':''}`,children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-link\",onClick:closeMobileMenu,children:\"Words\"}),/*#__PURE__*/_jsx(Link,{to:\"/practice\",className:\"nav-link\",onClick:closeMobileMenu,children:\"Practice\"}),/*#__PURE__*/_jsx(Link,{to:\"/stats\",className:\"nav-link\",onClick:closeMobileMenu,children:\"Statistics\"}),/*#__PURE__*/_jsx(Link,{to:\"/preferences\",className:\"nav-link\",onClick:closeMobileMenu,children:\"Languages\"}),/*#__PURE__*/_jsx(Link,{to:\"/settings\",className:\"nav-link\",onClick:closeMobileMenu,children:\"Settings\"}),user.isAdmin&&/*#__PURE__*/_jsx(Link,{to:\"/admin\",className:\"nav-link\",onClick:closeMobileMenu,children:\"Admin\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"nav-link logout-btn\",children:\"Logout\"})]}),isMobileMenuOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"mobile-menu-overlay\",onClick:closeMobileMenu})]})}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(WordList,{words:words,onWordUpdated:handleWordUpdated,onWordDeleted:handleWordDeleted})}),/*#__PURE__*/_jsx(Route,{path:\"/practice\",element:selectedLanguagePair?/*#__PURE__*/_jsx(Practice,{words:words,languagePair:languagePairs.find(pair=>pair.id===selectedLanguagePair),onWordUpdated:handleWordUpdated}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-language-pair\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Please select a language pair in your preferences to start practicing.\"}),/*#__PURE__*/_jsx(Link,{to:\"/preferences\",className:\"btn btn-primary\",children:\"Go to Preferences\"})]})}),/*#__PURE__*/_jsx(Route,{path:\"/stats\",element:/*#__PURE__*/_jsx(Statistics,{stats:stats,words:words,languagePair:languagePairs.find(pair=>pair.id===selectedLanguagePair)})}),/*#__PURE__*/_jsx(Route,{path:\"/preferences\",element:/*#__PURE__*/_jsx(UserPreferences,{user:user,onPreferencesUpdate:handlePreferencesUpdate})}),user.isAdmin&&/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(AdminDashboard,{user:user,languagePairs:languagePairs})}),/*#__PURE__*/_jsx(Route,{path:\"/settings\",element:/*#__PURE__*/_jsx(Settings,{user:user})})]})})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","useLocation","axios","WordList","Practice","Statistics","AdminDashboard","Settings","Auth","UserPreferences","jsx","_jsx","jsxs","_jsxs","App","user","setUser","words","setWords","languagePairs","setLanguagePairs","selectedLanguagePair","setSelectedLanguagePair","loading","setLoading","stats","setStats","isMobileMenuOpen","setIsMobileMenuOpen","checkAuthStatus","fetchLanguagePairs","initializeUserData","fetchWords","fetchStats","token","localStorage","getItem","userData","defaults","headers","common","response","get","data","error","console","handleLogout","userPrefs","preferences","defaultPairId","defaultLanguagePair","find","pair","id","length","_userPrefs$selectedLa","selectedLanguagePairs","defaultPair","handleLogin","removeItem","handlePreferencesUpdate","newPreferences","updatedUser","setItem","JSON","stringify","handleWordAdded","newWord","handleWordUpdated","updatedWord","map","word","handleWordDeleted","wordId","filter","handleLanguagePairChange","pairId","toggleMobileMenu","closeMobileMenu","className","children","onLogin","onClick","value","onChange","e","target","name","to","isAdmin","path","element","onWordUpdated","onWordDeleted","languagePair","onPreferencesUpdate"],"sources":["C:/Users/Magshimim/Documents/wordGame/Y0natan123.github.io/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport WordList from './components/WordList';\r\nimport Practice from './components/Practice';\r\nimport Statistics from './components/Statistics';\r\nimport AdminDashboard from './components/AdminDashboard';\r\nimport Settings from './components/Settings';\r\nimport Auth from './components/Auth';\r\nimport UserPreferences from './components/UserPreferences';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [words, setWords] = useState([]);\r\n  const [languagePairs, setLanguagePairs] = useState([]);\r\n  const [selectedLanguagePair, setSelectedLanguagePair] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState(null);\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchLanguagePairs();\r\n      initializeUserData();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguagePair && user) {\r\n      fetchWords();\r\n      fetchStats();\r\n    }\r\n  }, [selectedLanguagePair, user]);\r\n\r\n  const checkAuthStatus = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        // Set axios default header\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        // Verify token is still valid\r\n        const response = await axios.get('/api/auth/me');\r\n        setUser(response.data.user);\r\n      } catch (error) {\r\n        console.error('Token verification failed:', error);\r\n        handleLogout();\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchLanguagePairs = async () => {\r\n    try {\r\n      const response = await axios.get('/api/language-pairs');\r\n      setLanguagePairs(response.data);\r\n      \r\n      // Set default language pair from user preferences or first available\r\n      const userPrefs = user?.preferences || {};\r\n      const defaultPairId = userPrefs.defaultLanguagePair;\r\n      \r\n      if (defaultPairId && response.data.find(pair => pair.id === defaultPairId)) {\r\n        setSelectedLanguagePair(defaultPairId);\r\n      } else if (response.data.length > 0) {\r\n        setSelectedLanguagePair(response.data[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching language pairs:', error);\r\n    }\r\n  };\r\n\r\n  const initializeUserData = () => {\r\n    const userPrefs = user?.preferences || {};\r\n    \r\n    // If user has selected language pairs in preferences, use those\r\n    if (userPrefs.selectedLanguagePairs?.length > 0) {\r\n      const defaultPair = userPrefs.defaultLanguagePair || userPrefs.selectedLanguagePairs[0];\r\n      setSelectedLanguagePair(defaultPair);\r\n    }\r\n  };\r\n\r\n  const fetchWords = async () => {\r\n    if (!selectedLanguagePair) return;\r\n    \r\n    try {\r\n      const response = await axios.get(`/api/language-pairs/${selectedLanguagePair}/words`);\r\n      setWords(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching words:', error);\r\n    }\r\n  };\r\n\r\n  const fetchStats = async () => {\r\n    if (!selectedLanguagePair) return;\r\n    \r\n    try {\r\n      const response = await axios.get(`/api/language-pairs/${selectedLanguagePair}/stats`);\r\n      setStats(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching stats:', error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = (userData) => {\r\n    setUser(userData);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    setWords([]);\r\n    setLanguagePairs([]);\r\n    setSelectedLanguagePair(null);\r\n    setStats(null);\r\n  };\r\n\r\n  const handlePreferencesUpdate = (newPreferences) => {\r\n    const updatedUser = { ...user, preferences: newPreferences };\r\n    setUser(updatedUser);\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    \r\n    // Update selected language pair if it changed\r\n    if (newPreferences.defaultLanguagePair && \r\n        newPreferences.defaultLanguagePair !== selectedLanguagePair) {\r\n      setSelectedLanguagePair(newPreferences.defaultLanguagePair);\r\n    }\r\n  };\r\n\r\n  const handleWordAdded = (newWord) => {\r\n    setWords([...words, newWord]);\r\n    fetchStats();\r\n  };\r\n\r\n  const handleWordUpdated = (updatedWord) => {\r\n    setWords(words.map(word => word.id === updatedWord.id ? updatedWord : word));\r\n    fetchStats();\r\n  };\r\n\r\n  const handleWordDeleted = (wordId) => {\r\n    setWords(words.filter(word => word.id !== wordId));\r\n    fetchStats();\r\n  };\r\n\r\n  const handleLanguagePairChange = (pairId) => {\r\n    setSelectedLanguagePair(pairId);\r\n  };\r\n\r\n  const toggleMobileMenu = () => {\r\n    setIsMobileMenuOpen(!isMobileMenuOpen);\r\n  };\r\n\r\n  const closeMobileMenu = () => {\r\n    setIsMobileMenuOpen(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"loading\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show auth screen if not logged in\r\n  if (!user) {\r\n    return <Auth onLogin={handleLogin} />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav className=\"navbar\">\r\n          <div className=\"container\">\r\n            <h1 className=\"nav-title\">Word Memory App</h1>\r\n            \r\n            {/* Mobile menu button */}\r\n            <button \r\n              className=\"mobile-menu-btn\"\r\n              onClick={toggleMobileMenu}\r\n              aria-label=\"Toggle navigation menu\"\r\n            >\r\n              <span className={`hamburger ${isMobileMenuOpen ? 'open' : ''}`}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </span>\r\n            </button>\r\n            \r\n            {/* Language Pair Selector */}\r\n            {languagePairs.length > 1 && (\r\n              <div className=\"language-pair-selector\">\r\n                <select \r\n                  value={selectedLanguagePair || ''} \r\n                  onChange={(e) => handleLanguagePairChange(e.target.value)}\r\n                  className=\"pair-select\"\r\n                >\r\n                  {languagePairs.map(pair => (\r\n                    <option key={pair.id} value={pair.id}>\r\n                      {pair.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {/* Navigation links */}\r\n            <div className={`nav-links ${isMobileMenuOpen ? 'mobile-open' : ''}`}>\r\n              <Link to=\"/\" className=\"nav-link\" onClick={closeMobileMenu}>Words</Link>\r\n              <Link to=\"/practice\" className=\"nav-link\" onClick={closeMobileMenu}>Practice</Link>\r\n              <Link to=\"/stats\" className=\"nav-link\" onClick={closeMobileMenu}>Statistics</Link>\r\n              <Link to=\"/preferences\" className=\"nav-link\" onClick={closeMobileMenu}>Languages</Link>\r\n              <Link to=\"/settings\" className=\"nav-link\" onClick={closeMobileMenu}>Settings</Link>\r\n              {user.isAdmin && (\r\n                <Link to=\"/admin\" className=\"nav-link\" onClick={closeMobileMenu}>Admin</Link>\r\n              )}\r\n              <button onClick={handleLogout} className=\"nav-link logout-btn\">Logout</button>\r\n            </div>\r\n            \r\n            {/* Mobile menu overlay */}\r\n            {isMobileMenuOpen && (\r\n              <div className=\"mobile-menu-overlay\" onClick={closeMobileMenu}></div>\r\n            )}\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"main-content\">\r\n          <div className=\"container\">\r\n            <Routes>\r\n              <Route \r\n                path=\"/\" \r\n                element={\r\n                  <WordList \r\n                    words={words} \r\n                    onWordUpdated={handleWordUpdated}\r\n                    onWordDeleted={handleWordDeleted}\r\n                  />\r\n                } \r\n              />\r\n\r\n              <Route \r\n                path=\"/practice\" \r\n                element={\r\n                  selectedLanguagePair ? (\r\n                    <Practice \r\n                      words={words}\r\n                      languagePair={languagePairs.find(pair => pair.id === selectedLanguagePair)}\r\n                      onWordUpdated={handleWordUpdated}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"no-language-pair\">\r\n                      <p>Please select a language pair in your preferences to start practicing.</p>\r\n                      <Link to=\"/preferences\" className=\"btn btn-primary\">Go to Preferences</Link>\r\n                    </div>\r\n                  )\r\n                } \r\n              />\r\n              <Route \r\n                path=\"/stats\" \r\n                element={\r\n                  <Statistics \r\n                    stats={stats}\r\n                    words={words}\r\n                    languagePair={languagePairs.find(pair => pair.id === selectedLanguagePair)}\r\n                  />\r\n                } \r\n              />\r\n              <Route \r\n                path=\"/preferences\" \r\n                element={\r\n                  <UserPreferences \r\n                    user={user}\r\n                    onPreferencesUpdate={handlePreferencesUpdate}\r\n                  />\r\n                } \r\n              />\r\n              {user.isAdmin && (\r\n                <Route \r\n                  path=\"/admin\" \r\n                  element={<AdminDashboard user={user} languagePairs={languagePairs} />} \r\n                />\r\n              )}\r\n              <Route \r\n                path=\"/settings\" \r\n                element={<Settings user={user} />} \r\n              />\r\n            </Routes>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}