{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magshimim\\\\Documents\\\\wordGame\\\\client\\\\src\\\\components\\\\Practice.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Practice = ({\n  words,\n  onWordUpdated\n}) => {\n  _s();\n  const [currentMode, setCurrentMode] = useState(null); // null = main menu, 'knowledge', 'flashcards'\n\n  const handleModeSelect = mode => {\n    setCurrentMode(mode);\n  };\n  const handleExit = () => {\n    setCurrentMode(null);\n  };\n\n  // Main menu\n  if (currentMode === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-main-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-menu-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Practice Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"practice-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"practice-option knowledge-check\",\n            onClick: () => handleModeSelect('knowledge'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-icon\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Knowledge Check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Test your knowledge level with interactive quizzes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"practice-option flashcards\",\n            onClick: () => handleModeSelect('flashcards'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-icon\",\n              children: \"\\uD83C\\uDCCF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Flash Cards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Traditional flash card practice mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Knowledge Check Mode\n  if (currentMode === 'knowledge') {\n    return /*#__PURE__*/_jsxDEV(KnowledgeCheck, {\n      words: words,\n      onWordUpdated: onWordUpdated,\n      onExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Flash Cards Mode\n  if (currentMode === 'flashcards') {\n    return /*#__PURE__*/_jsxDEV(FlashCards, {\n      words: words,\n      onWordUpdated: onWordUpdated,\n      onExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return null;\n};\n\n// Knowledge Check Component with Kahoot-style design and learning algorithm\n_s(Practice, \"QdvPwKuyqopehOUMRRlXQstoUgo=\");\n_c = Practice;\nconst KnowledgeCheck = ({\n  words,\n  onWordUpdated,\n  onExit\n}) => {\n  _s2();\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showHebrew, setShowHebrew] = useState(false);\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [localWords, setLocalWords] = useState([]);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [sessionStats, setSessionStats] = useState({\n    correct: 0,\n    total: 0\n  });\n  const [showResult, setShowResult] = useState(false);\n  useEffect(() => {\n    // Create a local copy of words to prevent issues\n    setLocalWords([...words]);\n\n    // Check if speech synthesis is supported\n    if ('speechSynthesis' in window) {\n      setSpeechSupported(true);\n    }\n  }, [words]);\n\n  // Smart Learning Algorithm - prioritizes words with lower knowledge levels\n  const createSmartPracticeSet = words => {\n    // Filter words that are not mastered (level < 5)\n    const availableWords = words.filter(word => word.userLevel < 5);\n    if (availableWords.length === 0) return [];\n\n    // Weight words based on their knowledge level (lower level = higher weight)\n    const weightedWords = [];\n    availableWords.forEach(word => {\n      // Level 0: appears 5 times, Level 1: 4 times, Level 2: 3 times, etc.\n      const weight = Math.max(1, 5 - word.userLevel);\n      for (let i = 0; i < weight; i++) {\n        weightedWords.push(word);\n      }\n    });\n\n    // Shuffle the weighted array for randomized but prioritized selection\n    const shuffled = [...weightedWords].sort(() => Math.random() - 0.5);\n\n    // Take a subset for the session (max 20 words to keep sessions manageable)\n    const sessionSize = Math.min(20, shuffled.length);\n    return shuffled.slice(0, sessionSize);\n  };\n  useEffect(() => {\n    // Create smart practice set using the learning algorithm\n    const smartPracticeSet = createSmartPracticeSet(localWords);\n    setPracticeWords(smartPracticeSet);\n\n    // Reset state when words change\n    if (smartPracticeSet.length === 0) {\n      setCurrentWordIndex(0);\n      setShowHebrew(false);\n      setSelectedLevel(null);\n    } else if (currentWordIndex >= smartPracticeSet.length) {\n      // If current index is out of bounds, reset to 0\n      setCurrentWordIndex(0);\n      setShowHebrew(false);\n      setSelectedLevel(null);\n    }\n  }, [localWords, currentWordIndex]);\n  const currentWord = practiceWords[currentWordIndex];\n\n  // Speech synthesis functions\n  const speakWord = word => {\n    if (!speechSupported || !word) return;\n\n    // Stop any current speech\n    window.speechSynthesis.cancel();\n    setIsPlaying(true);\n    const utterance = new SpeechSynthesisUtterance(word);\n    utterance.lang = 'en-US';\n    utterance.rate = 0.8; // Slightly slower for learning\n    utterance.pitch = 1;\n    utterance.volume = 1;\n    utterance.onend = () => {\n      setIsPlaying(false);\n    };\n    utterance.onerror = () => {\n      setIsPlaying(false);\n      console.error('Speech synthesis error');\n    };\n    window.speechSynthesis.speak(utterance);\n  };\n  const stopSpeech = () => {\n    if (speechSupported) {\n      window.speechSynthesis.cancel();\n      setIsPlaying(false);\n    }\n  };\n\n  // Auto-play word when it changes\n  useEffect(() => {\n    if (currentWord && speechSupported && !isUpdating) {\n      // Small delay to ensure the component is ready\n      setTimeout(() => {\n        speakWord(currentWord.english);\n      }, 500);\n    }\n\n    // Cleanup function to stop speech when component unmounts or word changes\n    return () => {\n      stopSpeech();\n    };\n  }, [currentWord, speechSupported, isUpdating]);\n\n  // Keyboard shortcuts (desktop only)\n  useEffect(() => {\n    if (isTouchDevice) return; // Skip keyboard shortcuts on touch devices\n\n    const handleKeyPress = event => {\n      if (!currentWord || isUpdating) return;\n\n      // Space bar to play/replay voice\n      if (event.code === 'Space' && !event.target.matches('button')) {\n        event.preventDefault();\n        if (isPlaying) {\n          stopSpeech();\n        } else {\n          speakWord(currentWord.english);\n        }\n      }\n\n      // Escape to stop voice\n      if (event.code === 'Escape' && isPlaying) {\n        stopSpeech();\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentWord, isUpdating, isPlaying, speechSupported, isTouchDevice]);\n  const handleLevelSelect = async level => {\n    if (!currentWord || isUpdating) {\n      return;\n    }\n\n    // Double check that the word still exists in practice words\n    const wordStillExists = practiceWords.find(w => w.id === currentWord.id);\n    if (!wordStillExists) {\n      alert('Word no longer available. Please refresh and try again.');\n      return;\n    }\n    setIsUpdating(true);\n    setSelectedLevel(level);\n    try {\n      const response = await axios.post(`/api/words/${currentWord.id}/progress`, {\n        userLevel: level\n      });\n\n      // Update the word in the parent component\n      onWordUpdated(response.data);\n\n      // For level 5, we don't immediately remove the word from local list\n      // Instead, we update it and let the useEffect handle the filtering\n      setLocalWords(prev => prev.map(word => word.id === currentWord.id ? {\n        ...word,\n        userLevel: level\n      } : word));\n\n      // Wait a bit before moving to next word\n      setTimeout(() => {\n        if (currentWordIndex < practiceWords.length - 1) {\n          setCurrentWordIndex(prev => prev + 1);\n          setShowHebrew(false);\n          setSelectedLevel(null);\n        } else {\n          alert('Knowledge check completed!');\n          onExit();\n        }\n        setIsUpdating(false);\n      }, 1500);\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setSelectedLevel(null);\n      setIsUpdating(false);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n  const getLevelColor = level => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n  if (practiceWords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: onExit,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-words\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No words available for practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"All your words are already mastered (Level 5) or you need to add more words.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onExit,\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentWord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: onExit,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-words\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No words available for practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onExit,\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-fullscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"exit-button\",\n      onClick: onExit,\n      children: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"knowledge-check-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Word \", currentWordIndex + 1, \" of \", practiceWords.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), speechSupported && !isTouchDevice && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voice-help\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"\\uD83C\\uDFA7 Press SPACE to replay \\u2022 ESC to stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"english-word\",\n            children: currentWord.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), showHebrew && /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"hebrew-word\",\n            children: currentWord.hebrew\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), speechSupported ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voice-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `voice-btn ${isPlaying ? 'playing' : ''}`,\n              onClick: () => speakWord(currentWord.english),\n              disabled: isPlaying,\n              title: \"Play pronunciation\",\n              children: isPlaying ? '🔊 Playing...' : '🔊 Play'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), isPlaying && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"voice-btn stop-btn\",\n              onClick: stopSpeech,\n              title: \"Stop pronunciation\",\n              children: \"\\u23F9\\uFE0F Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voice-not-supported\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"\\uD83D\\uDD07 Voice not supported in this browser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"knowledge-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `level-btn ${selectedLevel === 0 ? 'selected' : ''}`,\n            onClick: () => handleLevelSelect(0),\n            disabled: selectedLevel !== null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-number\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-label\",\n              children: \"Don't Know\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `level-btn ${selectedLevel === 1 ? 'selected' : ''}`,\n            onClick: () => handleLevelSelect(1),\n            disabled: selectedLevel !== null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-number\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-label\",\n              children: \"Beginner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `level-btn ${selectedLevel === 2 ? 'selected' : ''}`,\n            onClick: () => handleLevelSelect(2),\n            disabled: selectedLevel !== null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-number\",\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-label\",\n              children: \"Basic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `level-btn ${selectedLevel === 3 ? 'selected' : ''}`,\n            onClick: () => handleLevelSelect(3),\n            disabled: selectedLevel !== null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-number\",\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-label\",\n              children: \"Intermediate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `level-btn ${selectedLevel === 4 ? 'selected' : ''}`,\n            onClick: () => handleLevelSelect(4),\n            disabled: selectedLevel !== null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-number\",\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-label\",\n              children: \"Advanced\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `level-btn ${selectedLevel === 5 ? 'selected' : ''}`,\n            onClick: () => handleLevelSelect(5),\n            disabled: selectedLevel !== null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-number\",\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"level-label\",\n              children: \"Mastered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-hebrew-section\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-hebrew-btn\",\n            onClick: () => setShowHebrew(!showHebrew),\n            children: showHebrew ? 'Hide Hebrew' : 'Show Hebrew'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n\n// Flash Cards Component\n_s2(KnowledgeCheck, \"GxjvFatEumHL/oAzO46a86DDv18=\");\n_c2 = KnowledgeCheck;\nconst FlashCards = ({\n  words,\n  onWordUpdated,\n  onExit\n}) => {\n  _s3();\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [practiceMode, setPracticeMode] = useState('all');\n  useEffect(() => {\n    let filtered = [];\n    switch (practiceMode) {\n      case 'new':\n        filtered = words.filter(word => word.userLevel === 0);\n        break;\n      case 'learning':\n        filtered = words.filter(word => word.userLevel > 0 && word.userLevel < 5);\n        break;\n      case 'review':\n        filtered = words.filter(word => word.userLevel > 0);\n        break;\n      default:\n        filtered = words;\n    }\n    setPracticeWords(filtered);\n    setCurrentWordIndex(0);\n    setShowAnswer(false);\n  }, [words, practiceMode]);\n  const currentWord = practiceWords[currentWordIndex];\n  const handleNext = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentWordIndex > 0) {\n      setCurrentWordIndex(currentWordIndex - 1);\n      setShowAnswer(false);\n    }\n  };\n  const handleProgressUpdate = async newLevel => {\n    if (!currentWord) return;\n    try {\n      const response = await axios.post(`/api/words/${currentWord.id}/progress`, {\n        userLevel: newLevel\n      });\n      onWordUpdated(response.data);\n    } catch (error) {\n      console.error('Error updating progress:', error);\n    }\n  };\n  const getLevelColor = level => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n  if (practiceWords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-fullscreen\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: onExit,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-words\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No words available for practice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onExit,\n            children: \"Back to Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-fullscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"exit-button\",\n      onClick: onExit,\n      children: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: practiceMode,\n            onChange: e => setPracticeMode(e.target.value),\n            className: \"practice-mode-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Words\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"new\",\n              children: \"New Words (Level 0)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"learning\",\n              children: \"Learning (Level 1-4)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"review\",\n              children: \"Review (Level 1-5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-progress\",\n            children: [currentWordIndex + 1, \" / \", practiceWords.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"flashcard-word\",\n              children: currentWord.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), showAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flashcard-answer\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: currentWord.hebrew\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"word-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"difficulty-badge\",\n                  style: {\n                    backgroundColor: getLevelColor(currentWord.difficulty)\n                  },\n                  children: [\"Difficulty: \", currentWord.difficulty]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"level-badge\",\n                  style: {\n                    backgroundColor: getLevelColor(currentWord.userLevel)\n                  },\n                  children: [\"Your Level: \", currentWord.userLevel]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentWordIndex === 0,\n            children: \"\\u2190 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-answer-btn\",\n            onClick: () => setShowAnswer(!showAnswer),\n            children: showAnswer ? 'Hide Answer' : 'Show Answer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentWordIndex === practiceWords.length - 1,\n            children: \"Next \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), showAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleProgressUpdate(Math.max(0, currentWord.userLevel - 1)),\n            disabled: currentWord.userLevel === 0,\n            children: \"Decrease Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Current Level: \", currentWord.userLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleProgressUpdate(Math.min(5, currentWord.userLevel + 1)),\n            disabled: currentWord.userLevel === 5,\n            children: \"Increase Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this);\n};\n_s3(FlashCards, \"aUNsny1zZcCG2W6ieMQ6lRi/8lw=\");\n_c3 = FlashCards;\nexport default Practice;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Practice\");\n$RefreshReg$(_c2, \"KnowledgeCheck\");\n$RefreshReg$(_c3, \"FlashCards\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Practice","words","onWordUpdated","_s","currentMode","setCurrentMode","handleModeSelect","mode","handleExit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","KnowledgeCheck","onExit","FlashCards","_c","_s2","currentWordIndex","setCurrentWordIndex","showHebrew","setShowHebrew","selectedLevel","setSelectedLevel","practiceWords","setPracticeWords","isUpdating","setIsUpdating","localWords","setLocalWords","speechSupported","setSpeechSupported","sessionStats","setSessionStats","correct","total","showResult","setShowResult","window","createSmartPracticeSet","availableWords","filter","word","userLevel","length","weightedWords","forEach","weight","Math","max","i","push","shuffled","sort","random","sessionSize","min","slice","smartPracticeSet","currentWord","speakWord","speechSynthesis","cancel","setIsPlaying","utterance","SpeechSynthesisUtterance","lang","rate","pitch","volume","onend","onerror","console","error","speak","stopSpeech","setTimeout","english","isTouchDevice","handleKeyPress","event","code","target","matches","preventDefault","isPlaying","document","addEventListener","removeEventListener","handleLevelSelect","level","wordStillExists","find","w","id","alert","response","post","data","prev","map","getLevelColor","colors","hebrew","disabled","title","_c2","_s3","showAnswer","setShowAnswer","practiceMode","setPracticeMode","filtered","handleNext","handlePrevious","handleProgressUpdate","newLevel","value","onChange","e","style","backgroundColor","difficulty","_c3","$RefreshReg$"],"sources":["C:/Users/Magshimim/Documents/wordGame/client/src/components/Practice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Practice.css';\n\nconst Practice = ({ words, onWordUpdated }) => {\n  const [currentMode, setCurrentMode] = useState(null); // null = main menu, 'knowledge', 'flashcards'\n\n  const handleModeSelect = (mode) => {\n    setCurrentMode(mode);\n  };\n\n  const handleExit = () => {\n    setCurrentMode(null);\n  };\n\n  // Main menu\n  if (currentMode === null) {\n    return (\n      <div className=\"practice-main-menu\">\n        <div className=\"practice-menu-container\">\n          <h1>Practice Mode</h1>\n          <div className=\"practice-options\">\n            <button \n              className=\"practice-option knowledge-check\"\n              onClick={() => handleModeSelect('knowledge')}\n            >\n              <div className=\"option-icon\">📊</div>\n              <div className=\"option-content\">\n                <h3>Knowledge Check</h3>\n                <p>Test your knowledge level with interactive quizzes</p>\n              </div>\n            </button>\n            \n            <button \n              className=\"practice-option flashcards\"\n              onClick={() => handleModeSelect('flashcards')}\n            >\n              <div className=\"option-icon\">🃏</div>\n              <div className=\"option-content\">\n                <h3>Flash Cards</h3>\n                <p>Traditional flash card practice mode</p>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Knowledge Check Mode\n  if (currentMode === 'knowledge') {\n    return <KnowledgeCheck words={words} onWordUpdated={onWordUpdated} onExit={handleExit} />;\n  }\n\n  // Flash Cards Mode\n  if (currentMode === 'flashcards') {\n    return <FlashCards words={words} onWordUpdated={onWordUpdated} onExit={handleExit} />;\n  }\n\n  return null;\n};\n\n// Knowledge Check Component with Kahoot-style design and learning algorithm\nconst KnowledgeCheck = ({ words, onWordUpdated, onExit }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showHebrew, setShowHebrew] = useState(false);\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [localWords, setLocalWords] = useState([]);\n  const [speechSupported, setSpeechSupported] = useState(false);\n  const [sessionStats, setSessionStats] = useState({ correct: 0, total: 0 });\n  const [showResult, setShowResult] = useState(false);\n\n  useEffect(() => {\n    // Create a local copy of words to prevent issues\n    setLocalWords([...words]);\n    \n    // Check if speech synthesis is supported\n    if ('speechSynthesis' in window) {\n      setSpeechSupported(true);\n    }\n  }, [words]);\n\n  // Smart Learning Algorithm - prioritizes words with lower knowledge levels\n  const createSmartPracticeSet = (words) => {\n    // Filter words that are not mastered (level < 5)\n    const availableWords = words.filter(word => word.userLevel < 5);\n    \n    if (availableWords.length === 0) return [];\n    \n    // Weight words based on their knowledge level (lower level = higher weight)\n    const weightedWords = [];\n    \n    availableWords.forEach(word => {\n      // Level 0: appears 5 times, Level 1: 4 times, Level 2: 3 times, etc.\n      const weight = Math.max(1, 5 - word.userLevel);\n      for (let i = 0; i < weight; i++) {\n        weightedWords.push(word);\n      }\n    });\n    \n    // Shuffle the weighted array for randomized but prioritized selection\n    const shuffled = [...weightedWords].sort(() => Math.random() - 0.5);\n    \n    // Take a subset for the session (max 20 words to keep sessions manageable)\n    const sessionSize = Math.min(20, shuffled.length);\n    return shuffled.slice(0, sessionSize);\n  };\n\n  useEffect(() => {\n    // Create smart practice set using the learning algorithm\n    const smartPracticeSet = createSmartPracticeSet(localWords);\n    setPracticeWords(smartPracticeSet);\n    \n    // Reset state when words change\n    if (smartPracticeSet.length === 0) {\n      setCurrentWordIndex(0);\n      setShowHebrew(false);\n      setSelectedLevel(null);\n    } else if (currentWordIndex >= smartPracticeSet.length) {\n      // If current index is out of bounds, reset to 0\n      setCurrentWordIndex(0);\n      setShowHebrew(false);\n      setSelectedLevel(null);\n    }\n  }, [localWords, currentWordIndex]);\n\n  const currentWord = practiceWords[currentWordIndex];\n\n  // Speech synthesis functions\n  const speakWord = (word) => {\n    if (!speechSupported || !word) return;\n    \n    // Stop any current speech\n    window.speechSynthesis.cancel();\n    \n    setIsPlaying(true);\n    \n    const utterance = new SpeechSynthesisUtterance(word);\n    utterance.lang = 'en-US';\n    utterance.rate = 0.8; // Slightly slower for learning\n    utterance.pitch = 1;\n    utterance.volume = 1;\n    \n    utterance.onend = () => {\n      setIsPlaying(false);\n    };\n    \n    utterance.onerror = () => {\n      setIsPlaying(false);\n      console.error('Speech synthesis error');\n    };\n    \n    window.speechSynthesis.speak(utterance);\n  };\n\n  const stopSpeech = () => {\n    if (speechSupported) {\n      window.speechSynthesis.cancel();\n      setIsPlaying(false);\n    }\n  };\n\n  // Auto-play word when it changes\n  useEffect(() => {\n    if (currentWord && speechSupported && !isUpdating) {\n      // Small delay to ensure the component is ready\n      setTimeout(() => {\n        speakWord(currentWord.english);\n      }, 500);\n    }\n    \n    // Cleanup function to stop speech when component unmounts or word changes\n    return () => {\n      stopSpeech();\n    };\n  }, [currentWord, speechSupported, isUpdating]);\n\n  // Keyboard shortcuts (desktop only)\n  useEffect(() => {\n    if (isTouchDevice) return; // Skip keyboard shortcuts on touch devices\n    \n    const handleKeyPress = (event) => {\n      if (!currentWord || isUpdating) return;\n      \n      // Space bar to play/replay voice\n      if (event.code === 'Space' && !event.target.matches('button')) {\n        event.preventDefault();\n        if (isPlaying) {\n          stopSpeech();\n        } else {\n          speakWord(currentWord.english);\n        }\n      }\n      \n      // Escape to stop voice\n      if (event.code === 'Escape' && isPlaying) {\n        stopSpeech();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentWord, isUpdating, isPlaying, speechSupported, isTouchDevice]);\n\n  const handleLevelSelect = async (level) => {\n    if (!currentWord || isUpdating) {\n      return;\n    }\n    \n    // Double check that the word still exists in practice words\n    const wordStillExists = practiceWords.find(w => w.id === currentWord.id);\n    if (!wordStillExists) {\n      alert('Word no longer available. Please refresh and try again.');\n      return;\n    }\n    \n    setIsUpdating(true);\n    setSelectedLevel(level);\n    \n    try {\n      const response = await axios.post(`/api/words/${currentWord.id}/progress`, {\n        userLevel: level\n      });\n      \n      // Update the word in the parent component\n      onWordUpdated(response.data);\n      \n      // For level 5, we don't immediately remove the word from local list\n      // Instead, we update it and let the useEffect handle the filtering\n      setLocalWords(prev => \n        prev.map(word => \n          word.id === currentWord.id \n            ? { ...word, userLevel: level }\n            : word\n        )\n      );\n      \n      // Wait a bit before moving to next word\n      setTimeout(() => {\n        if (currentWordIndex < practiceWords.length - 1) {\n          setCurrentWordIndex(prev => prev + 1);\n          setShowHebrew(false);\n          setSelectedLevel(null);\n        } else {\n          alert('Knowledge check completed!');\n          onExit();\n        }\n        setIsUpdating(false);\n      }, 1500);\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setSelectedLevel(null);\n      setIsUpdating(false);\n      alert('Failed to update progress. Please try again.');\n    }\n  };\n\n  const getLevelColor = (level) => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n\n  if (practiceWords.length === 0) {\n    return (\n      <div className=\"practice-fullscreen\">\n        <button className=\"exit-button\" onClick={onExit}>✕</button>\n        <div className=\"practice-content\">\n          <div className=\"no-words\">\n            <h2>No words available for practice</h2>\n            <p>All your words are already mastered (Level 5) or you need to add more words.</p>\n            <button onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentWord) {\n    return (\n      <div className=\"practice-fullscreen\">\n        <button className=\"exit-button\" onClick={onExit}>✕</button>\n        <div className=\"practice-content\">\n          <div className=\"no-words\">\n            <h2>No words available for practice</h2>\n            <button onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"practice-fullscreen\">\n      <button className=\"exit-button\" onClick={onExit}>✕</button>\n      <div className=\"practice-content\">\n        <div className=\"knowledge-check-container\">\n          <div className=\"progress-info\">\n            <span>Word {currentWordIndex + 1} of {practiceWords.length}</span>\n            {speechSupported && !isTouchDevice && (\n              <div className=\"voice-help\">\n                <small>🎧 Press SPACE to replay • ESC to stop</small>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"word-display\">\n            <h2 className=\"english-word\">{currentWord.english}</h2>\n            {showHebrew && (\n              <h3 className=\"hebrew-word\">{currentWord.hebrew}</h3>\n            )}\n            \n            {speechSupported ? (\n              <div className=\"voice-controls\">\n                <button \n                  className={`voice-btn ${isPlaying ? 'playing' : ''}`}\n                  onClick={() => speakWord(currentWord.english)}\n                  disabled={isPlaying}\n                  title=\"Play pronunciation\"\n                >\n                  {isPlaying ? '🔊 Playing...' : '🔊 Play'}\n                </button>\n                \n                {isPlaying && (\n                  <button \n                    className=\"voice-btn stop-btn\"\n                    onClick={stopSpeech}\n                    title=\"Stop pronunciation\"\n                  >\n                    ⏹️ Stop\n                  </button>\n                )}\n              </div>\n            ) : (\n              <div className=\"voice-not-supported\">\n                <small>🔇 Voice not supported in this browser</small>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"knowledge-buttons\">\n            <button \n              className={`level-btn ${selectedLevel === 0 ? 'selected' : ''}`}\n              onClick={() => handleLevelSelect(0)}\n              disabled={selectedLevel !== null}\n            >\n              <span className=\"level-number\">0</span>\n              <span className=\"level-label\">Don't Know</span>\n            </button>\n            \n            <button \n              className={`level-btn ${selectedLevel === 1 ? 'selected' : ''}`}\n              onClick={() => handleLevelSelect(1)}\n              disabled={selectedLevel !== null}\n            >\n              <span className=\"level-number\">1</span>\n              <span className=\"level-label\">Beginner</span>\n            </button>\n            \n            <button \n              className={`level-btn ${selectedLevel === 2 ? 'selected' : ''}`}\n              onClick={() => handleLevelSelect(2)}\n              disabled={selectedLevel !== null}\n            >\n              <span className=\"level-number\">2</span>\n              <span className=\"level-label\">Basic</span>\n            </button>\n            \n            <button \n              className={`level-btn ${selectedLevel === 3 ? 'selected' : ''}`}\n              onClick={() => handleLevelSelect(3)}\n              disabled={selectedLevel !== null}\n            >\n              <span className=\"level-number\">3</span>\n              <span className=\"level-label\">Intermediate</span>\n            </button>\n            \n            <button \n              className={`level-btn ${selectedLevel === 4 ? 'selected' : ''}`}\n              onClick={() => handleLevelSelect(4)}\n              disabled={selectedLevel !== null}\n            >\n              <span className=\"level-number\">4</span>\n              <span className=\"level-label\">Advanced</span>\n            </button>\n            \n            <button \n              className={`level-btn ${selectedLevel === 5 ? 'selected' : ''}`}\n              onClick={() => handleLevelSelect(5)}\n              disabled={selectedLevel !== null}\n            >\n              <span className=\"level-number\">5</span>\n              <span className=\"level-label\">Mastered</span>\n            </button>\n          </div>\n          \n          <div className=\"show-hebrew-section\">\n            <button \n              className=\"show-hebrew-btn\"\n              onClick={() => setShowHebrew(!showHebrew)}\n            >\n              {showHebrew ? 'Hide Hebrew' : 'Show Hebrew'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Flash Cards Component\nconst FlashCards = ({ words, onWordUpdated, onExit }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  const [practiceWords, setPracticeWords] = useState([]);\n  const [practiceMode, setPracticeMode] = useState('all');\n\n  useEffect(() => {\n    let filtered = [];\n    switch (practiceMode) {\n      case 'new':\n        filtered = words.filter(word => word.userLevel === 0);\n        break;\n      case 'learning':\n        filtered = words.filter(word => word.userLevel > 0 && word.userLevel < 5);\n        break;\n      case 'review':\n        filtered = words.filter(word => word.userLevel > 0);\n        break;\n      default:\n        filtered = words;\n    }\n    setPracticeWords(filtered);\n    setCurrentWordIndex(0);\n    setShowAnswer(false);\n  }, [words, practiceMode]);\n\n  const currentWord = practiceWords[currentWordIndex];\n\n  const handleNext = () => {\n    if (currentWordIndex < practiceWords.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentWordIndex > 0) {\n      setCurrentWordIndex(currentWordIndex - 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handleProgressUpdate = async (newLevel) => {\n    if (!currentWord) return;\n    \n    try {\n      const response = await axios.post(`/api/words/${currentWord.id}/progress`, {\n        userLevel: newLevel\n      });\n      onWordUpdated(response.data);\n    } catch (error) {\n      console.error('Error updating progress:', error);\n    }\n  };\n\n  const getLevelColor = (level) => {\n    const colors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#198754', '#0d6efd'];\n    return colors[Math.min(level, 5)];\n  };\n\n  if (practiceWords.length === 0) {\n    return (\n      <div className=\"practice-fullscreen\">\n        <button className=\"exit-button\" onClick={onExit}>✕</button>\n        <div className=\"practice-content\">\n          <div className=\"no-words\">\n            <h2>No words available for practice</h2>\n            <button onClick={onExit}>Back to Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"practice-fullscreen\">\n      <button className=\"exit-button\" onClick={onExit}>✕</button>\n      <div className=\"practice-content\">\n        <div className=\"flashcard-container\">\n          <div className=\"flashcard-header\">\n            <select \n              value={practiceMode} \n              onChange={(e) => setPracticeMode(e.target.value)}\n              className=\"practice-mode-select\"\n            >\n              <option value=\"all\">All Words</option>\n              <option value=\"new\">New Words (Level 0)</option>\n              <option value=\"learning\">Learning (Level 1-4)</option>\n              <option value=\"review\">Review (Level 1-5)</option>\n            </select>\n            \n            <div className=\"flashcard-progress\">\n              {currentWordIndex + 1} / {practiceWords.length}\n            </div>\n          </div>\n          \n          <div className=\"flashcard\">\n            <div className=\"flashcard-content\">\n              <h2 className=\"flashcard-word\">{currentWord.english}</h2>\n              {showAnswer && (\n                <div className=\"flashcard-answer\">\n                  <h3>{currentWord.hebrew}</h3>\n                  <div className=\"word-meta\">\n                    <span \n                      className=\"difficulty-badge\"\n                      style={{backgroundColor: getLevelColor(currentWord.difficulty)}}\n                    >\n                      Difficulty: {currentWord.difficulty}\n                    </span>\n                    <span \n                      className=\"level-badge\"\n                      style={{backgroundColor: getLevelColor(currentWord.userLevel)}}\n                    >\n                      Your Level: {currentWord.userLevel}\n                    </span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flashcard-controls\">\n            <button onClick={handlePrevious} disabled={currentWordIndex === 0}>\n              ← Previous\n            </button>\n            \n            <button \n              className=\"show-answer-btn\"\n              onClick={() => setShowAnswer(!showAnswer)}\n            >\n              {showAnswer ? 'Hide Answer' : 'Show Answer'}\n            </button>\n            \n            <button onClick={handleNext} disabled={currentWordIndex === practiceWords.length - 1}>\n              Next →\n            </button>\n          </div>\n          \n          {showAnswer && (\n            <div className=\"progress-controls\">\n              <button \n                onClick={() => handleProgressUpdate(Math.max(0, currentWord.userLevel - 1))}\n                disabled={currentWord.userLevel === 0}\n              >\n                Decrease Level\n              </button>\n              <span>Current Level: {currentWord.userLevel}</span>\n              <button \n                onClick={() => handleProgressUpdate(Math.min(5, currentWord.userLevel + 1))}\n                disabled={currentWord.userLevel === 5}\n              >\n                Increase Level\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Practice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}